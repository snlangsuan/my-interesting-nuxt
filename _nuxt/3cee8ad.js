/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[2],Array(468).concat([function(e,t,n){"use strict";n.d(t,"fc",(function(){return base.fc})),n.d(t,"ed",(function(){return base.ed})),n.d(t,"fd",(function(){return base.fd})),n.d(t,"nf",(function(){return base.nf})),n.d(t,"zf",(function(){return base.zf})),n.d(t,"pd",(function(){return base.pd})),n.d(t,"qd",(function(){return base.qd})),n.d(t,"rd",(function(){return base.rd})),n.d(t,"sd",(function(){return base.sd})),n.d(t,"td",(function(){return base.td})),n.d(t,"ud",(function(){return base.ud})),n.d(t,"vd",(function(){return base.vd})),n.d(t,"yd",(function(){return base.yd})),n.d(t,"zd",(function(){return base.zd})),n.d(t,"Ad",(function(){return base.Ad})),n.d(t,"Dd",(function(){return base.Dd})),n.d(t,"Ed",(function(){return base.Ed})),n.d(t,"Fd",(function(){return base.Fd})),n.d(t,"Gd",(function(){return base.Gd})),n.d(t,"Hd",(function(){return base.Hd})),n.d(t,"Id",(function(){return base.Id})),n.d(t,"Jd",(function(){return base.Jd})),n.d(t,"Kd",(function(){return base.Kd})),n.d(t,"Ld",(function(){return base.Ld})),n.d(t,"Md",(function(){return base.Md})),n.d(t,"Nd",(function(){return base.Nd})),n.d(t,"Od",(function(){return base.Od})),n.d(t,"Pd",(function(){return base.Pd})),n.d(t,"Qd",(function(){return base.Qd})),n.d(t,"Rd",(function(){return base.Rd})),n.d(t,"Ud",(function(){return base.Ud})),n.d(t,"Wd",(function(){return base.Wd})),n.d(t,"Zd",(function(){return base.Zd})),n.d(t,"ae",(function(){return base.ae})),n.d(t,"be",(function(){return base.be})),n.d(t,"ce",(function(){return base.ce})),n.d(t,"de",(function(){return base.de})),n.d(t,"ee",(function(){return base.ee})),n.d(t,"ge",(function(){return base.ge})),n.d(t,"he",(function(){return base.he})),n.d(t,"ie",(function(){return base.ie})),n.d(t,"ne",(function(){return base.ne})),n.d(t,"pe",(function(){return base.pe})),n.d(t,"qe",(function(){return base.qe})),n.d(t,"re",(function(){return base.re})),n.d(t,"se",(function(){return base.se})),n.d(t,"te",(function(){return base.te})),n.d(t,"ue",(function(){return base.ue})),n.d(t,"ve",(function(){return base.ve})),n.d(t,"we",(function(){return base.we})),n.d(t,"xe",(function(){return base.xe})),n.d(t,"ye",(function(){return base.ye})),n.d(t,"Ae",(function(){return base.Ae})),n.d(t,"Be",(function(){return base.Be})),n.d(t,"Ce",(function(){return base.Ce})),n.d(t,"De",(function(){return base.De})),n.d(t,"Fe",(function(){return base.Fe})),n.d(t,"Ge",(function(){return base.Ge})),n.d(t,"He",(function(){return base.He})),n.d(t,"Ie",(function(){return base.Ie})),n.d(t,"Je",(function(){return base.Je})),n.d(t,"Ke",(function(){return base.Ke})),n.d(t,"Le",(function(){return base.Le})),n.d(t,"Me",(function(){return base.Me})),n.d(t,"Ne",(function(){return base.Ne})),n.d(t,"Qe",(function(){return base.Qe})),n.d(t,"Re",(function(){return base.Re})),n.d(t,"Se",(function(){return base.Se})),n.d(t,"Te",(function(){return base.Te})),n.d(t,"Ue",(function(){return base.Ue})),n.d(t,"Ve",(function(){return base.Ve})),n.d(t,"Ye",(function(){return base.Ye})),n.d(t,"Ze",(function(){return base.Ze})),n.d(t,"af",(function(){return base.af})),n.d(t,"bf",(function(){return base.bf})),n.d(t,"cf",(function(){return base.cf})),n.d(t,"df",(function(){return base.df})),n.d(t,"ff",(function(){return base.ff})),n.d(t,"gf",(function(){return base.gf})),n.d(t,"hf",(function(){return base.hf})),n.d(t,"if",(function(){return base.if})),n.d(t,"jf",(function(){return base.jf})),n.d(t,"kf",(function(){return base.kf})),n.d(t,"lf",(function(){return base.lf})),n.d(t,"mf",(function(){return base.mf})),n.d(t,"of",(function(){return base.of})),n.d(t,"pf",(function(){return base.pf})),n.d(t,"qf",(function(){return base.qf})),n.d(t,"rf",(function(){return base.rf})),n.d(t,"uf",(function(){return base.uf})),n.d(t,"xf",(function(){return base.xf})),n.d(t,"yf",(function(){return base.yf})),n.d(t,"Bf",(function(){return base.Bf})),n.d(t,"Ef",(function(){return base.Ef})),n.d(t,"Ff",(function(){return base.Ff})),n.d(t,"Gf",(function(){return base.Gf})),n.d(t,"wf",(function(){return base.wf})),n.d(t,"Vd",(function(){return base.Vd})),n.d(t,"je",(function(){return base.je})),n.d(t,"oe",(function(){return base.oe})),n.d(t,"fe",(function(){return base.fe})),n.d(t,"vf",(function(){return base.vf})),n.d(t,"Xd",(function(){return base.Xd})),n.d(t,"ze",(function(){return base.ze})),n.d(t,"tf",(function(){return base.tf})),n.d(t,"Td",(function(){return base.Td})),n.d(t,"le",(function(){return base.le})),n.d(t,"Xe",(function(){return base.Xe})),n.d(t,"Oe",(function(){return base.Oe})),n.d(t,"wd",(function(){return base.wd})),n.d(t,"Pe",(function(){return base.Pe})),n.d(t,"Cf",(function(){return base.Cf})),n.d(t,"Yd",(function(){return base.Yd})),n.d(t,"Df",(function(){return base.Df})),n.d(t,"Ee",(function(){return base.Ee})),n.d(t,"Cd",(function(){return base.Cd})),n.d(t,"ke",(function(){return base.ke})),n.d(t,"We",(function(){return base.We})),n.d(t,"Af",(function(){return base.Af})),n.d(t,"xd",(function(){return base.xd})),n.d(t,"Bd",(function(){return base.Bd})),n.d(t,"sf",(function(){return base.sf})),n.d(t,"ef",(function(){return base.ef})),n.d(t,"Sd",(function(){return base.Sd})),n.d(t,"me",(function(){return base.me})),n.d(t,"yb",(function(){return base.yb})),n.d(t,"N",(function(){return base.N})),n.d(t,"a",(function(){return base.a})),n.d(t,"b",(function(){return base.b})),n.d(t,"c",(function(){return base.c})),n.d(t,"d",(function(){return base.d})),n.d(t,"e",(function(){return base.e})),n.d(t,"f",(function(){return base.f})),n.d(t,"g",(function(){return base.g})),n.d(t,"h",(function(){return base.h})),n.d(t,"i",(function(){return base.i})),n.d(t,"j",(function(){return base.j})),n.d(t,"k",(function(){return base.k})),n.d(t,"l",(function(){return base.l})),n.d(t,"n",(function(){return base.n})),n.d(t,"m",(function(){return base.m})),n.d(t,"o",(function(){return base.o})),n.d(t,"r",(function(){return base.r})),n.d(t,"p",(function(){return base.p})),n.d(t,"q",(function(){return base.q})),n.d(t,"s",(function(){return base.s})),n.d(t,"t",(function(){return base.t})),n.d(t,"u",(function(){return base.u})),n.d(t,"v",(function(){return base.v})),n.d(t,"w",(function(){return base.w})),n.d(t,"x",(function(){return base.x})),n.d(t,"y",(function(){return base.y})),n.d(t,"z",(function(){return base.z})),n.d(t,"A",(function(){return base.A})),n.d(t,"B",(function(){return base.B})),n.d(t,"C",(function(){return base.C})),n.d(t,"D",(function(){return base.D})),n.d(t,"E",(function(){return base.E})),n.d(t,"F",(function(){return base.F})),n.d(t,"G",(function(){return base.G})),n.d(t,"H",(function(){return base.H})),n.d(t,"I",(function(){return base.I})),n.d(t,"J",(function(){return base.J})),n.d(t,"L",(function(){return base.L})),n.d(t,"M",(function(){return base.M})),n.d(t,"K",(function(){return base.K})),n.d(t,"O",(function(){return base.O})),n.d(t,"P",(function(){return base.P})),n.d(t,"Q",(function(){return base.Q})),n.d(t,"R",(function(){return base.R})),n.d(t,"S",(function(){return base.S})),n.d(t,"T",(function(){return base.T})),n.d(t,"U",(function(){return base.U})),n.d(t,"W",(function(){return base.W})),n.d(t,"V",(function(){return base.V})),n.d(t,"nc",(function(){return base.nc})),n.d(t,"X",(function(){return base.X})),n.d(t,"Y",(function(){return base.Y})),n.d(t,"Z",(function(){return base.Z})),n.d(t,"bb",(function(){return base.bb})),n.d(t,"ab",(function(){return base.ab})),n.d(t,"cb",(function(){return base.cb})),n.d(t,"db",(function(){return base.db})),n.d(t,"eb",(function(){return base.eb})),n.d(t,"fb",(function(){return base.fb})),n.d(t,"gb",(function(){return base.gb})),n.d(t,"hb",(function(){return base.hb})),n.d(t,"ib",(function(){return base.ib})),n.d(t,"jb",(function(){return base.jb})),n.d(t,"lb",(function(){return base.lb})),n.d(t,"pb",(function(){return base.pb})),n.d(t,"ob",(function(){return base.ob})),n.d(t,"qb",(function(){return base.qb})),n.d(t,"rb",(function(){return base.rb})),n.d(t,"tb",(function(){return base.tb})),n.d(t,"sb",(function(){return base.sb})),n.d(t,"ub",(function(){return base.ub})),n.d(t,"vb",(function(){return base.vb})),n.d(t,"wb",(function(){return base.wb})),n.d(t,"xb",(function(){return base.xb})),n.d(t,"Bb",(function(){return base.Bb})),n.d(t,"Cb",(function(){return base.Cb})),n.d(t,"Db",(function(){return base.Db})),n.d(t,"Eb",(function(){return base.Eb})),n.d(t,"Fb",(function(){return base.Fb})),n.d(t,"Gb",(function(){return base.Gb})),n.d(t,"Hb",(function(){return base.Hb})),n.d(t,"Ib",(function(){return base.Ib})),n.d(t,"Jb",(function(){return base.Jb})),n.d(t,"zb",(function(){return base.zb})),n.d(t,"Ab",(function(){return base.Ab})),n.d(t,"Kb",(function(){return base.Kb})),n.d(t,"Qb",(function(){return base.Qb})),n.d(t,"Lb",(function(){return base.Lb})),n.d(t,"Ob",(function(){return base.Ob})),n.d(t,"Mb",(function(){return base.Mb})),n.d(t,"Nb",(function(){return base.Nb})),n.d(t,"Pb",(function(){return base.Pb})),n.d(t,"Rb",(function(){return base.Rb})),n.d(t,"Sb",(function(){return base.Sb})),n.d(t,"Tb",(function(){return base.Tb})),n.d(t,"Ub",(function(){return base.Ub})),n.d(t,"Vb",(function(){return base.Vb})),n.d(t,"Wb",(function(){return base.Wb})),n.d(t,"Xb",(function(){return base.Xb})),n.d(t,"Yb",(function(){return base.Yb})),n.d(t,"cc",(function(){return base.cc})),n.d(t,"Zb",(function(){return base.Zb})),n.d(t,"ac",(function(){return base.ac})),n.d(t,"bc",(function(){return base.bc})),n.d(t,"ec",(function(){return base.ec})),n.d(t,"dc",(function(){return base.dc})),n.d(t,"gc",(function(){return base.gc})),n.d(t,"hc",(function(){return base.hc})),n.d(t,"ic",(function(){return base.ic})),n.d(t,"jc",(function(){return base.jc})),n.d(t,"kc",(function(){return base.kc})),n.d(t,"lc",(function(){return base.lc})),n.d(t,"mc",(function(){return base.mc})),n.d(t,"oc",(function(){return base.oc})),n.d(t,"pc",(function(){return base.pc})),n.d(t,"rc",(function(){return base.rc})),n.d(t,"uc",(function(){return base.uc})),n.d(t,"vc",(function(){return base.vc})),n.d(t,"sc",(function(){return base.sc})),n.d(t,"tc",(function(){return base.tc})),n.d(t,"qc",(function(){return base.qc})),n.d(t,"wc",(function(){return base.wc})),n.d(t,"yc",(function(){return base.yc})),n.d(t,"zc",(function(){return base.zc})),n.d(t,"Ac",(function(){return base.Ac})),n.d(t,"Bc",(function(){return base.Bc})),n.d(t,"Cc",(function(){return base.Cc})),n.d(t,"Dc",(function(){return base.Dc})),n.d(t,"Ic",(function(){return base.Ic})),n.d(t,"Gc",(function(){return base.Gc})),n.d(t,"Hc",(function(){return base.Hc})),n.d(t,"Fc",(function(){return base.Fc})),n.d(t,"Ec",(function(){return base.Ec})),n.d(t,"Kc",(function(){return base.Kc})),n.d(t,"Sc",(function(){return base.Sc})),n.d(t,"bd",(function(){return base.bd})),n.d(t,"Lc",(function(){return base.Lc})),n.d(t,"Rc",(function(){return base.Rc})),n.d(t,"Jc",(function(){return base.Jc})),n.d(t,"Mc",(function(){return base.Mc})),n.d(t,"Nc",(function(){return base.Nc})),n.d(t,"Oc",(function(){return base.Oc})),n.d(t,"Pc",(function(){return base.Pc})),n.d(t,"Qc",(function(){return base.Qc})),n.d(t,"Uc",(function(){return base.Uc})),n.d(t,"Tc",(function(){return base.Tc})),n.d(t,"Wc",(function(){return base.Wc})),n.d(t,"Xc",(function(){return base.Xc})),n.d(t,"Yc",(function(){return base.Yc})),n.d(t,"Zc",(function(){return base.Zc})),n.d(t,"ad",(function(){return base.ad})),n.d(t,"cd",(function(){return base.cd})),n.d(t,"dd",(function(){return base.dd})),n.d(t,"gd",(function(){return base.gd})),n.d(t,"hd",(function(){return base.hd})),n.d(t,"id",(function(){return base.id})),n.d(t,"jd",(function(){return base.jd})),n.d(t,"kd",(function(){return base.kd})),n.d(t,"ld",(function(){return base.ld})),n.d(t,"md",(function(){return base.md})),n.d(t,"nd",(function(){return base.nd})),n.d(t,"Vc",(function(){return base.Vc})),n.d(t,"kb",(function(){return base.kb})),n.d(t,"xc",(function(){return base.xc})),n.d(t,"od",(function(){return base.od})),n.d(t,"mb",(function(){return base.mb})),n.d(t,"nb",(function(){return base.nb}));var r=n(472),o=(n(567),n(493)),c=n(711),l=n(714),d=n(548);class h{fetch(path,e){return fetch(path,e)}now(){return performance.now()}encode(text,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(text)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(o.b)().get("IS_BROWSER")){Object(o.b)().setPlatform("browser",new h);try{d.a.registerManager(l.a.URL_SCHEME,new l.b)}catch(e){}try{d.a.registerManager(c.a.URL_SCHEME,new c.b)}catch(e){}}n(863);var f=n(519),m=n(479),y=n(549),x=n(637),v=n(473);Object(r.b)();const w={buffer:f.a,cast:m.a,clone:y.a,print:x.a};Object(v.f)(w);var base=n(710)},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return h})),n.d(t,"g",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return y})),n.d(t,"j",(function(){return x})),n.d(t,"k",(function(){return v})),n.d(t,"l",(function(){return w})),n.d(t,"n",(function(){return O})),n.d(t,"m",(function(){return k})),n.d(t,"o",(function(){return I})),n.d(t,"r",(function(){return S})),n.d(t,"p",(function(){return N})),n.d(t,"q",(function(){return T})),n.d(t,"s",(function(){return C})),n.d(t,"t",(function(){return A})),n.d(t,"u",(function(){return j})),n.d(t,"w",(function(){return $})),n.d(t,"v",(function(){return E})),n.d(t,"x",(function(){return R})),n.d(t,"y",(function(){return F})),n.d(t,"z",(function(){return D})),n.d(t,"A",(function(){return _})),n.d(t,"B",(function(){return M})),n.d(t,"C",(function(){return L})),n.d(t,"D",(function(){return z})),n.d(t,"E",(function(){return P})),n.d(t,"F",(function(){return B})),n.d(t,"G",(function(){return W})),n.d(t,"H",(function(){return U})),n.d(t,"I",(function(){return V})),n.d(t,"J",(function(){return G})),n.d(t,"K",(function(){return H})),n.d(t,"M",(function(){return K})),n.d(t,"N",(function(){return Y})),n.d(t,"L",(function(){return X})),n.d(t,"O",(function(){return Z})),n.d(t,"P",(function(){return J})),n.d(t,"Q",(function(){return Q})),n.d(t,"R",(function(){return ee})),n.d(t,"S",(function(){return te})),n.d(t,"T",(function(){return ne})),n.d(t,"U",(function(){return re})),n.d(t,"W",(function(){return ae})),n.d(t,"V",(function(){return se})),n.d(t,"mc",(function(){return ie})),n.d(t,"X",(function(){return oe})),n.d(t,"Y",(function(){return ue})),n.d(t,"Z",(function(){return ce})),n.d(t,"bb",(function(){return le})),n.d(t,"ab",(function(){return de})),n.d(t,"cb",(function(){return he})),n.d(t,"db",(function(){return pe})),n.d(t,"eb",(function(){return fe})),n.d(t,"fb",(function(){return me})),n.d(t,"gb",(function(){return be})),n.d(t,"hb",(function(){return ge})),n.d(t,"ib",(function(){return ye})),n.d(t,"jb",(function(){return xe})),n.d(t,"lb",(function(){return ve})),n.d(t,"pb",(function(){return we})),n.d(t,"ob",(function(){return Oe})),n.d(t,"qb",(function(){return ke})),n.d(t,"rb",(function(){return Ie})),n.d(t,"tb",(function(){return Se})),n.d(t,"sb",(function(){return Ne})),n.d(t,"ub",(function(){return Te})),n.d(t,"vb",(function(){return Ce})),n.d(t,"wb",(function(){return Ae})),n.d(t,"xb",(function(){return je})),n.d(t,"Ab",(function(){return $e})),n.d(t,"Bb",(function(){return Ee})),n.d(t,"Cb",(function(){return Re})),n.d(t,"Db",(function(){return Fe})),n.d(t,"Eb",(function(){return De})),n.d(t,"Fb",(function(){return _e})),n.d(t,"Hb",(function(){return Me})),n.d(t,"Ib",(function(){return Le})),n.d(t,"Jb",(function(){return ze})),n.d(t,"Gb",(function(){return Pe})),n.d(t,"yb",(function(){return Be})),n.d(t,"zb",(function(){return We})),n.d(t,"Kb",(function(){return Ue})),n.d(t,"Qb",(function(){return Ve})),n.d(t,"Lb",(function(){return Ge})),n.d(t,"Ob",(function(){return He})),n.d(t,"Mb",(function(){return qe})),n.d(t,"Nb",(function(){return Ke})),n.d(t,"Pb",(function(){return Ye})),n.d(t,"Rb",(function(){return Xe})),n.d(t,"Sb",(function(){return Ze})),n.d(t,"Tb",(function(){return Je})),n.d(t,"Ub",(function(){return Qe})),n.d(t,"Vb",(function(){return et})),n.d(t,"Wb",(function(){return tt})),n.d(t,"Xb",(function(){return nt})),n.d(t,"Yb",(function(){return at})),n.d(t,"cc",(function(){return st})),n.d(t,"Zb",(function(){return it})),n.d(t,"ac",(function(){return ot})),n.d(t,"bc",(function(){return ut})),n.d(t,"ec",(function(){return ct})),n.d(t,"dc",(function(){return lt})),n.d(t,"fc",(function(){return ht})),n.d(t,"gc",(function(){return pt})),n.d(t,"hc",(function(){return ft})),n.d(t,"ic",(function(){return mt})),n.d(t,"jc",(function(){return bt})),n.d(t,"kc",(function(){return gt})),n.d(t,"lc",(function(){return yt})),n.d(t,"nc",(function(){return xt})),n.d(t,"oc",(function(){return vt})),n.d(t,"qc",(function(){return wt})),n.d(t,"tc",(function(){return Ot})),n.d(t,"uc",(function(){return kt})),n.d(t,"rc",(function(){return It})),n.d(t,"sc",(function(){return St})),n.d(t,"pc",(function(){return Nt})),n.d(t,"vc",(function(){return Tt})),n.d(t,"xc",(function(){return Ct})),n.d(t,"yc",(function(){return At})),n.d(t,"zc",(function(){return jt})),n.d(t,"Ac",(function(){return $t})),n.d(t,"Bc",(function(){return Et})),n.d(t,"Cc",(function(){return Rt})),n.d(t,"Hc",(function(){return Ft})),n.d(t,"Fc",(function(){return Dt})),n.d(t,"Gc",(function(){return _t})),n.d(t,"Ec",(function(){return Mt})),n.d(t,"Dc",(function(){return Lt})),n.d(t,"Jc",(function(){return zt})),n.d(t,"Rc",(function(){return Pt})),n.d(t,"ad",(function(){return Bt})),n.d(t,"Kc",(function(){return Wt})),n.d(t,"Qc",(function(){return Ut})),n.d(t,"Ic",(function(){return Vt})),n.d(t,"Lc",(function(){return Gt})),n.d(t,"Mc",(function(){return Ht})),n.d(t,"Nc",(function(){return qt})),n.d(t,"Oc",(function(){return Kt})),n.d(t,"Pc",(function(){return Yt})),n.d(t,"Tc",(function(){return Xt})),n.d(t,"Sc",(function(){return Zt})),n.d(t,"Vc",(function(){return Jt})),n.d(t,"Wc",(function(){return Qt})),n.d(t,"Xc",(function(){return en})),n.d(t,"Yc",(function(){return tn})),n.d(t,"Zc",(function(){return nn})),n.d(t,"bd",(function(){return rn})),n.d(t,"cd",(function(){return an})),n.d(t,"dd",(function(){return sn})),n.d(t,"ed",(function(){return on})),n.d(t,"fd",(function(){return un})),n.d(t,"gd",(function(){return cn})),n.d(t,"hd",(function(){return ln})),n.d(t,"id",(function(){return dn})),n.d(t,"jd",(function(){return hn})),n.d(t,"kd",(function(){return pn})),n.d(t,"Uc",(function(){return fn})),n.d(t,"kb",(function(){return mn})),n.d(t,"wc",(function(){return bn})),n.d(t,"ld",(function(){return gn})),n.d(t,"mb",(function(){return yn})),n.d(t,"nb",(function(){return xn}));const r="Abs",o="Acos",c="Acosh",l="Add",d="AddN",h="All",f="Any",m="ArgMax",y="ArgMin",x="Asin",v="Asinh",w="Atan",O="Atanh",k="Atan2",I="AvgPool",S="AvgPoolGrad",N="AvgPool3D",T="AvgPool3DGrad",C="BatchMatMul",A="BatchToSpaceND",j="Bincount",$="BroadcastTo",E="BroadcastArgs",R="Cast",F="Ceil",D="ClipByValue",_="Complex",M="ComplexAbs",L="Concat",z="Conv2D",P="Conv2DBackpropFilter",B="Conv2DBackpropInput",W="Conv3D",U="Conv3DBackpropFilterV2",V="Conv3DBackpropInputV2",G="Cos",H="Cosh",K="Cumprod",Y="Cumsum",X="CropAndResize",Z="DenseBincount",J="DepthToSpace",Q="DepthwiseConv2dNative",ee="DepthwiseConv2dNativeBackpropFilter",te="DepthwiseConv2dNativeBackpropInput",ne="Diag",re="Dilation2D",ae="Dilation2DBackpropInput",se="Dilation2DBackpropFilter",ie="RealDiv",oe="Einsum",ue="Elu",ce="EluGrad",le="Erf",de="Equal",he="Exp",pe="ExpandDims",fe="Expm1",me="FFT",be="Fill",ge="FlipLeftRight",ye="Floor",xe="FloorDiv",ve="FusedBatchNorm",we="GatherV2",Oe="GatherNd",ke="Greater",Ie="GreaterEqual",Se="Identity",Ne="IFFT",Te="Imag",Ce="IsFinite",Ae="IsInf",je="IsNan",$e="LeakyRelu",Ee="Less",Re="LessEqual",Fe="LinSpace",De="Log",_e="Log1p",Me="LogicalAnd",Le="LogicalNot",ze="LogicalOr",Pe="LogSoftmax",Be="LRN",We="LRNGrad",Ue="Max",Ve="Maximum",Ge="MaxPool",He="MaxPoolGrad",qe="MaxPool3D",Ke="MaxPool3DGrad",Ye="MaxPoolWithArgmax",Xe="Mean",Ze="Min",Je="Minimum",Qe="MirrorPad",et="Mod",tt="Multinomial",nt="Multiply",at="Neg",st="NotEqual",it="NonMaxSuppressionV3",ot="NonMaxSuppressionV4",ut="NonMaxSuppressionV5",ct="OnesLike",lt="OneHot",ht="Pack",pt="PadV2",ft="Pow",mt="Prelu",bt="Prod",gt="Range",yt="Real",xt="Reciprocal",vt="Relu",wt="Reshape",Ot="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",It="ResizeBilinear",St="ResizeBilinearGrad",Nt="Relu6",Tt="Reverse",Ct="Round",At="Rsqrt",jt="ScatterNd",$t="SearchSorted",Et="Select",Rt="Selu",Ft="Slice",Dt="Sin",_t="Sinh",Mt="Sign",Lt="Sigmoid",zt="Softplus",Pt="Sqrt",Bt="Sum",Wt="SpaceToBatchND",Ut="SplitV",Vt="Softmax",Gt="SparseFillEmptyRows",Ht="SparseReshape",qt="SparseSegmentMean",Kt="SparseSegmentSum",Yt="SparseToDense",Xt="SquaredDifference",Zt="Square",Jt="StridedSlice",Qt="StringNGrams",en="StringSplit",tn="StringToHashBucketFast",nn="Sub",rn="Tan",an="Tanh",sn="Tile",on="TopK",un="Transform",cn="Transpose",ln="Unique",dn="Unpack",hn="UnsortedSegmentSum",pn="ZerosLike",fn="Step",mn="FromPixels",bn="RotateWithOffset",gn="_FusedMatMul",yn="FusedConv2D",xn="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(472),o=n(547);function c(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const c=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const l=(...e)=>{r.a.startScope(n);try{const t=c(...e);return Object(o.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(l,"name",{value:n,configurable:!0}),l}},function(e,t,n){"use strict";n.d(t,"c",(function(){return h})),n.d(t,"a",(function(){return y})),n.d(t,"b",(function(){return x}));var r=n(472),o=n(493),c=n(473),l=n(547),d=n(474);function h(e,t){let n=e;if(Object(l.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(l.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(o.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&f(e,r,[]),r}function f(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(l.A)(e))return void Object(l.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(l.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(l.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let i=0;i<e.length;++i)f(e[i],r,n.concat(i))}function m(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function y(e,t,n,o="numeric"){if(e instanceof c.a)return m(o,e.dtype,t,n),e;let f=Object(l.r)(e);if("string"!==f&&["bool","int32","float32"].indexOf(o)>=0&&(f=o),m(o,f,t,n),null==e||!Object(l.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const y=h(e,f);Object(l.A)(e)||Array.isArray(e)||(e=[e]);const x="string"!==f?Object(d.toTypedArray)(e,f):Object(l.m)(e,[],!0);return r.a.makeTensor(x,y,f)}function x(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,i)=>y(e,`${t}[${i}]`,n,r)))}},function(e,t,n){"use strict";n.d(t,"b",(function(){return N})),n.d(t,"a",(function(){return T}));var r=n(596),o=n(493),c=n(635),l=n(469),d=n(566),h=n(595),f=n(474),m=n(547);class y{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new v)}profileKernel(e,t,n){let r;const c=()=>{r=n()};let l;const d=f.now();if(this.backendTimer.timerAvailable())l=this.backendTimer.time(c);else{c();for(const output of r)output.dataSync();l=Promise.resolve({kernelMs:f.now()-d})}if(Object(o.b)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<r.length;i++){const output=r[i];output.data().then((t=>{x(t,output.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:l.then((e=>e.kernelMs)),extraInfo:l.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:o,extraInfo:c}=e;n.forEach((e=>{Promise.all([e.data(),r,c]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])}))}))}}function x(e,t,n){if("float32"!==t)return!1;for(let i=0;i<e.length;i++){const t=e[i];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class v{logKernelProfile(e,t,n,r,o,c){const time="number"==typeof r?m.L(`${r}ms`,9):r.error,l=m.L(e,25),d=t.rank,h=t.size,f=m.L(t.shape.toString(),14);let y="";for(const e in o){const input=o[e];if(null!=input){const n=input.shape||t.shape,r=n.length;y+=`${e}: ${r}D ${r>0?n:""} `}}console.log(`%c${l}\t%c${time}\t%c${d}D ${f}\t%c${h}\t%c${y}\t%c${c}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var w=n(473),O=n(486);function k(e){return null!=e.kernelName}class I{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class S{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new I}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let i=0;i<e.length;i++){const t=e[i];if(await this.initializeBackend(t).success)return void await this.setBackend(t)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(h.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new y(this.backendInstance),!0}setupRegisteredKernels(){Object(d.c)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(d.c)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,h.b(`Initialization of backend ${e} failed`),h.b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return h.b(`Initialization of backend ${e} failed`),h.b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((a,b)=>this.registryFactory[b].priority-this.registryFactory[a].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let i=0;i<e.length;i++){const t=e[i],{success:n,asyncInit:r}=this.initializeBackend(t);if(r||n)return{name:t,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,o=this.readSync(t),c=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,o,n.shape,n.dtype,c),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return S.nextTensorId++}nextVariableId(){return S.nextVariableId++}clone(e){const t=T.runKernel(l.tb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return T.runKernel(l.x,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Object(d.b)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let o=0;n.forEach((e=>{o+="complex64"===e.dtype?3:1}));const c=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=r-t-o-c;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),o=this.state.numBytes,c=this.state.numTensors;let l,h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=k(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(k(e)){const{kernelName:t,inputs:o,attrs:c}=e;null==this.backendName&&this.backend;const f=Object(d.b)(t,this.backendName);m.b(null!=f,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),l=()=>{const e=this.backend.numDataIds();h=f.kernelFunc({inputs:o,attrs:c,backend:this.backend});const l=Array.isArray(h)?h:[h];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,l);const d=l.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,o,d);n=this.saveTensorsForBackwardMode(e)}return d}}else{const{forwardFunc:t}=e,o=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};l=()=>{const e=this.backend.numDataIds();h=this.tidy((()=>t(this.backend,o)));const n=Array.isArray(h)?h:[h];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,e,n),n}}const{inputs:y,attrs:x}=e,v=k(e)?null:e.backwardsFunc;let w;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(w=this.profiler.profileKernel(f,y,(()=>l())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(w),t=w.outputs):t=l()})),r&&this.addTapeNode(f,y,t,v,n,x),this.state.profiling&&this.state.activeProfile.kernels.push({name:f,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(y).map((e=>null!=y[e]?y[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:w.timeMs,extraInfo:w.extraInfo}),Array.isArray(h)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Object(d.a)(e);if(null!=r){const e=r.inputsToSave||[],o=r.outputsToSave||[];let c;r.saveAllInputs?(m.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),c=Object.keys(t).map((e=>t[e]))):c=e.map((e=>t[e]));const l=n.filter(((e,i)=>o[i]));return c.concat(l)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=e;"string"===n&&m.z(e[0])&&(o=e.map((e=>f.encodeString(e))));const c=r.write(o,t,n),l=new w.a(t,n,c,this.nextTensorId());if(this.trackTensor(l,r),"string"===n){const e=this.state.tensorInfo.get(c),t=Object(m.f)(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return l}makeTensorFromDataId(e,t,n,r){const o={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:o}=e,c=new w.a(r,o,n,this.nextTensorId());return this.trackTensor(c,t),c}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const o=new w.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(a,e){this.state.numTensors++,"string"===a.dtype&&this.state.numStringTensors++;let t=0;"complex64"!==a.dtype&&"string"!==a.dtype&&(t=a.size*m.g(a.dtype)),this.state.numBytes+=t,this.state.tensorInfo.has(a.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(a.dataId,{backend:e||this.backend,dtype:a.dtype,shape:a.shape,bytes:t})),a instanceof w.c||this.track(a)}incRef(a,e){this.trackTensor(a,e),this.backend.incRef(a.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(a){if(!this.state.tensorInfo.has(a.dataId))return;const e=this.state.tensorInfo.get(a.dataId);if(this.state.numTensors--,"string"===a.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==a.dtype&&"string"!==a.dtype){const e=a.size*m.g(a.dtype);this.state.numBytes-=e}e.backend.disposeData(a.dataId)&&this.removeDataId(a.dataId,e.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,o,c){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},h=Object(d.a)(e);null!=h&&(r=h.gradFunc),null!=r&&(l.gradient=e=>(e=e.map(((e,i)=>{if(null==e){const output=n[i],e=m.F(output.size,output.dtype);return this.makeTensor(e,output.shape,output.dtype)}return e})),r(e.length>1?e:e[0],o,c))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(O.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let i=0;i<this.state.activeScope.track.length;i++){const e=this.state.activeScope.track[i];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(m.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));m.b(o instanceof w.a,(()=>"The result y returned by f() must be a tensor."));const c=function(e,t,n){const r={},o={};for(let i=0;i<t.length;i++)r[t[i].id]=!0;for(let i=0;i<e.length;i++){const n=e[i],c=n.inputs;for(const e in c){const input=c[e];let l=!1;for(let e=0;e<t.length;e++)if(r[input.id]){n.outputs.forEach((output=>r[output.id]=!0)),l=!0,o[n.id]=!0;break}if(l)break}}const c={};c[n.id]=!0;const l={};for(let i=e.length-1;i>=0;i--){const t=e[i],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(c[t.outputs[e].id]){for(const e in n)c[n[e].id]=!0,l[t.id]=!0;break}}const d=[];for(let i=0;i<e.length;i++){const t=e[i];if(o[t.id]&&l[t.id]){const e={};for(const n in t.inputs){const o=t.inputs[n];r[o.id]&&(e[n]=o)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,d.push(n)}}return d}(this.state.activeTape,t,o);if(!r&&0===c.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[o.id]=null==n?function(e){const t=Object(m.D)(Object(m.O)(e),"float32");return T.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,r){for(let i=t.length-1;i>=0;i--){const o=t[i],c=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?c.push(n):c.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const l=o.gradient(c);for(const t in o.inputs){if(!(t in l))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);const c=n((()=>l[t]()));if("float32"!==c.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${c.dtype}'`);const d=o.inputs[t];if(!m.a(c.shape,d.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${c.shape}', which does not match the shape of the input '${d.shape}'`);if(null==e[d.id])e[d.id]=c;else{const t=e[d.id];e[d.id]=r(t,c),t.dispose()}}}}(e,c,(e=>this.tidy(e)),C);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:o,grads:r}}))}customGrad(e){return m.b(m.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;m.b(t.every((e=>e instanceof w.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((input,i)=>{r[i]=input}));return this.runKernelFunc({forwardFunc:(r,o)=>(n=e(...t,o),m.b(n.value instanceof w.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),m.b(m.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const o=n.gradFunc(e,r),c=Array.isArray(o)?o:[o];m.b(c.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),m.b(c.every((e=>e instanceof w.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const l={};return c.forEach(((e,i)=>{l[i]=()=>e})),l},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(f.now)(),n=await this.backend.time(e);return n.wallMs=Object(f.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new I;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function N(){const e=Object(c.b)();if(null==e._tfengine){const t=new o.a(e);e._tfengine=new S(t)}return Object(o.c)(e._tfengine.ENV),Object(w.g)((()=>e._tfengine)),e._tfengine}S.nextTensorId=0,S.nextVariableId=0;const T=N();function C(a,b){const e={a:a,b:b};return T.runKernel(l.d,e)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"g",(function(){return O})),n.d(t,"f",(function(){return k})),n.d(t,"e",(function(){return I})),n.d(t,"a",(function(){return S})),n.d(t,"d",(function(){return N})),n.d(t,"c",(function(){return T}));var r=n(635),o=n(547);function c(e,t,n,r){const c=Object(o.j)(t),d=function(e,t,n,r){const c=Object(o.O)(t),d=r[r.length-1],h=new Array(d).fill(0),m=t.length,y="complex64"===n?f(e):e;if(m>1)for(let e=0;e<c/d;e++){const t=e*d;for(let e=0;e<d;e++)h[e]=Math.max(h[e],l(y[t+e],0,n).length)}return h}(e,t,n,c),m=t.length,y=h(e,t,n,c,d),x=["Tensor"];return r&&(x.push(`  dtype: ${n}`),x.push(`  rank: ${m}`),x.push(`  shape: [${t}]`),x.push("  values:")),x.push(y.map((e=>"    "+e)).join("\n")),x.join("\n")}function l(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(o.z)(e)?`'${e}'`:"bool"===n?d(e):parseFloat(e.toFixed(7)).toString(),Object(o.L)(r,t)}function d(e){return 0===e?"false":"true"}function h(e,t,n,r,o,c=!0){const m="complex64"===n?2:1,y=t[0],x=t.length;if(0===x){if("complex64"===n){return[l(f(e)[0],0,n)]}return"bool"===n?[d(e[0])]:[e[0].toString()]}if(1===x){if(y>20){const t=3*m;let r=Array.from(e.slice(0,t)),c=Array.from(e.slice((y-3)*m,y*m));return"complex64"===n&&(r=f(r),c=f(c)),["["+r.map(((e,i)=>l(e,o[i],n))).join(", ")+", ..., "+c.map(((e,i)=>l(e,o[y-3+i],n))).join(", ")+"]"]}return["["+("complex64"===n?f(e):Array.from(e)).map(((e,i)=>l(e,o[i],n))).join(", ")+"]"]}const v=t.slice(1),w=r.slice(1),O=r[0]*m,k=[];if(y>20){for(let i=0;i<3;i++){const t=i*O,r=t+O;k.push(...h(e.slice(t,r),v,n,w,o,!1))}k.push("...");for(let i=y-3;i<y;i++){const t=i*O,r=t+O;k.push(...h(e.slice(t,r),v,n,w,o,i===y-1))}}else for(let i=0;i<y;i++){const t=i*O,r=t+O;k.push(...h(e.slice(t,r),v,n,w,o,i===y-1))}const I=2===x?",":"";k[0]="["+k[0]+I;for(let i=1;i<k.length-1;i++)k[i]=" "+k[i]+I;let S=",\n";for(let i=2;i<x;i++)S+="\n";return k[k.length-1]=" "+k[k.length-1]+"]"+(c?"":S),k}function f(e){const t=[];for(let i=0;i<e.length;i+=2)t.push([e[i],e[i+1]]);return t}var m=n(474);class y{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=o.O(e),null!=n){const e=n.length;o.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o.n(t,this.size),this.strides=Object(o.j)(e)}set(e,...t){0===t.length&&(t=[0]),o.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let i=0;for(const t of e){if(t<0||t>=this.shape[i]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}i++}let t=e[e.length-1];for(let i=0;i<e.length-1;++i)t+=this.strides[i]*e[i];return this.values[t]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let i=0;i<e.length-1;++i)t+=this.strides[i]*e[i];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let i=0;i<t.length-1;++i)t[i]=Math.floor(e/this.strides[i]),e-=t[i]*this.strides[i];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return x().makeTensor(this.values,this.shape,this.dtype)}}let x=null,v=null,w=null;function O(e){x=e}function k(e){v=e}function I(e){w=e}class S{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=o.O(e),this.strides=Object(o.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return v.buffer(this.shape,this.dtype,e)}bufferSync(){return v.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(o.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(o.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const data=x().read(this.dataId);if("string"===this.dtype){const e=await data;try{return e.map((b=>m.decodeString(b)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return data}dataToGPU(e){return this.throwIfDisposed(),x().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const data=x().readSync(this.dataId);if("string"===this.dtype)try{return data.map((b=>m.decodeString(b)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return data}async bytes(){this.throwIfDisposed();const data=await x().read(this.dataId);return"string"===this.dtype?data:new Uint8Array(data.buffer)}dispose(){this.isDisposed||(x().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return v.print(this,e)}clone(){return this.throwIfDisposed(),v.clone(this)}toString(e=!1){return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),v.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),x().makeVariable(this,e,t,n)}}function N(){return Object(r.a)("Tensor",(()=>S))}Object.defineProperty(S,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),N();class T extends S{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!o.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);x().disposeTensor(this),this.dataId=e.dataId,x().incRef(this,null)}dispose(){x().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(T,Symbol.hasInstance,{value:e=>e instanceof S&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return o.M})),n.d(t,"shuffleCombo",(function(){return o.N})),n.d(t,"clamp",(function(){return o.i})),n.d(t,"nearestLargerEven",(function(){return o.H})),n.d(t,"swap",(function(){return o.S})),n.d(t,"sum",(function(){return o.R})),n.d(t,"randUniform",(function(){return o.J})),n.d(t,"distSquared",(function(){return o.l})),n.d(t,"assert",(function(){return o.b})),n.d(t,"assertShapesMatch",(function(){return o.e})),n.d(t,"assertNonNull",(function(){return o.d})),n.d(t,"flatten",(function(){return o.m})),n.d(t,"sizeFromShape",(function(){return o.O})),n.d(t,"isScalarShape",(function(){return o.y})),n.d(t,"arraysEqual",(function(){return o.a})),n.d(t,"isInt",(function(){return o.v})),n.d(t,"tanh",(function(){return o.T})),n.d(t,"sizeToSquarishShape",(function(){return o.P})),n.d(t,"createShuffledIndices",(function(){return o.k})),n.d(t,"rightPad",(function(){return o.L})),n.d(t,"repeatedTry",(function(){return o.K})),n.d(t,"inferFromImplicitShape",(function(){return o.s})),n.d(t,"parseAxisParam",(function(){return o.I})),n.d(t,"squeezeShape",(function(){return o.Q})),n.d(t,"getTypedArrayFromDType",(function(){return o.o})),n.d(t,"getArrayFromDType",(function(){return o.n})),n.d(t,"checkConversionForErrors",(function(){return o.h})),n.d(t,"isValidDtype",(function(){return o.B})),n.d(t,"hasEncodingLoss",(function(){return o.p})),n.d(t,"isTypedArray",(function(){return o.A})),n.d(t,"bytesPerElement",(function(){return o.g})),n.d(t,"bytesFromStringArray",(function(){return o.f})),n.d(t,"isString",(function(){return o.z})),n.d(t,"isBoolean",(function(){return o.t})),n.d(t,"isNumber",(function(){return o.w})),n.d(t,"inferDtype",(function(){return o.r})),n.d(t,"isFunction",(function(){return o.u})),n.d(t,"nearestDivisor",(function(){return o.G})),n.d(t,"computeStrides",(function(){return o.j})),n.d(t,"toNestedArray",(function(){return o.U})),n.d(t,"makeOnesTypedArray",(function(){return o.D})),n.d(t,"makeZerosTypedArray",(function(){return o.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return o.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return o.c})),n.d(t,"locToIndex",(function(){return o.C})),n.d(t,"indexToLoc",(function(){return o.q})),n.d(t,"isPromise",(function(){return o.x})),n.d(t,"hexToLong",(function(){return d})),n.d(t,"fingerPrint64",(function(){return S})),n.d(t,"createScalarValue",(function(){return N})),n.d(t,"toTypedArray",(function(){return T})),n.d(t,"now",(function(){return C})),n.d(t,"fetch",(function(){return A})),n.d(t,"encodeString",(function(){return j})),n.d(t,"decodeString",(function(){return $}));var r=n(493),o=n(547),c=n(860);const l=n.n(c).a||c;function d(e){return l.fromString(e,!0,16)}const h=d("c3a5c85c97cb3127"),f=d("b492b66fbe98f273"),m=d("9ae16a3b2f90404f");function y(e){return e.xor(e.shru(47))}function x(s,e,t){const n=s.slice(e,e+t);return l.fromBytes(Array.from(n),!0,!0)}function v(s,e){return x(s,e,8)}function w(s,e){return x(s,e,4)}function O(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function k(u,e,t=d("9ddfea08eb382d69")){let a=u.xor(e).mul(t);a=a.xor(a.shru(47));let b=e.xor(a).mul(t);return b=b.xor(b.shru(47)),b=b.mul(t),b}function I(s,e,a,b){return function(e,t,n,r,a,b){a=a.add(e),b=O(b.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),b=b.add(O(a,44)),[a.add(r),b.add(o)]}(v(s,e),v(s,e+8),v(s,e+16),v(s,e+24),a,b)}function S(s,e=s.length){const t=l.fromNumber(81,!0);if(e<=32)return e<=16?function(s,e=s.length){if(e>=8){const t=m.add(2*e),a=v(s,0).add(m),b=v(s,e-8);return k(O(b,37).mul(t).add(a),O(a,25).add(b).mul(t),t)}if(e>=4){const t=m.add(2*e);return k(w(s,0).shl(3).add(e),w(s,e-4),t)}if(e>0){const t=s[0]+(s[e>>1]<<8),n=e+(s[e-1]<<2);return y(m.mul(t).xor(h.mul(n))).mul(m)}return m}(s,e):function(s,e=s.length){const t=m.add(2*e),a=v(s,0).mul(f),b=v(s,8),n=v(s,e-8).mul(t),r=v(s,e-16).mul(m);return k(O(a.add(b),43).add(O(n,30)).add(r),a.add(O(b.add(m),18)).add(n),t)}(s,e);if(e<=64)return function(s,e=s.length){const t=m.add(2*e),a=v(s,0).mul(m),b=v(s,8),n=v(s,e-8).mul(t),r=v(s,e-16).mul(m),o=O(a.add(b),43).add(O(n,30)).add(r),c=k(o,a.add(O(b.add(m),18)).add(n),t),l=v(s,16).mul(t),d=v(s,24),g=o.add(v(s,e-32)).mul(t),h=c.add(v(s,e-24)).mul(t);return k(O(l.add(d),43).add(O(g,30)).add(h),l.add(O(d.add(a),18)).add(g),t)}(s,e);let n=t,r=t.mul(f).add(113),o=y(r.mul(m).add(113)).mul(m),c=[l.UZERO,l.UZERO],d=[l.UZERO,l.UZERO];n=n.mul(m).add(v(s,0));let x=0;const S=64*(e-1>>6),N=S+(e-1&63)-63;do{n=O(n.add(r).add(c[0]).add(v(s,x+8)),37).mul(f),r=O(r.add(c[1]).add(v(s,x+48)),42).mul(f),n=n.xor(d[1]),r=r.add(c[0]).add(v(s,x+40)),o=O(o.add(d[0]),33).mul(f),c=I(s,x,c[1].mul(f),n.add(d[0])),d=I(s,x+32,o.add(d[1]),r.add(v(s,x+16))),[o,n]=[n,o],x+=64}while(x!==S);const T=f.add(o.and(255).shl(1));return x=N,d[0]=d[0].add(e-1&63),c[0]=c[0].add(d[0]),d[0]=d[0].add(c[0]),n=O(n.add(r).add(c[0]).add(v(s,x+8)),37).mul(T),r=O(r.add(c[1]).add(v(s,x+48)),42).mul(T),n=n.xor(d[1].mul(9)),r=r.add(c[0].mul(9).add(v(s,x+40))),o=O(o.add(d[0]),33).mul(T),c=I(s,x,c[1].mul(T),n.add(d[0])),d=I(s,x+32,o.add(d[1]),r.add(v(s,x+16))),[o,n]=[n,o],k(k(c[0],d[0],T).add(y(r).mul(h)).add(o),k(c[1],d[1],T).add(n),T)}function N(e,t){return"string"===t?j(e):T([e],t)}function T(a,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(a)&&(a=o.m(a)),Object(r.b)().getBool("DEBUG")&&o.h(a,e),function(a,e){return a instanceof Float32Array&&"float32"===e||a instanceof Int32Array&&"int32"===e||a instanceof Uint8Array&&"bool"===e}(a,e))return a;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(a);if("int32"===e)return new Int32Array(a);if("bool"===e){const e=new Uint8Array(a.length);for(let i=0;i<e.length;++i)0!==Math.round(a[i])&&(e[i]=1);return e}throw new Error(`Unknown data type ${e}`)}function C(){return Object(r.b)().platform.now()}function A(path,e){return Object(r.b)().platform.fetch(path,e)}function j(s,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.encode(s,e)}function $(e,t="utf-8"){return t=t||"utf-8",Object(r.b)().platform.decode(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({reshape_:function(e,t){const n={x:Object(c.a)(e,"x","reshape","string_or_numeric")},l={shape:t};return r.a.runKernel(o.qc,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({mul_:function(a,b){let e=Object(l.a)(a,"a","mul"),t=Object(l.a)(b,"b","mul");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Xb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o.a})),n.d(t,"b",(function(){return c.a})),n.d(t,"c",(function(){return l.a})),n.d(t,"d",(function(){return d.a})),n.d(t,"e",(function(){return h.a})),n.d(t,"f",(function(){return f.a})),n.d(t,"g",(function(){return m.a})),n.d(t,"h",(function(){return O})),n.d(t,"i",(function(){return k})),n.d(t,"j",(function(){return I})),n.d(t,"k",(function(){return S.a})),n.d(t,"l",(function(){return N.a})),n.d(t,"m",(function(){return T.a})),n.d(t,"n",(function(){return C.a})),n.d(t,"o",(function(){return A.a})),n.d(t,"p",(function(){return j})),n.d(t,"q",(function(){return $})),n.d(t,"r",(function(){return E})),n.d(t,"s",(function(){return R})),n.d(t,"t",(function(){return F.a})),n.d(t,"u",(function(){return D.a})),n.d(t,"v",(function(){return _.a})),n.d(t,"w",(function(){return M.a})),n.d(t,"x",(function(){return z})),n.d(t,"y",(function(){return P.a})),n.d(t,"z",(function(){return div.a})),n.d(t,"B",(function(){return B.a})),n.d(t,"C",(function(){return W.a})),n.d(t,"D",(function(){return U.a})),n.d(t,"E",(function(){return V.a})),n.d(t,"F",(function(){return K})),n.d(t,"G",(function(){return Y.a})),n.d(t,"H",(function(){return X.a})),n.d(t,"J",(function(){return Z.a})),n.d(t,"K",(function(){return J.a})),n.d(t,"L",(function(){return Q.a})),n.d(t,"N",(function(){return ee.a})),n.d(t,"P",(function(){return te.a})),n.d(t,"Q",(function(){return ne.a})),n.d(t,"R",(function(){return re.a})),n.d(t,"S",(function(){return ae.a})),n.d(t,"T",(function(){return se.a})),n.d(t,"U",(function(){return ie.a})),n.d(t,"V",(function(){return oe.a})),n.d(t,"W",(function(){return ue.a})),n.d(t,"X",(function(){return ce.a})),n.d(t,"Y",(function(){return le.a})),n.d(t,"Z",(function(){return de.a})),n.d(t,"ab",(function(){return fe})),n.d(t,"bb",(function(){return me.a})),n.d(t,"cb",(function(){return be.a})),n.d(t,"db",(function(){return ge.a})),n.d(t,"eb",(function(){return ye.a})),n.d(t,"fb",(function(){return xe.a})),n.d(t,"gb",(function(){return ve.a})),n.d(t,"hb",(function(){return we.a})),n.d(t,"ib",(function(){return Oe.a})),n.d(t,"jb",(function(){return ke.a})),n.d(t,"kb",(function(){return Se})),n.d(t,"lb",(function(){return Ne.a})),n.d(t,"mb",(function(){return Te.a})),n.d(t,"nb",(function(){return G.a})),n.d(t,"ob",(function(){return Ce.a})),n.d(t,"pb",(function(){return Ae.a})),n.d(t,"qb",(function(){return je.a})),n.d(t,"rb",(function(){return $e.a})),n.d(t,"sb",(function(){return Ee.a})),n.d(t,"tb",(function(){return Re.a})),n.d(t,"ub",(function(){return Fe})),n.d(t,"vb",(function(){return De})),n.d(t,"wb",(function(){return _e})),n.d(t,"xb",(function(){return Me})),n.d(t,"yb",(function(){return Le.a})),n.d(t,"zb",(function(){return ze.a})),n.d(t,"Bb",(function(){return Pe.a})),n.d(t,"Cb",(function(){return Be.a})),n.d(t,"Db",(function(){return We.a})),n.d(t,"Eb",(function(){return Ue.a})),n.d(t,"Gb",(function(){return sub.a})),n.d(t,"Hb",(function(){return Ve.a})),n.d(t,"Ib",(function(){return Ge.a})),n.d(t,"Jb",(function(){return He.a})),n.d(t,"Kb",(function(){return qe.a})),n.d(t,"Lb",(function(){return Ye})),n.d(t,"Mb",(function(){return H.a})),n.d(t,"Ob",(function(){return Xe.a})),n.d(t,"Pb",(function(){return Ze.a})),n.d(t,"Qb",(function(){return Qe})),n.d(t,"Rb",(function(){return et.a})),n.d(t,"Sb",(function(){return tt.a})),n.d(t,"Tb",(function(){return nt.a})),n.d(t,"Nb",(function(){return at.a})),n.d(t,"A",(function(){return it})),n.d(t,"M",(function(){return hn})),n.d(t,"O",(function(){return pn})),n.d(t,"I",(function(){return r})),n.d(t,"Ab",(function(){return fn})),n.d(t,"Fb",(function(){return mn}));var r={};n.r(r),n.d(r,"conv2d",(function(){return vt})),n.d(r,"depthwiseConv2d",(function(){return kt})),n.d(r,"matMul",(function(){return It}));var o=n(526),c=n(487),l=n(638),d=n(639),h=n(640),f=n(598),m=n(717),y=n(471),x=n(547),v=n(565),w=n(470);const O=Object(w.a)({batchNorm2d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),x.b(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${d.rank}.`)),x.b(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(2===f.rank||1===f.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(2===m.rank||1===m.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${m.rank}.`)),Object(v.a)(l,d,h,m,f,c)}});const k=Object(w.a)({batchNorm3d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),x.b(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${d.rank}.`)),x.b(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(3===f.rank||1===f.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(3===m.rank||1===m.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${m.rank}.`)),Object(v.a)(l,d,h,m,f,c)}});const I=Object(w.a)({batchNorm4d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),x.b(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${d.rank}.`)),x.b(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(4===f.rank||1===f.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(4===m.rank||1===m.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${m.rank}.`)),Object(v.a)(l,d,h,m,f,c)}});var S=n(519),N=n(479),T=n(718),C=n(549),A=n(503);const j=Object(w.a)({concat1d_:function(e){return Object(A.a)(e,0)}});const $=Object(w.a)({concat2d_:function(e,t){return Object(A.a)(e,t)}});const E=Object(w.a)({concat3d_:function(e,t){return Object(A.a)(e,t)}});const R=Object(w.a)({concat4d_:function(e,t){return Object(A.a)(e,t)}});var F=n(641),D=n(527),_=n(642),M=n(719),L=n(720);const z=Object(w.a)({conv3dTranspose_:function(e,filter,t,n,r){const o=Object(y.a)(e,"x","conv3dTranspose"),c=Object(y.a)(filter,"filter","conv3dTranspose");return Object(L.a)(t,o,c,n,r)}});var P=n(569),div=n(481),B=n(600),W=n(570),U=n(514),V=n(571),G=n(475),H=n(550);const K=Object(w.a)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const o=Object(S.a)([e,t],r),c=e<=t?e:t;for(let i=0;i<c;++i)o.set(1,i,i);const l=Object(G.a)(o.toTensor(),[e,t]);if(null==n)return l;if(1===n.length)return Object(H.a)(Object(V.a)(l,0),[n[0],1,1]);if(2===n.length)return Object(H.a)(Object(V.a)(Object(V.a)(l,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(H.a)(Object(V.a)(Object(V.a)(Object(V.a)(l,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Y=n(572),X=n(601),Z=n(602),J=n(515),Q=n(528),ee=n(603),te=n(551),ne=n(644),re=n(721),ae=n(529),se=n(530),ie=n(552),oe=n(604),ue=n(722),ce=n(573),le=n(574),de=n(605),he=n(508),pe=n(491),sub=n(483);const fe=Object(w.a)({moments_:function(e,t=null,n=!1){e=Object(y.a)(e,"x","moments");const r=Object(x.I)(t,e.shape),o=Object(le.a)(e,r,n);let c=o.shape;n||(c=Object(he.e)(o.shape,r));const l=Object(pe.a)(Object(sub.a)(Object(N.a)(e,"float32"),Object(G.a)(o,c)));return{mean:o,variance:Object(le.a)(l,r,n)}}});var me=n(476),be=n(495),ge=n(606),ye=n(645),xe=n(553),ve=n(723),we=n(607),Oe=n(531),ke=n(608),Ie=n(646);const Se=Object(w.a)({randomNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const c=new Ie.a(t,n,r,!1,o),l=Object(S.a)(e,r);for(let i=0;i<l.values.length;i++)l.values[i]=c.nextValue();return l.toTensor()}});var Ne=n(648),Te=n(555),Ce=n(575),Ae=n(484),je=n(649),$e=n(650),Ee=n(576),Re=n(500);const Fe=Object(w.a)({slice1d_:function(e,t,n){const r=Object(y.a)(e,"x","slice1d");return x.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,[t],[n])}});const De=Object(w.a)({slice2d_:function(e,t,n){const r=Object(y.a)(e,"x","slice2d");return x.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,t,n)}});const _e=Object(w.a)({slice3d_:function(e,t,n){const r=Object(y.a)(e,"x","slice3d");return x.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,t,n)}});const Me=Object(w.a)({slice4d_:function(e,t,n){const r=Object(y.a)(e,"x","slice4d");return x.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,t,n)}});var Le=n(725),ze=n(651),Pe=n(532),Be=n(509),We=n(610),Ue=n(533),Ve=n(488),Ge=n(726),He=n(597),qe=n(534),Ke=n(568);function Ye(e,t,n){if(Object(x.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(y.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Ke.a)(e,t,r,n)}var Xe=n(727),Ze=n(556),Je=n(472);function Qe(e,t=!0,n,r){return Je.a.makeVariable(e,t,n,r)}var et=n(501),tt=n(554),nt=n(485),at=n(520),st=n(473);const it=Object(w.a)({dropout_:function(e,t,n,r){const o=Object(y.a)(e,"x","dropout");if(x.b("float32"===o.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`)),x.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof st.a?o.clone():o;const l=function(e,t){if(null==t)return e.shape.slice();if(x.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let i=0;i<e.shape.length;i++)null==t[i]&&null!=e.shape[i]?n.push(e.shape[i]):n.push(t[i]);return n}return t}(o,n),d=1-t,h=Object(div.a)(Object(X.a)(Object(c.a)(Object(Ne.a)(l,0,1,"float32",r),d)),d);return Object(me.a)(o,h)}});var ot=n(614),ut=n(612),ct=n(613),lt=n(652),ht=n(499),pt=n(469),ft=n(486),mt=n(482),bt=n(655),gt=n(643),yt=n(492),xt=n(535);const vt=Object(w.a)({fusedConv2d_:function({x:e,filter:filter,strides:t,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(h=h||"linear",!1===Object(xt.d)(Je.a.state.gradientDepth,h)){x.b("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let y=Object(D.a)(e,filter,t,n,r,o,l);return null!=d&&(y=Object(c.a)(y,d)),Object(xt.a)(y,h,f,m)}const v=Object(y.a)(e,"x","conv2d","float32"),w=Object(y.a)(filter,"filter","conv2d","float32");let O=v,k=!1;3===v.rank&&(k=!0,O=Object(G.a)(v,[1,v.shape[0],v.shape[1],v.shape[2]])),x.b(4===O.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${O.rank}.`)),x.b(4===w.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${w.rank}.`)),yt.a("fused conv2d",n,l);const I="NHWC"===r?O.shape[3]:O.shape[1];x.b(w.shape[2]===I,(()=>`Error in conv2d: depth of input (${I}) must match input depth for filter ${w.shape[2]}.`)),x.b(yt.i(t,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`));const S=yt.b(O.shape,w.shape,t,o,n,l);let N,T;if(null!=d&&(N=Object(y.a)(d,"bias","fused conv2d"),[N]=Object(ft.makeTypesMatch)(N,v),"NHWC"===r?mt.assertAndGetBroadcastShape(S.outShape,N.shape):(x.b(N.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${N.shape.length}.`)),x.b(0===N.shape.length||N.shape[0]===S.outChannels||1===N.shape[0],(()=>`Error in fused conv2d: bias shape (${N.shape}) is not compatible with the number of output channels (${S.outChannels})`)))),null!=f){const e=f.shape;if(x.b(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)x.b(1===e[0]||e[0]===S.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${S.outChannels}).`));else if(3===e.length)try{mt.assertAndGetBroadcastShape(e,S.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${S.outShape}).`;throw Error(n)}T=Object(y.a)(f,"prelu weights","fused conv2d")}const C=(e,c)=>{x.b("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[l,d,f,m]=c,y=Object(xt.c)(e,f,h);x.b(yt.j(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const v=[Object(gt.a)(d.shape,y,l,t,n),Object(bt.a)(d,y,l.shape,t,n)];if(null!=m){const e=Object(xt.b)(m,y);v.push(e)}return v},A={x:O,filter:w,bias:N,preluActivationWeights:T},j={strides:t,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==d){const e=Object(ht.a)(((e,filter,t)=>{let n=Je.a.runKernel(pt.mb,A,j);return t([filter,e,n]),k&&(n=Object(G.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:C}}));return e(O,w)}{const e=Object(ht.a)(((e,filter,t,n)=>{let r=Je.a.runKernel(pt.mb,A,j);return n([filter,e,r,t]),k&&(r=Object(G.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(O,w,N)}}});var wt=n(731),Ot=n(730);const kt=Object(w.a)({fusedDepthwiseConv2d_:function({x:e,filter:filter,strides:t,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===Object(xt.d)(Je.a.state.gradientDepth,h)){let y=Object(P.a)(e,filter,t,n,r,o,l);return null!=d&&(y=Object(c.a)(y,d)),Object(xt.a)(y,h,f,m)}const v=Object(y.a)(e,"x","depthwiseConv2d","float32"),w=Object(y.a)(filter,"filter","depthwiseConv2d","float32");let O=v,k=!1;3===v.rank&&(k=!0,O=Object(G.a)(v,[1,v.shape[0],v.shape[1],v.shape[2]])),x.b(4===O.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${O.rank}.`)),x.b(4===w.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${w.rank}.`)),x.b(O.shape[3]===w.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${O.shape[3]}) must match the inChannels dimension in filter ${w.shape[2]}.`)),null==o&&(o=[1,1]),x.b(yt.i(t,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`)),yt.a("fused depthwiseConv2d",n,l);const I=yt.b(O.shape,w.shape,t,o,n,l,!0);let S,N;null!=d&&(S=Object(y.a)(d,"bias","fused conv2d"),[S]=Object(ft.makeTypesMatch)(S,v),mt.assertAndGetBroadcastShape(I.outShape,S.shape)),null!=f&&(N=Object(y.a)(f,"prelu weights","fused depthwiseConv2d"));const T=(e,r)=>{x.b(yt.j(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[c,d,f,m]=r,y=Object(xt.c)(e,f,h),v=Object(Ot.a)(d.shape,y,c,t,n,o,l),w=Object(wt.a)(d,y,c.shape,t,n,o,l);if(null!=m){return[v,w,Object(xt.b)(S,y)]}return[v,w]},C={x:O,filter:w,bias:S,preluActivationWeights:N},A={strides:t,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==d){const e=Object(ht.a)(((e,filter,t)=>{let n=Je.a.runKernel(pt.nb,C,A);return t([filter,e,n]),k&&(n=Object(G.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:T}}));return e(O,w)}{const e=Object(ht.a)(((e,filter,t,n)=>{let r=Je.a.runKernel(pt.nb,C,A);return n([filter,e,r,t]),k&&(r=Object(G.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(O,w,S)}}});const It=Object(w.a)({fusedMatMul_:function({a:a,b:b,transposeA:e=!1,transposeB:t=!1,bias:n,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:l}){if(!1===Object(xt.d)(Je.a.state.gradientDepth,r)){let d=Object(se.a)(a,b,e,t);return null!=n&&(d=Object(c.a)(d,n)),Object(xt.a)(d,r,o,l)}let d=Object(y.a)(a,"a","fused matMul"),h=Object(y.a)(b,"b","fused matMul");[d,h]=Object(ft.makeTypesMatch)(d,h);const f=e?d.shape[d.rank-2]:d.shape[d.rank-1],m=t?h.shape[h.rank-1]:h.shape[h.rank-2],v=e?d.shape[d.rank-1]:d.shape[d.rank-2],w=t?h.shape[h.rank-2]:h.shape[h.rank-1],O=d.shape.slice(0,-2),k=h.shape.slice(0,-2),I=x.O(O),S=x.O(k);x.b(f===m,(()=>`Error in fused matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${d.shape} and ${h.shape} and transposeA=${e} and transposeB=${t} must match.`));const N=mt.assertAndGetBroadcastShape(d.shape.slice(0,-2),h.shape.slice(0,-2)).concat([v,w]),T=e?Object(G.a)(d,[I,f,v]):Object(G.a)(d,[I,v,f]),C=t?Object(G.a)(h,[S,w,m]):Object(G.a)(h,[S,m,w]);let A,j;null!=n&&(A=Object(y.a)(n,"bias","fused matMul"),[A]=Object(ft.makeTypesMatch)(A,d),mt.assertAndGetBroadcastShape(N,A.shape)),null!=o&&(j=Object(y.a)(o,"prelu weights","fused matMul"));const $=(o,c)=>{const[l,d,h,f]=c,m=Object(xt.c)(Object(G.a)(o,h.shape),h,r);let y,x;if(e||t?!e&&t?(y=Object(se.a)(m,d,!1,!1),x=Object(se.a)(m,l,!0,!1)):e&&!t?(y=Object(se.a)(d,m,!1,!0),x=Object(se.a)(l,m,!1,!1)):(y=Object(se.a)(d,m,!0,!0),x=Object(se.a)(m,l,!0,!0)):(y=Object(se.a)(m,d,!1,!0),x=Object(se.a)(l,m,!0,!1)),null!=n){return[y,x,Object(xt.b)(f,m)]}return[y,x]},E={a:T,b:C,bias:A,preluActivationWeights:j},R={transposeA:e,transposeB:t,activation:r,leakyreluAlpha:l};if(null==n){const e=Object(ht.a)(((e,t,n)=>{const r=Je.a.runKernel(pt.ld,E,R);return n([e,t,r]),{value:Object(G.a)(r,N),gradFunc:$}}));return e(T,C)}{const e=Object(ht.a)(((e,t,n,r)=>{const o=Je.a.runKernel(pt.ld,E,R);return r([e,t,o,n]),{value:Object(G.a)(o,N),gradFunc:$}}));return e(T,C,A)}}});function St(e,a,b){const t=1-e%2,n=new Float32Array(e);for(let i=0;i<e;++i){const r=2*Math.PI*i/(e+t-1);n[i]=a-b*Math.cos(r)}return Object(qe.a)(n,"float32")}Object(w.a)({hammingWindow_:function(e){return St(e,.54,.46)}});const Nt=Object(w.a)({hannWindow_:function(e){return St(e,.5,.5)}});const Tt=Object(w.a)({frame_:function(e,t,n,r=!1,o=0){let c=0;const output=[];for(;c+t<=e.size;)output.push(Object(Re.a)(e,c,t)),c+=n;if(r)for(;c<e.size;){const r=c+t-e.size,l=Object(A.a)([Object(Re.a)(e,c,t-r),Object(Y.a)([r],o)]);output.push(l),c+=n}return 0===output.length?Ye([],[0,t]):Object(G.a)(Object(A.a)(output),[output.length,t])}});Object(w.a)({stft_:function(e,t,n,r,o=Nt){var c;null==r&&(c=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(c)/Math.log(2)))));const l=Tt(e,t,n),d=Object(me.a)(l,o(t));return Object(ot.a)(d,r)}});const Ct=Object(w.a)({cropAndResize_:function(image,e,t,n,r="bilinear",o=0){const c=Object(y.a)(image,"image","cropAndResize"),l=Object(y.a)(e,"boxes","cropAndResize","float32"),d=Object(y.a)(t,"boxInd","cropAndResize","int32"),h=l.shape[0];x.b(4===c.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${c.rank}.`)),x.b(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`)),x.b(1===d.rank&&d.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`)),x.b(2===n.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`)),x.b(n[0]>=1&&n[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${n}`)),x.b("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const f={image:c,boxes:l,boxInd:d},m={method:r,extrapolationValue:o,cropSize:n};return Je.a.runKernel(pt.L,f,m)}});const At=Object(w.a)({flipLeftRight_:function(image){const e=Object(y.a)(image,"image","flipLeftRight","float32");x.b(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const t={image:e};return Je.a.runKernel(pt.hb,t,{})}});const jt=Object(w.a)({grayscaleToRGB_:function(image){const e=Object(y.a)(image,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];x.b(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),x.b(1===n,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`));const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Object(H.a)(e,r)}});const $t=Object(w.a)({rotateWithOffset_:function(image,e,t=0,n=.5){const r=Object(y.a)(image,"image","rotateWithOffset","float32");x.b(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const o={image:r},c={radians:e,fillValue:t,center:n};return Je.a.runKernel(pt.wc,o,c)}});function Et(e,t,n,r,o,c){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==c&&(c=0);const l=e.shape[0];return n=Math.min(n,l),x.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),x.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x.b(1===t.rank,(()=>"scores must be a 1D tensor")),x.b(t.shape[0]===l,(()=>`scores has incompatible shape with boxes. Expected ${l}, but was ${t.shape[0]}`)),x.b(0<=c&&c<=1,(()=>`softNmsSigma must be in [0, 1], but was '${c}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:c}}const Rt=Object(w.a)({nonMaxSuppression_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const c=Object(y.a)(e,"boxes","nonMaxSuppression","float32"),l=Object(y.a)(t,"scores","nonMaxSuppression","float32"),d=Et(c,l,n,r,o),h={maxOutputSize:n=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:o=d.scoreThreshold};return Je.a.runKernel(pt.Zb,{boxes:c,scores:l},h)}});var Ft=n(546);const Dt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const c=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),l=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),d=Et(c,l,n,r,o);n=d.maxOutputSize,r=d.iouThreshold,o=d.scoreThreshold;const h=await Promise.all([c.data(),l.data()]),f=h[0],m=h[1],{selectedIndices:x}=Object(Ft.a)(f,m,n,r,o);return c!==e&&c.dispose(),l!==t&&l.dispose(),Object(qe.a)(x,"int32")};const _t=Object(w.a)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=0){const l=Object(y.a)(e,"boxes","nonMaxSuppression"),d=Object(y.a)(t,"scores","nonMaxSuppression"),h=Et(l,d,n,r,o,c),f={boxes:l,scores:d},m={maxOutputSize:n=h.maxOutputSize,iouThreshold:r=h.iouThreshold,scoreThreshold:o=h.scoreThreshold,softNmsSigma:c=h.softNmsSigma},x=Je.a.runKernel(pt.bc,f,m);return{selectedIndices:x[0],selectedScores:x[1]}}});const Mt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=0){const l=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),d=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),h=Et(l,d,n,r,o,c);n=h.maxOutputSize,r=h.iouThreshold,o=h.scoreThreshold,c=h.softNmsSigma;const f=await Promise.all([l.data(),d.data()]),m=f[0],x=f[1],{selectedIndices:v,selectedScores:w}=Object(Ft.c)(m,x,n,r,o,c);return l!==e&&l.dispose(),d!==t&&d.dispose(),{selectedIndices:Object(qe.a)(v,"int32"),selectedScores:Object(qe.a)(w)}};const Lt=Object(w.a)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=!1){const l=Object(y.a)(e,"boxes","nonMaxSuppression"),d=Object(y.a)(t,"scores","nonMaxSuppression"),h=Et(l,d,n,r,o,null),f={boxes:l,scores:d},m={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:c},x=Je.a.runKernel(pt.ac,f,m);return{selectedIndices:x[0],validOutputs:x[1]}}});const zt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=!1){const l=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),d=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),h=Et(l,d,n,r,o,null),f=h.maxOutputSize,m=h.iouThreshold,x=h.scoreThreshold,[v,w]=await Promise.all([l.data(),d.data()]),{selectedIndices:O,validOutputs:k}=Object(Ft.b)(v,w,f,m,x,c);return l!==e&&l.dispose(),d!==t&&d.dispose(),{selectedIndices:Object(qe.a)(O,"int32"),validOutputs:Object(Ae.a)(k,"int32")}};var Pt=n(729),Bt=n(728),Wt=n(653),Ut=n(521),Vt=n(654),Gt=n(615);const Ht=Object(w.a)({threshold_:function(image,e="binary",t=!1,n=.5){const r=Object(y.a)(image,"image","threshold"),o=r.shape[0]*r.shape[1];let l,g,b,d,h=Object(me.a)(Object(qe.a)([n]),255);if(x.b(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),x.b(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),x.b("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),x.b("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===r.shape[2]){[l,g,b]=Object(Pe.a)(r,[1,1,1],-1);const e=Object(me.a)(l,.2989),t=Object(me.a)(g,.587),n=Object(me.a)(b,.114);d=Object(c.a)(Object(c.a)(e,t),n)}else d=image;if("otsu"===e){h=function(e,t){let n,r,o,l,d,h,f=Object(qe.a)([-1]),m=Object(qe.a)([0]),y=Object(qe.a)([0]);for(let x=0;x<e.size-1;x++){n=Object(Re.a)(e,0,x+1),r=Object(Re.a)(e,x+1),d=Object(div.a)(Object(Ve.a)(n),t),h=Object(div.a)(Object(Ve.a)(r),t);const v=Object(Ve.a)(Object(me.a)(n,Object(Gt.a)(0,n.size)));o=Object(div.a)(v,Object(Ve.a)(n));const w=Object(Y.a)(r.shape,n.size),O=Object(c.a)(Object(Gt.a)(0,r.size),w),k=Object(me.a)(r,O);l=Object(div.a)(Object(Ve.a)(k),Object(Ve.a)(r));const I=Object(sub.a)(o,l),S=Object(sub.a)(o,l),N=Object(me.a)(d,h);y=Object(me.a)(Object(me.a)(N,I),S);const T=Object(J.a)(y,m);m=Object(et.a)(T,y,m),f=Object(et.a)(T,Object(qe.a)([x]),f)}return f}(Object(Wt.a)(Object(N.a)(Object(Vt.a)(d),"int32"),Object(He.a)([]),256),o)}const f=t?Object(Ut.a)(d,h):Object(J.a)(d,h);return Object(N.a)(Object(me.a)(f,255),"int32")}});const qt=Object(w.a)({transform_:function(image,e,t="nearest",n="constant",r=0,o){const c=Object(y.a)(image,"image","transform","float32"),l=Object(y.a)(e,"transforms","transform","float32");x.b(4===c.rank,(()=>`Error in transform: image must be rank 4,but got rank ${c.rank}.`)),x.b(2===l.rank&&(l.shape[0]===c.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x.b(null==o||2===o.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`));const d={image:c,transforms:l},h={interpolation:t,fillMode:n,fillValue:r,outputShape:o};return Je.a.runKernel(pt.fd,d,h)}});const Kt=Object(w.a)({bandPart_:function(a,e,t){Object(x.b)(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Object(x.b)(t%1==0,(()=>`bandPart(): numUpper must be an integer, got ${t}.`));const n=Object(y.a)(a,"a","bandPart");Object(x.b)(n.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`));const r=n.shape,[o,c]=n.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=c))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${c}).`);e<0&&(e=o),t<0&&(t=c);const i=Object(G.a)(Object(Gt.a)(0,o,1,"int32"),[-1,1]),l=Object(Gt.a)(0,c,1,"int32"),d=Object(sub.a)(i,l),h=Object(ae.a)(Object(Ut.a)(d,Object(Ae.a)(+e,"int32")),Object(Q.a)(d,Object(Ae.a)(-t,"int32"))),f=Object(tt.a)([o,c],n.dtype);return Object(G.a)(Object(Ue.a)(Object(Ze.a)(Object(G.a)(n,[-1,o,c])).map((e=>Object(et.a)(h,e,f)))),r)}});var Yt=n(579);const Xt=Object(w.a)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(x.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let i=1;i<e.length;++i)Object(x.b)(e[i].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[i].shape[0]} vs. ${n})`))}else t=!0,e=Object(Pe.a)(e,e.shape[0],0).map((e=>Object(We.a)(e,[0])));Object(x.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let i=0;i<e.length;++i)n.push(Je.a.tidy((()=>{let e=r[i];if(i>0)for(let t=0;t<i;++t){const r=Object(me.a)(Object(Ve.a)(Object(me.a)(n[t],e)),n[t]);e=Object(sub.a)(e,r)}return Object(div.a)(e,Object(Yt.a)(e,"euclidean"))})));return t?Object(Ue.a)(n,0):n}});var Zt=n(502);function Jt(e,t=!1){return Je.a.tidy((()=>{Object(x.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let q=K(n),o=Object(C.a)(e);const c=Ye([[1]],[1,1]);let l=Object(C.a)(c);const d=n>=r?r:n;for(let e=0;e<d;++e){const t=o,d=l,h=q;[l,o,q]=Je.a.tidy((()=>{const t=Object(Re.a)(o,[e,e],[n-e,1]),d=Object(Yt.a)(t),h=Object(Re.a)(o,[e,e],[1,1]),s=Object(et.a)(Object(J.a)(h,0),Ye([[-1]]),Ye([[1]])),f=Object(sub.a)(h,Object(me.a)(s,d)),m=Object(div.a)(t,f);l=1===m.shape[0]?Object(C.a)(c):Object(A.a)([c,Object(Re.a)(m,[1,0],[m.shape[0]-1,m.shape[1]])],0);const y=Object(be.a)(Object(div.a)(Object(se.a)(s,f),d)),x=Object(Re.a)(o,[e,0],[n-e,r]),v=Object(me.a)(y,l),w=Object(at.a)(l);if(0===e)o=Object(sub.a)(x,Object(se.a)(v,Object(se.a)(w,x)));else{const t=Object(sub.a)(x,Object(se.a)(v,Object(se.a)(w,x)));o=Object(A.a)([Object(Re.a)(o,[0,0],[e,r]),t],0)}const O=Object(at.a)(v),k=Object(Re.a)(q,[0,e],[n,q.shape[1]-e]);if(0===e)q=Object(sub.a)(k,Object(se.a)(Object(se.a)(k,l),O));else{const t=Object(sub.a)(k,Object(se.a)(Object(se.a)(k,l),O));q=Object(A.a)([Object(Re.a)(q,[0,0],[n,e]),t],1)}return[l,o,q]})),Object(Zt.b)([t,d,h])}return!t&&n>r&&(q=Object(Re.a)(q,[0,0],[n,r]),o=Object(Re.a)(o,[0,0],[r,r])),[q,o]}))}const Qt=Object(w.a)({qr_:function(e,t=!1){if(Object(x.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Jt(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Object(Ze.a)(Object(G.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],c=[];r.forEach((e=>{const[n,r]=Jt(e,t);o.push(n),c.push(r)}));return[Object(G.a)(Object(Ue.a)(o,0),e.shape),Object(G.a)(Object(Ue.a)(c,0),e.shape)]}}});var en=n(510);const tn=Object(w.a)({computeWeightedLoss_:function(e,t,n=en.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(y.a)(e,"losses","computeWeightedLoss");let o=null;null!=t&&(o=Object(y.a)(t,"weights","computeWeightedLoss"));const c=null==o?r:Object(me.a)(r,o);if(n===en.a.NONE)return c;if(n===en.a.SUM)return Object(Ve.a)(c);if(n===en.a.MEAN){if(null==o)return Object(le.a)(c);{const e=r.size/o.size,t=Object(div.a)(Object(Ve.a)(c),Object(Ve.a)(o));return e>1?Object(div.a)(t,Object(Ae.a)(e)):t}}if(n===en.a.SUM_BY_NONZERO_WEIGHTS){if(null==o)return Object(div.a)(Object(Ve.a)(c),Object(Ae.a)(r.size));{const e=Object(me.a)(o,Object(xe.a)(r.shape)),t=Object(N.a)(Object(Ve.a)(Object(ge.a)(e,Object(Ae.a)(0))),"float32");return Object(div.a)(Object(Ve.a)(c),t)}}throw Error(`Unknown reduction: ${n}`)}});Object(w.a)({absoluteDifference_:function(e,t,n,r=en.a.SUM_BY_NONZERO_WEIGHTS){const c=Object(y.a)(e,"labels","absoluteDifference"),l=Object(y.a)(t,"predictions","absoluteDifference");let d=null;null!=n&&(d=Object(y.a)(n,"weights","absoluteDifference")),Object(x.e)(c.shape,l.shape,"Error in absoluteDifference: ");const h=Object(o.a)(Object(sub.a)(c,l));return tn(h,d,r)}});Object(w.a)({cosineDistance_:function(e,t,n,r,o=en.a.SUM_BY_NONZERO_WEIGHTS){const c=Object(y.a)(e,"labels","cosineDistance"),l=Object(y.a)(t,"predictions","cosineDistance");let d=null;null!=r&&(d=Object(y.a)(r,"weights","cosineDistance")),Object(x.e)(c.shape,l.shape,"Error in cosineDistance: ");const h=Object(Ae.a)(1),f=Object(sub.a)(h,Object(Ve.a)(Object(me.a)(c,l),n,!0));return tn(f,d,o)}});Object(w.a)({hingeLoss_:function(e,t,n,r=en.a.SUM_BY_NONZERO_WEIGHTS){let o=Object(y.a)(e,"labels","hingeLoss");const c=Object(y.a)(t,"predictions","hingeLoss");let l=null;null!=n&&(l=Object(y.a)(n,"weights","hingeLoss")),Object(x.e)(o.shape,c.shape,"Error in hingeLoss: ");const d=Object(Ae.a)(1);o=Object(sub.a)(Object(me.a)(Object(Ae.a)(2),o),d);const h=Object(Te.a)(Object(sub.a)(d,Object(me.a)(o,c)));return tn(h,l,r)}});Object(w.a)({huberLoss_:function(e,t,n,r=1,l=en.a.SUM_BY_NONZERO_WEIGHTS){const d=Object(y.a)(e,"labels","huberLoss"),h=Object(y.a)(t,"predictions","huberLoss");let f=null;null!=n&&(f=Object(y.a)(n,"weights","huberLoss")),Object(x.e)(d.shape,h.shape,"Error in huberLoss: ");const m=Object(Ae.a)(r),v=Object(o.a)(Object(sub.a)(h,d)),w=Object(de.a)(v,m),O=Object(sub.a)(v,w),k=Object(c.a)(Object(me.a)(Object(Ae.a)(.5),Object(pe.a)(w)),Object(me.a)(m,O));return tn(k,f,l)}});Object(w.a)({logLoss_:function(e,t,n,r=1e-7,o=en.a.SUM_BY_NONZERO_WEIGHTS){const l=Object(y.a)(e,"labels","logLoss"),d=Object(y.a)(t,"predictions","logLoss");let h=null;null!=n&&(h=Object(y.a)(n,"weights","logLoss")),Object(x.e)(l.shape,d.shape,"Error in logLoss: ");const f=Object(Ae.a)(1),m=Object(Ae.a)(r),v=Object(be.a)(Object(me.a)(l,Object(te.a)(Object(c.a)(d,m)))),w=Object(me.a)(Object(sub.a)(f,l),Object(te.a)(Object(c.a)(Object(sub.a)(f,d),m))),O=Object(sub.a)(v,w);return tn(O,h,o)}});var nn=n(617);Object(w.a)({meanSquaredError_:function(e,t,n,r=en.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(y.a)(e,"labels","meanSquaredError"),c=Object(y.a)(t,"predictions","meanSquaredError");let l=null;null!=n&&(l=Object(y.a)(n,"weights","meanSquaredError")),Object(x.e)(o.shape,c.shape,"Error in meanSquaredError: ");const d=Object(nn.a)(o,c);return tn(d,l,r)}});Object(w.a)({sigmoidCrossEntropy_:function(e,t,n,r=0,l=en.a.SUM_BY_NONZERO_WEIGHTS){let d=Object(y.a)(e,"multiClassLabels","sigmoidCrossEntropy");const h=Object(y.a)(t,"logits","sigmoidCrossEntropy");let f=null;if(null!=n&&(f=Object(y.a)(n,"weights","sigmoidCrossEntropy")),Object(x.e)(d.shape,h.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Ae.a)(r),t=Object(Ae.a)(1),n=Object(Ae.a)(.5);d=Object(c.a)(Object(me.a)(d,Object(sub.a)(t,e)),Object(me.a)(n,e))}const m=function(e,t){const n=Object(y.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(y.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(x.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const l=Object(Te.a)(r),d=Object(me.a)(r,n),h=Object(ne.a)(Object(U.a)(Object(be.a)(Object(o.a)(r))));return Object(c.a)(Object(sub.a)(l,d),h)}(d,h);return tn(m,f,l)}});var rn=n(618);Object(w.a)({softmaxCrossEntropy_:function(e,t,n,r=0,o=en.a.SUM_BY_NONZERO_WEIGHTS){let l=Object(y.a)(e,"onehotLabels","softmaxCrossEntropy");const d=Object(y.a)(t,"logits","softmaxCrossEntropy");let h=null;if(null!=n&&(h=Object(y.a)(n,"weights","softmaxCrossEntropy")),Object(x.e)(l.shape,d.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Ae.a)(r),t=Object(Ae.a)(1),n=Object(Ae.a)(l.shape[1]);l=Object(c.a)(Object(me.a)(l,Object(sub.a)(t,e)),Object(div.a)(e,n))}const f=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Object(ht.a)(((e,t,r)=>{const o=Object(rn.a)(t,[n],!0),c=Object(sub.a)(Object(N.a)(t,"float32"),o);r([e,c]);const l=Object(be.a)(Object(me.a)(c,e));return{value:Object(Ve.a)(l,[n]),gradFunc:(e,t)=>{const[r,o]=t,c=Object(he.e)(e.shape,[n]);return[Object(me.a)(Object(G.a)(e,c),Object(sub.a)(Object(N.a)(r,"float32"),Object(U.a)(o))),Object(me.a)(Object(G.a)(e,c),Object(sub.a)(Object(U.a)(o),Object(N.a)(r,"float32")))]}}}));return r(e,t)}(l,d);return tn(f,h,o)}});const an=Object(w.a)({sparseFillEmptyRows_:function(e,t,n,r){const o=Object(y.a)(e,"indices","sparseFillEmptyRows","int32"),c=Object(y.a)(t,"values","sparseFillEmptyRows"),l=Object(y.a)(n,"denseShape","sparseFillEmptyRows","int32"),d=Object(y.a)(r,"defaultValue","sparseFillEmptyRows",c.dtype);if(2!==o.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${o.shape}`);if(1!==c.rank)throw new Error(`Values should be Tensor1D but received shape ${c.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==d.rank)throw new Error(`Default value should be a scalar but received shape ${d.shape}`);const h={indices:o,values:c,denseShape:l,defaultValue:d},f=Je.a.runKernel(pt.Lc,h);return{outputIndices:f[0],outputValues:f[1],emptyRowIndicator:f[2],reverseIndexMap:f[3]}}});const sn=Object(w.a)({sparseReshape_:function(e,t,n){const r=Object(y.a)(e,"inputIndices","sparseReshape","int32"),o=Object(y.a)(t,"inputShape","sparseReshape","int32"),c=Object(y.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==o.rank)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(1!==c.rank)throw new Error(`New shape should be Tensor1D but received shape ${c.shape}`);const l={inputIndices:r,inputShape:o,newShape:c},d=Je.a.runKernel(pt.Mc,l);return{outputIndices:d[0],outputShape:d[1]}}});const on=Object(w.a)({sparseSegmentMean_:function(data,e,t){const n=Object(y.a)(data,"data","sparseSegmentMean"),r=Object(y.a)(e,"indices","sparseSegmentMean","int32"),o=Object(y.a)(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);const c={data:n,indices:r,segmentIds:o};return Je.a.runKernel(pt.Nc,c)}});const un=Object(w.a)({sparseSegmentSum_:function(data,e,t){const n=Object(y.a)(data,"data","sparseSegmentSum"),r=Object(y.a)(e,"indices","sparseSegmentSum","int32"),o=Object(y.a)(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);const c={data:n,indices:r,segmentIds:o};return Je.a.runKernel(pt.Oc,c)}});const cn=Object(w.a)({stringNGrams_:function(data,e,t,n,r,o,c,l){const d=Object(y.a)(data,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const h=Object(y.a)(e,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const f={separator:t,nGramWidths:n,leftPad:r,rightPad:o,padWidth:c,preserveShortSequences:l},m={data:d,dataSplits:h},x=Je.a.runKernel(pt.Wc,m,f);return{nGrams:x[0],nGramsSplits:x[1]}}});const ln=Object(w.a)({stringSplit_:function(input,e,t=!0){const n=Object(y.a)(input,"input","stringSplit","string"),r=Object(y.a)(e,"delimiter","stringSplit","string");if(1!==n.rank)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},c={input:n,delimiter:r},l=Je.a.runKernel(pt.Xc,c,o);return{indices:l[0],values:l[1],shape:l[2]}}});const dn=Object(w.a)({stringToHashBucketFast_:function(input,e){const t=Object(y.a)(input,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return Je.a.runKernel(pt.Yc,r,n)}}),hn=(ut.a,ct.a,ot.a,lt.a,{flipLeftRight:At,grayscaleToRGB:jt,resizeNearestNeighbor:Bt.a,resizeBilinear:Pt.a,rotateWithOffset:$t,cropAndResize:Ct,nonMaxSuppression:Rt,nonMaxSuppressionAsync:Dt,nonMaxSuppressionWithScore:_t,nonMaxSuppressionWithScoreAsync:Mt,nonMaxSuppressionPadded:Lt,nonMaxSuppressionPaddedAsync:zt,threshold:Ht,transform:qt}),pn={bandPart:Kt,gramSchmidt:Xt,qr:Qt},fn={sparseFillEmptyRows:an,sparseReshape:sn,sparseSegmentMean:on,sparseSegmentSum:un},mn={stringNGrams:cn,stringSplit:ln,stringToHashBucketFast:dn}},,function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({cast_:function(e,t){const n=Object(c.a)(e,"x","cast");if(!l.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const d={x:n},h={dtype:t};return r.a.runKernel(o.x,d,h)}})},,function(e,t,n){"use strict";n.d(t,"a",(function(){return div}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(599),h=n(470);const div=Object(h.a)({div_:function(a,b){let e=Object(l.a)(a,"a","div"),t=Object(l.a)(b,"b","div");if([e,t]=Object(c.makeTypesMatch)(e,t),"int32"===e.dtype&&"int32"===t.dtype)return Object(d.a)(e,t);const n={a:e,b:t};return r.a.runKernel(o.mc,n,{})}})},function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let i=0;i<n;i++){const o=n-1-i,a=e[o]||1;(t[t.length-1-i]||1)>1&&1===a&&r.unshift(o)}return r}function o(e,t){const n=[];for(let i=0;i<t.length;i++){const r=e[e.length-i-1],o=t.length-i-1,c=t[o];(null==r||1===r&&c>1)&&n.unshift(o)}return n}function c(e,t){const n=[],r=Math.max(e.length,t.length);for(let i=0;i<r;i++){let a=e[e.length-i-1];null==a&&(a=1);let b=t[t.length-i-1];if(null==b&&(b=1),1===a)n.unshift(b);else if(1===b)n.unshift(a);else{if(a!==b){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(a)}}return n}n.r(t),n.d(t,"getBroadcastDims",(function(){return r})),n.d(t,"getReductionAxes",(function(){return o})),n.d(t,"assertAndGetBroadcastShape",(function(){return c}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return sub}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const sub=Object(d.a)({sub_:function(a,b){let e=Object(l.a)(a,"a","sub"),t=Object(l.a)(b,"b","sub");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Zc,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(547),o=n(568);function c(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(o.a)(e,[],[],t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({zerosLike_:function(e){const t={x:Object(c.a)(e,"x","zerosLike")};return r.a.runKernel(o.kd,t)}})},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return l})),n.d(t,"assertTypesMatch",(function(){return d})),n.d(t,"isTensorInList",(function(){return h})),n.d(t,"getTensorsInContainer",(function(){return f}));var r=n(473),o=n(525),c=n(547);function l(a,b){if(a.dtype===b.dtype)return[a,b];const e=Object(o.b)(a.dtype,b.dtype);return[a.cast(e),b.cast(e)]}function d(a,b){Object(c.b)(a.dtype===b.dtype,(()=>`The dtypes of the first(${a.dtype}) and second(${b.dtype}) input must match`))}function h(e,t){return t.some((t=>t.id===e.id))}function f(e){const t=[];return m(e,t,new Set),t}function m(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(o=e,!Array.isArray(o)&&"object"!=typeof o)return;var o;const c=e;for(const e in c){const r=c[e];n.has(r)||(n.add(r),m(r,t,n))}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({add_:function(a,b){let e=Object(l.a)(a,"a","add"),t=Object(l.a)(b,"b","add");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.d,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(479),d=n(470);const h=Object(d.a)({sum_:function(e,t=null,n=!1){let d=Object(c.a)(e,"x","sum");"bool"===d.dtype&&(d=Object(l.a)(d,"int32"));const h={x:d},f={axis:t,keepDims:n};return r.a.runKernel(o.ad,h,f)}})},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"g",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"a",(function(){return y}));var r=n(468);function o(e,t,n,o,l){const d=t.inputParams[e];if(d&&void 0!==d.inputIndexStart){const e=d.inputIndexStart,h=0===d.inputIndexEnd?void 0:void 0===d.inputIndexEnd?e+1:d.inputIndexEnd;if("tensor"===d.type)return c(t.inputNames[d.inputIndexStart],n,o,l);if("tensors"===d.type){return t.inputNames.slice(e,h).map((e=>c(e,n,o,l)))}const f=c(t.inputNames.slice(e)[0],n,o,l),data=f.dataSync();return"number"===d.type?data[0]:r.Af.toNestedArray(f.shape,data)}const h=t.attrParams[e];return h&&h.value}function c(e,t,n,r){const[o,c]=f(e);if(null!=r){const e=r.getHashTableHandleByName(o);if(null!=e)return e}const l=n.currentContextIds.find((e=>!!t[h(o,e)]));return void 0!==l?t[h(o,l)][c]:void 0}function l(e,t,n){return t[h(e,n.currentContextId)]}function d(e,t){const[n,r,o]=f(e);return[h(n,t&&t.currentContextId),r,o]}function h(e,t){return t?`${e}-${t}`:e}function f(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function m(e,t,n){let r=o("pad",e,t,n);if("explicit"===r){r=o("explicitPaddings",e,t,n);const c=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)c[i][0]=r[2*i],c[i][1]=r[2*i+1];return c}return r}function y(e){return e.kept?e:Object(r.Gd)(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(472),o=n(471),c=n(470);const l=Object(c.a)({square_:function(e){const t=Object(o.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},function(e,t,n){"use strict";n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return h})),n.d(t,"d",(function(){return f})),n.d(t,"j",(function(){return w})),n.d(t,"i",(function(){return O})),n.d(t,"h",(function(){return k})),n.d(t,"a",(function(){return I}));var r=n(547);function o(e,t,n,r,o="NHWC",c){return d(e,[...t,e[3]],n,c,r,null,null,k(o))}function c(e,t,n,r,o,c,l="channelsLast"){const[h,f]=m(t);let y;if("channelsLast"===l)y=[h,f,e[3],e[3]];else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);y=[h,f,e[1],e[1]]}return d(e,y,n,r,o,c,!1,l)}function l(e,t,n,r,o,c,l="NDHWC"){const[d,f,m]=y(t);let x,v;if("NDHWC"===l)v="channelsLast",x=[d,f,m,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);v="channelsFirst",x=[d,f,m,e[1],e[1]]}return h(e,x,n,r,o,!1,v,c)}function d(e,t,n,r,o,c,l=!1,d="channelsLast"){let[h,y,w,O]=[-1,-1,-1,-1];if("channelsLast"===d)[h,y,w,O]=e;else{if("channelsFirst"!==d)throw new Error(`Unknown dataFormat ${d}`);[h,O,y,w]=e}const[k,I,,S]=t,[N,T]=m(n),[C,A]=m(r),j=x(k,C),$=x(I,A),{padInfo:E,outHeight:R,outWidth:F}=function(e,t,n,r,o,c,l,d,h){let m,y,x;if("number"==typeof e){m={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,o){null==r&&(r=f(e,t,n));const c=e[0],l=e[1],d=v((c-t+2*r)/n+1,o),h=v((l-t+2*r)/n+1,o);return[d,h]}([t,n],c,r,e,d);y=o[0],x=o[1]}else if("same"===e){y=Math.ceil(t/r),x=Math.ceil(n/o);const e=Math.max(0,(y-1)*r+c-t),d=Math.max(0,(x-1)*o+l-n),h=Math.floor(e/2),f=e-h,v=Math.floor(d/2);m={top:h,bottom:f,left:v,right:d-v,type:"SAME"}}else if("valid"===e)m={top:0,bottom:0,left:0,right:0,type:"VALID"},y=Math.ceil((t-c+1)/r),x=Math.ceil((n-l+1)/o);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const f="channelsLast"===h?e[1][0]:e[2][0],w="channelsLast"===h?e[1][1]:e[2][1],O="channelsLast"===h?e[2][0]:e[3][0],k="channelsLast"===h?e[2][1]:e[3][1];m={top:f,bottom:w,left:O,right:k,type:0===f&&0===w&&0===O&&0===k?"VALID":"EXPLICIT"},y=v((t-c+f+w)/r+1,d),x=v((n-l+O+k)/o+1,d)}}return{padInfo:m,outHeight:y,outWidth:x}}(o,y,w,N,T,j,$,c,d),D=l?S*O:S;let _;return"channelsFirst"===d?_=[h,D,R,F]:"channelsLast"===d&&(_=[h,R,F,D]),{batchSize:h,dataFormat:d,inHeight:y,inWidth:w,inChannels:O,outHeight:R,outWidth:F,outChannels:D,padInfo:E,strideHeight:N,strideWidth:T,filterHeight:k,filterWidth:I,effectiveFilterHeight:j,effectiveFilterWidth:$,dilationHeight:C,dilationWidth:A,inShape:e,outShape:_,filterShape:t}}function h(e,t,n,r,o,c=!1,l="channelsLast",d){let[h,m,w,O,k]=[-1,-1,-1,-1,-1];if("channelsLast"===l)[h,m,w,O,k]=e;else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);[h,k,m,w,O]=e}const[I,S,N,,T]=t,[C,A,j]=y(n),[$,E,R]=y(r),F=x(I,$),D=x(S,E),_=x(N,R),{padInfo:M,outDepth:L,outHeight:z,outWidth:P}=function(e,t,n,r,o,c,l,d,h,m,y){let x,w,O,k;if("number"==typeof e){x={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const c=function(e,t,n,r,o,c){null==o&&(o=f(e,t,r));const l=e[0],d=e[1],h=e[2],m=v((l-t+2*o)/r+1,c),y=v((d-t+2*o)/r+1,c),x=v((h-t+2*o)/r+1,c);return[m,y,x,n]}([t,n,r,1],d,1,o,e,y);w=c[0],O=c[1],k=c[2]}else if("same"===e){w=Math.ceil(t/o),O=Math.ceil(n/c),k=Math.ceil(r/l);const e=(w-1)*o+d-t,f=(O-1)*c+h-n,y=(k-1)*l+m-r,v=Math.floor(e/2),I=e-v,S=Math.floor(f/2),N=f-S,T=Math.floor(y/2);x={top:S,bottom:N,left:T,right:y-T,front:v,back:I,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);x={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},w=Math.ceil((t-d+1)/o),O=Math.ceil((n-h+1)/c),k=Math.ceil((r-m+1)/l)}return{padInfo:x,outDepth:w,outHeight:O,outWidth:k}}(o,m,w,O,C,A,j,F,D,_,d),B=c?T*k:T;let W;return"channelsFirst"===l?W=[h,B,L,z,P]:"channelsLast"===l&&(W=[h,L,z,P,B]),{batchSize:h,dataFormat:l,inDepth:m,inHeight:w,inWidth:O,inChannels:k,outDepth:L,outHeight:z,outWidth:P,outChannels:B,padInfo:M,strideDepth:C,strideHeight:A,strideWidth:j,filterDepth:I,filterHeight:S,filterWidth:N,effectiveFilterDepth:F,effectiveFilterHeight:D,effectiveFilterWidth:_,dilationDepth:$,dilationHeight:E,dilationWidth:R,inShape:e,outShape:W,filterShape:t}}function f(e,t,n,r=1){const o=x(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function m(param){return"number"==typeof param?[param,param,param]:2===param.length?[param[0],param[1],1]:param}function y(param){return"number"==typeof param?[param,param,param]:param}function x(e,t){return t<=1?e:e+(e-1)*(t-1)}function v(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function w(param){const[e,t,n]=m(param);return 1===e&&1===t&&1===n}function O(e,t){return w(e)||w(t)}function k(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function I(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.b(r.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((p=>{p.forEach((t=>{r.b(r.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return f}));var r=n(547);const o="tfjsflags";class c{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=l,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(d().getBool("IS_TEST")||d().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];d().getBool("IS_TEST")||d().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(o in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function l(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((s,...e)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,e[0],e[1]),e.join("=")))),t}function d(){return h}let h=null;function f(e){h=e}},function(e,t,n){"use strict";(function(e){var r=n(861),o=n(862),c=n(712);function l(){return h.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function d(e,t){if(l()<t)throw new RangeError("Invalid typed array length");return h.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=h.prototype:(null===e&&(e=new h(t)),e.length=t),e}function h(e,t,n){if(!(h.TYPED_ARRAY_SUPPORT||this instanceof h))return new h(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return y(this,e)}return f(this,e,t,n)}function f(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);h.TYPED_ARRAY_SUPPORT?(e=t).__proto__=h.prototype:e=x(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!h.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|w(t,n),o=(e=d(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(h.isBuffer(t)){var n=0|v(t.length);return 0===(e=d(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?d(e,0):x(e,t);if("Buffer"===t.type&&c(t.data))return x(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function m(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function y(e,t){if(m(t),e=d(e,t<0?0:0|v(t)),!h.TYPED_ARRAY_SUPPORT)for(var i=0;i<t;++i)e[i]=0;return e}function x(e,t){var n=t.length<0?0:0|v(t.length);e=d(e,n);for(var i=0;i<n;i+=1)e[i]=255&t[i];return e}function v(e){if(e>=l())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+l().toString(16)+" bytes");return 0|e}function w(e,t){if(h.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return Y(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return X(e).length;default:if(r)return Y(e).length;t=(""+t).toLowerCase(),r=!0}}function O(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return M(this,t,n);case"utf8":case"utf-8":return R(this,t,n);case"ascii":return D(this,t,n);case"latin1":case"binary":return _(this,t,n);case"base64":return E(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function k(b,e,t){var i=b[e];b[e]=b[t],b[t]=i}function I(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=h.from(t,r)),h.isBuffer(t))return 0===t.length?-1:S(e,t,n,r,o);if("number"==typeof t)return t&=255,h.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):S(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function S(e,t,n,r,o){var i,c=1,l=e.length,d=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;c=2,l/=2,d/=2,n/=2}function h(e,i){return 1===c?e[i]:e.readUInt16BE(i*c)}if(o){var f=-1;for(i=n;i<l;i++)if(h(e,i)===h(t,-1===f?0:i-f)){if(-1===f&&(f=i),i-f+1===d)return f*c}else-1!==f&&(i-=i-f),f=-1}else for(n+d>l&&(n=l-d),i=n;i>=0;i--){for(var m=!0,y=0;y<d;y++)if(h(e,i+y)!==h(t,y)){m=!1;break}if(m)return i}return-1}function N(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var c=t.length;if(c%2!=0)throw new TypeError("Invalid hex string");r>c/2&&(r=c/2);for(var i=0;i<r;++i){var l=parseInt(t.substr(2*i,2),16);if(isNaN(l))return i;e[n+i]=l}return i}function T(e,t,n,r){return Z(Y(t,e.length-n),e,n,r)}function C(e,t,n,r){return Z(function(e){for(var t=[],i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,n,r)}function A(e,t,n,r){return C(e,t,n,r)}function j(e,t,n,r){return Z(X(t),e,n,r)}function $(e,t,n,r){return Z(function(e,t){for(var n,r,o,c=[],i=0;i<e.length&&!((t-=2)<0);++i)r=(n=e.charCodeAt(i))>>8,o=n%256,c.push(o),c.push(r);return c}(t,e.length-n),e,n,r)}function E(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function R(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var o,c,l,d,h=e[i],f=null,m=h>239?4:h>223?3:h>191?2:1;if(i+m<=n)switch(m){case 1:h<128&&(f=h);break;case 2:128==(192&(o=e[i+1]))&&(d=(31&h)<<6|63&o)>127&&(f=d);break;case 3:o=e[i+1],c=e[i+2],128==(192&o)&&128==(192&c)&&(d=(15&h)<<12|(63&o)<<6|63&c)>2047&&(d<55296||d>57343)&&(f=d);break;case 4:o=e[i+1],c=e[i+2],l=e[i+3],128==(192&o)&&128==(192&c)&&128==(192&l)&&(d=(15&h)<<18|(63&o)<<12|(63&c)<<6|63&l)>65535&&d<1114112&&(f=d)}null===f?(f=65533,m=1):f>65535&&(f-=65536,r.push(f>>>10&1023|55296),f=56320|1023&f),r.push(f),i+=m}return function(e){var t=e.length;if(t<=F)return String.fromCharCode.apply(String,e);var n="",i=0;for(;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=F));return n}(r)}t.Buffer=h,t.SlowBuffer=function(e){+e!=e&&(e=0);return h.alloc(+e)},t.INSPECT_MAX_BYTES=50,h.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=l(),h.poolSize=8192,h._augment=function(e){return e.__proto__=h.prototype,e},h.from=function(e,t,n){return f(null,e,t,n)},h.TYPED_ARRAY_SUPPORT&&(h.prototype.__proto__=Uint8Array.prototype,h.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&h[Symbol.species]===h&&Object.defineProperty(h,Symbol.species,{value:null,configurable:!0})),h.alloc=function(e,t,n){return function(e,t,n,r){return m(t),t<=0?d(e,t):void 0!==n?"string"==typeof r?d(e,t).fill(n,r):d(e,t).fill(n):d(e,t)}(null,e,t,n)},h.allocUnsafe=function(e){return y(null,e)},h.allocUnsafeSlow=function(e){return y(null,e)},h.isBuffer=function(b){return!(null==b||!b._isBuffer)},h.compare=function(a,b){if(!h.isBuffer(a)||!h.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var e=a.length,t=b.length,i=0,n=Math.min(e,t);i<n;++i)if(a[i]!==b[i]){e=a[i],t=b[i];break}return e<t?-1:t<e?1:0},h.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},h.concat=function(e,t){if(!c(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return h.alloc(0);var i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;var n=h.allocUnsafe(t),r=0;for(i=0;i<e.length;++i){var o=e[i];if(!h.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(n,r),r+=o.length}return n},h.byteLength=w,h.prototype._isBuffer=!0,h.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<e;i+=2)k(this,i,i+1);return this},h.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<e;i+=4)k(this,i,i+3),k(this,i+1,i+2);return this},h.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<e;i+=8)k(this,i,i+7),k(this,i+1,i+6),k(this,i+2,i+5),k(this,i+3,i+4);return this},h.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?R(this,0,e):O.apply(this,arguments)},h.prototype.equals=function(b){if(!h.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===h.compare(this,b)},h.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},h.prototype.compare=function(e,t,n,r,o){if(!h.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var c=(o>>>=0)-(r>>>=0),l=(n>>>=0)-(t>>>=0),d=Math.min(c,l),f=this.slice(r,o),m=e.slice(t,n),i=0;i<d;++i)if(f[i]!==m[i]){c=f[i],l=m[i];break}return c<l?-1:l<c?1:0},h.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},h.prototype.indexOf=function(e,t,n){return I(this,e,t,n,!0)},h.prototype.lastIndexOf=function(e,t,n){return I(this,e,t,n,!1)},h.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var c=!1;;)switch(r){case"hex":return N(this,e,t,n);case"utf8":case"utf-8":return T(this,e,t,n);case"ascii":return C(this,e,t,n);case"latin1":case"binary":return A(this,e,t,n);case"base64":return j(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $(this,e,t,n);default:if(c)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),c=!0}},h.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var F=4096;function D(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function _(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function M(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=t;i<n;++i)o+=K(e[i]);return o}function L(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function z(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function P(e,t,n,r,o,c){if(!h.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<c)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function B(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-n,2);i<o;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function W(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-n,4);i<o;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function U(e,t,n,r,o,c){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function V(e,t,n,r,c){return c||U(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function G(e,t,n,r,c){return c||U(e,0,n,8),o.write(e,t,n,r,52,8),n+8}h.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),h.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=h.prototype;else{var o=t-e;n=new h(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+e]}return n},h.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r},h.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},h.prototype.readUInt8=function(e,t){return t||z(e,1,this.length),this[e]},h.prototype.readUInt16LE=function(e,t){return t||z(e,2,this.length),this[e]|this[e+1]<<8},h.prototype.readUInt16BE=function(e,t){return t||z(e,2,this.length),this[e]<<8|this[e+1]},h.prototype.readUInt32LE=function(e,t){return t||z(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},h.prototype.readUInt32BE=function(e,t){return t||z(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},h.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},h.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var i=t,r=1,o=this[e+--i];i>0&&(r*=256);)o+=this[e+--i]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*t)),o},h.prototype.readInt8=function(e,t){return t||z(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},h.prototype.readInt16LE=function(e,t){t||z(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},h.prototype.readInt16BE=function(e,t){t||z(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},h.prototype.readInt32LE=function(e,t){return t||z(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},h.prototype.readInt32BE=function(e,t){return t||z(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},h.prototype.readFloatLE=function(e,t){return t||z(e,4,this.length),o.read(this,e,!0,23,4)},h.prototype.readFloatBE=function(e,t){return t||z(e,4,this.length),o.read(this,e,!1,23,4)},h.prototype.readDoubleLE=function(e,t){return t||z(e,8,this.length),o.read(this,e,!0,52,8)},h.prototype.readDoubleBE=function(e,t){return t||z(e,8,this.length),o.read(this,e,!1,52,8)},h.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=e/o&255;return t+n},h.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},h.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,255,0),h.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},h.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):B(this,e,t,!0),t+2},h.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):B(this,e,t,!1),t+2},h.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):W(this,e,t,!0),t+4},h.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):W(this,e,t,!1),t+4},h.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);P(this,e,t,n,o-1,-o)}var i=0,c=1,sub=0;for(this[t]=255&e;++i<n&&(c*=256);)e<0&&0===sub&&0!==this[t+i-1]&&(sub=1),this[t+i]=(e/c>>0)-sub&255;return t+n},h.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);P(this,e,t,n,o-1,-o)}var i=n-1,c=1,sub=0;for(this[t+i]=255&e;--i>=0&&(c*=256);)e<0&&0===sub&&0!==this[t+i+1]&&(sub=1),this[t+i]=(e/c>>0)-sub&255;return t+n},h.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,127,-128),h.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},h.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):B(this,e,t,!0),t+2},h.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):B(this,e,t,!1),t+2},h.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):W(this,e,t,!0),t+4},h.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):W(this,e,t,!1),t+4},h.prototype.writeFloatLE=function(e,t,n){return V(this,e,t,!0,n)},h.prototype.writeFloatBE=function(e,t,n){return V(this,e,t,!1,n)},h.prototype.writeDoubleLE=function(e,t,n){return G(this,e,t,!0,n)},h.prototype.writeDoubleBE=function(e,t,n){return G(this,e,t,!1,n)},h.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,o=r-n;if(this===e&&n<t&&t<r)for(i=o-1;i>=0;--i)e[i+t]=this[i+n];else if(o<1e3||!h.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},h.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var code=e.charCodeAt(0);code<256&&(e=code)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!h.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var o=h.isBuffer(e)?e:Y(new h(e,r).toString()),c=o.length;for(i=0;i<n-t;++i)this[i+t]=o[i%c]}return this};var H=/[^+\/0-9A-Za-z-_]/g;function K(e){return e<16?"0"+e.toString(16):e.toString(16)}function Y(e,t){var n;t=t||1/0;for(var r=e.length,o=null,c=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&c.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&c.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&c.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&c.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;c.push(n)}else if(n<2048){if((t-=2)<0)break;c.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;c.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;c.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return c}function X(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(H,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Z(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}}).call(this,n(79))},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({neg_:function(e){const t={x:Object(c.a)(e,"x","neg")};return r.a.runKernel(o.Yb,t)}})},,,function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return l}));var r=n(472),o=n(473),c=(n(471),n(547));function l(e,t){c.b(c.u(e),(()=>"The f passed in variableGrads(f) must be a function")),c.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof o.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const l=n?t.filter((e=>!e.trainable)):null,d=t.length;t=t.filter((e=>e.trainable)),c.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${d} variables is trainable.`));const{value:h,grads:f}=r.a.gradients(e,t,null,!0);c.b(f.some((g=>null!=g)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),c.b(0===h.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${h.rank} tensor`));const m={};return t.forEach(((e,i)=>{null!=f[i]&&(m[e.name]=f[i])})),null!=l&&l.forEach((e=>m[e.name]=null)),{value:h,grads:m}}function d(e){return r.a.customGrad(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({slice_:function(e,t,n){const l=Object(c.a)(e,"x","slice","string_or_numeric");if(0===l.rank)throw new Error("Slicing scalar is not possible");const d={x:l},h={begin:t,size:n};return r.a.runKernel(o.Hc,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(611),d=n(482),h=n(470);const f=Object(h.a)({where_:function(e,a,b){const t=Object(c.a)(a,"a","where"),n=Object(c.a)(b,"b","where"),h=Object(c.a)(e,"condition","where","bool"),f=Object(d.assertAndGetBroadcastShape)(Object(d.assertAndGetBroadcastShape)(h.shape,t.shape),n.shape),m={condition:Object(l.a)(h,f),t:Object(l.a)(t,f),e:Object(l.a)(n,f)};return r.a.runKernel(o.Bc,m)}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"h",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"d",(function(){return y})),n.d(t,"g",(function(){return x})),n.d(t,"f",(function(){return v})),n.d(t,"a",(function(){return w}));var r=n(472),o=n(493),c=n(473),l=n(486);function d(){return r.a}function h(){return r.a.memory()}function f(e,t){return r.a.tidy(e,t)}function m(e){Object(l.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.a.keep(e)}function x(e){return r.a.setBackend(e)}function v(e,t,n=1){return r.a.registerBackend(e,t,n)}function w(){return r.a.backend}Object(c.e)((function(e){Object(o.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(549),h=n(470);const f=Object(h.a)({concat_:function(e,t=0){Object(l.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(c.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Object(d.a)(n[0]);const h=n,f={axis:t};return r.a.runKernel(o.C,h,f)}})},function(e,t){(function(t){e.exports=t}).call(this,{})},,,function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"a",(function(){return x})),n.d(t,"b",(function(){return v})),n.d(t,"d",(function(){return w})),n.d(t,"c",(function(){return O})),n.d(t,"i",(function(){return k})),n.d(t,"g",(function(){return I})),n.d(t,"h",(function(){return S}));var r=n(518),o=n(597),c=n(547),l=n(713);async function d(e,t){const n=[],r=[],o=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<o.length;++i){const c=o[i],l=Array.isArray(e)?e[i].tensor:e[c];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${c}': ${l.dtype}`);const d={name:c,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const e=new Promise((async e=>{const t=await l.bytes(),n=t.reduce(((p,e)=>p+e.length),0)+4*t.length,r=new Uint8Array(n);let o=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,o),o+=4,r.set(e,o),o+=e.length}e(r)}));r.push(e)}else r.push(l.data());null!=t&&(d.group=t),n.push(d)}return{data:f(await Promise.all(r)),specs:n}}function h(e,t){const n={};let d,h=0;for(const f of t){const t=f.name,m=f.dtype,y=f.shape,x=Object(c.O)(y);let v;if("quantization"in f){const n=f.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${f.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${f.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==m)throw new Error(`Weight ${f.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${m}.`)}const r=l.a[n.dtype],o=e.slice(h,h+x*r),c="uint8"===n.dtype?new Uint8Array(o):new Uint16Array(o);if("float32"===m)if("uint8"===n.dtype||"uint16"===n.dtype){v=new Float32Array(c.length);for(let i=0;i<c.length;i++){const e=c[i];v[i]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===d&&(d=N()),v=d(c)}else{if("int32"!==m)throw new Error(`Unsupported dtype in weight '${t}': ${m}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);v=new Int32Array(c.length);for(let i=0;i<c.length;i++){const e=c[i];v[i]=Math.round(e*n.scale+n.min)}}h+=x*r}else if("string"===m){const t=Object(c.O)(f.shape);v=[];for(let i=0;i<t;i++){const t=new Uint32Array(e.slice(h,h+4))[0];h+=4;const n=new Uint8Array(e.slice(h,h+t));v.push(n),h+=t}}else{const c=l.a[m],d=e.slice(h,h+x*c);if("float32"===m)v=new Float32Array(d);else if("int32"===m)v=new Int32Array(d);else if("bool"===m)v=new Uint8Array(d);else{if("complex64"!==m)throw new Error(`Unsupported dtype in weight '${t}': ${m}`);{v=new Float32Array(d);const e=new Float32Array(v.length/2),image=new Float32Array(v.length/2);for(let i=0;i<e.length;i++)e[i]=v[2*i],image[i]=v[2*i+1];const c=Object(o.a)(e,y,"float32"),l=Object(o.a)(image,y,"float32");n[t]=Object(r.a)(c,l),c.dispose(),l.dispose()}}h+=x*c}"complex64"!==m&&(n[t]=Object(o.a)(v,y,m))}return n}function f(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let o=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength})),r.buffer}const m=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function y(t){return m?e.byteLength(t):new Blob([t]).size}function x(t){if(m)return e.from(t).toString("base64");const n=new Uint8Array(t);let s="";for(let i=0,e=n.length;i<e;i++)s+=String.fromCharCode(n[i]);return btoa(s)}function v(t){if(m){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const s=atob(t),n=new Uint8Array(s.length);for(let i=0;i<s.length;++i)n.set([s.charCodeAt(i)],i);return n.buffer}function w(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function O(path){for(path=path.trim();path.endsWith("/");)path=path.slice(0,path.length-1);const e=path.split("/");return e[e.length-1]}function k(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function I(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,o]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=o}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function S(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:y(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:y(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function N(){const e=function(){const e=i=>{let e=i<<13,t=0;for(;0==(8388608&e);)t-=8388608,e<<=1;return e&=-8388609,t+=947912704,e|t},t=new Uint32Array(2048);t[0]=0;for(let i=1;i<1024;i++)t[i]=e(i);for(let i=1024;i<2048;i++)t[i]=939524096+(i-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let i=1;i<31;i++)e[i]=i<<23;for(let i=33;i<63;i++)e[i]=2147483648+(i-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let i=0;i<64;i++)e[i]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),c=new Uint32Array(o);for(let o=0;o<r.length;o++){const l=r[o],d=e[n[l>>10]+(1023&l)]+t[l>>10];c[o]=d}return new Float32Array(o)}}}).call(this,n(494).Buffer)},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"a",(function(){return h})),n.d(t,"f",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"g",(function(){return y}));var r=n(547);function o(e,t){for(let i=0;i<e.length;++i)if(e[e.length-i-1]!==t-1-i)return!1;return!0}function c(e,t,n){const r=e.length+t.length,o=[];let c=0,l=0;for(let d=0;d<r;d++)-1===n.indexOf(d)?o.push(e[c++]):o.push(t[l++]);return o}function l(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map((t=>e[t]))]}function d(e,t){return c(e,t.map((e=>1)),t)}function h(e,t,n){r.b(o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function f(e,t){if(o(e,t))return null;const n=[];for(let i=0;i<t;++i)-1===e.indexOf(i)&&n.push(i);return e.forEach((e=>n.push(e))),n}function m(e){return e.map(((e,i)=>[i,e])).sort(((a,b)=>a[1]-b[1])).map((e=>e[0]))}function y(e,t){const n=[];for(let i=t-e;i<t;++i)n.push(i);return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({sqrt_:function(e){const t={x:Object(c.a)(e,"x","sqrt","float32")};return r.a.runKernel(o.Rc,t)}})},function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"e",(function(){return o})),n.d(t,"d",(function(){return c})),n.d(t,"c",(function(){return l})),n.d(t,"b",(function(){return d}));class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){const o=[];return("load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&o.push(r)})),o}}const o=e=>r.registerSaveRouter(e),c=e=>r.registerLoadRouter(e),l=e=>r.getSaveHandlers(e),d=(e,t)=>r.getLoadHandlers(e,t)},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({exp_:function(e){const t={x:Object(c.a)(e,"x","exp")};return r.a.runKernel(o.cb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({greater_:function(a,b){let e=Object(l.a)(a,"a","greater","string_or_numeric"),t=Object(l.a)(b,"b","greater","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.qb,n)}})},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({complex_:function(e,t){const n=Object(c.a)(e,"real","complex"),d=Object(c.a)(t,"imag","complex");l.e(n.shape,d.shape,`real and imag shapes, ${n.shape} and ${d.shape}, must match in call to tf.complex().`);const h={real:n,imag:d};return r.a.runKernel(o.A,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(473),o=n(547);function c(e,t="float32",n){return t=t||"float32",o.c(e),new r.b(e,t,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var r=n(472),o=n(502),c=n(469),l=n(471),d=n(547),h=n(518),f=n(578),m=n(495),y=n(470),x=n(577);const v=Object(y.a)({transpose_:function(e,t,n){const y=Object(l.a)(e,"x","transpose");if(null==t&&(t=y.shape.map(((s,i)=>i)).reverse()),d.b(y.rank===t.length,(()=>`Error in transpose: rank of input ${y.rank} must match length of perm ${t}.`)),t.forEach((e=>{d.b(e>=0&&e<y.rank,(()=>"All entries in 'perm' must be between 0 and "+(y.rank-1)+` but got ${t}`))})),y.rank<=1)return y.clone();const v={x:y},w={perm:t};return"complex64"===y.dtype?Object(o.h)((()=>{let e=Object(x.a)(y),t=Object(f.a)(y);return e=r.a.runKernel(c.gd,{x:e},w),t=r.a.runKernel(c.gd,{x:t},w),n&&(t=Object(m.a)(t)),Object(h.a)(e,t)})):r.a.runKernel(c.gd,v,w)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({lessEqual_:function(a,b){let e=Object(l.a)(a,"a","lessEqual","string_or_numeric"),t=Object(l.a)(b,"b","lessEqual","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Cb,n)}})},,,,function(e,t,n){"use strict";var r,o,c,l,d;n.d(t,"b",(function(){return f})),n.d(t,"a",(function(){return m})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(c||(c={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(l||(l={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(d||(d={}));const h={float32:l,int32:o,bool:c,complex64:d};function f(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return h[e][t]}function m(e){return f(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({abs_:function(e){const t=Object(c.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(o.B,e)}{const e={x:t};return r.a.runKernel(o.a,e)}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(492),h=n(470),f=n(475);const m=Object(h.a)({conv2d_:function(e,filter,t,n,h="NHWC",m=[1,1],y){const x=Object(c.a)(e,"x","conv2d","float32"),v=Object(c.a)(filter,"filter","conv2d","float32");let w=x,O=!1;3===x.rank&&(O=!0,w=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===w.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${w.rank}.`)),l.b(4===v.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${v.rank}.`)),d.a("conv2d",n,y);const k="NHWC"===h?w.shape[3]:w.shape[1];l.b(k===v.shape[2],(()=>`Error in conv2d: depth of input (${k}) must match input depth for filter ${v.shape[2]}.`)),l.b(d.i(t,m),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${m}'`));const I={x:w,filter:v},S={strides:t,pad:n,dataFormat:h,dilations:m,dimRoundingMode:y},N=r.a.runKernel(o.D,I,S);return O?Object(f.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({greaterEqual_:function(a,b){let e=Object(l.a)(a,"a","greaterEqual","string_or_numeric"),t=Object(l.a)(b,"b","greaterEqual","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.rb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(482),d=n(470);const h=Object(d.a)({logicalAnd_:function(a,b){const e=Object(c.a)(a,"a","logicalAnd","bool"),t=Object(c.a)(b,"b","logicalAnd","bool");Object(l.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Hb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({matMul_:function(a,b,e=!1,t=!1){let n=Object(l.a)(a,"a","matMul"),d=Object(l.a)(b,"b","matMul");[n,d]=Object(c.makeTypesMatch)(n,d);const h={a:n,b:d},f={transposeA:e,transposeB:t};return r.a.runKernel(o.s,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({pow_:function(base,e){let t=Object(l.a)(base,"base","pow"),n=Object(l.a)(e,"exp","pow");[t,n]=Object(c.makeTypesMatch)(t,n);const d={a:t,b:n};return r.a.runKernel(o.hc,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({split_:function(e,t,n=0){const l={x:Object(c.a)(e,"x","split")},d={numOrSizeSplits:t,axis:n};return r.a.runKernel(o.Qc,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({stack_:function(e,t=0){const n=Object(c.b)(e,"tensors","stack","string_or_numeric");l.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&l.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const d=n,h={axis:t};return r.a.runKernel(o.fc,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(471),o=n(547),c=n(568);function l(e,t){Object(o.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(c.a)(e,null,n,t)}},function(e,t,n){"use strict";n.d(t,"c",(function(){return w})),n.d(t,"b",(function(){return O})),n.d(t,"a",(function(){return k})),n.d(t,"d",(function(){return I}));var r=n(482),o=n(600),c=n(603),l=n(476),d=n(608),h=n(555),f=n(619),m=n(475),y=n(576),x=n(557),v=n(488);function w(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(l.a)(e,Object(x.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function O(e,t){let n=t;const o=r.getReductionAxes(e.shape,t.shape);return o.length>0&&(n=Object(v.a)(n,o)),Object(m.a)(n,e.shape)}function k(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(h.a)(e);if("elu"===t)return Object(o.a)(e);if("relu6"===t)return Object(f.a)(e);if("prelu"===t)return Object(d.a)(e,n);if("leakyrelu"===t)return Object(c.a)(e,r);if("sigmoid"===t)return Object(y.a)(e);throw new Error(`Unknown fused activation ${t}.`)}const I=(e,t)=>!(e>0)||"linear"===t},,,,,,,,,,,function(e,t,n){"use strict";function r(e,element,t){const n=function(e,t,n){return function(e,t,n){let r=0,o=e.length,c=0,l=!1;for(;r<o;){c=r+(o-r>>>1);const d=n(t,e[c]);d>0?r=c+1:(o=c,l=!d)}return l?r:-r-1}(e,t,n||o)}(e,element,t),r=n<0?-(n+1):n;e.splice(r,0,element)}function o(a,b){return a>b?1:a<b?-1:0}function c(e,t,n,r,o){return h(e,t,n,r,o,0)}function l(e,t,n,r,o,c){return h(e,t,n,r,o,0,!1,c,!0)}function d(e,t,n,r,o,c){return h(e,t,n,r,o,c,!0)}function h(e,t,n,o,c,l,d=!1,h=!1,x=!1){const v=[];for(let i=0;i<t.length;i++)t[i]>c&&v.push({score:t[i],boxIndex:i,suppressBeginIndex:0});v.sort(y);const w=l>0?-.5/l:0,O=[],k=[];for(;O.length<n&&v.length>0;){const t=v.pop(),{score:n,boxIndex:l,suppressBeginIndex:d}=t;if(n<c)break;let h=!1;for(let n=O.length-1;n>=d;--n){const r=f(e,l,O[n]);if(r>=o){h=!0;break}if(t.score=t.score*m(o,w,r),t.score<=c)break}t.suppressBeginIndex=O.length,h||(t.score===n?(O.push(l),k.push(t.score)):t.score>c&&r(v,t,y))}const I=O.length,S=n-I;h&&S>0&&(O.push(...new Array(S).fill(0)),k.push(...new Array(S).fill(0)));const N={selectedIndices:O};return d&&(N.selectedScores=k),x&&(N.validOutputs=I),N}function f(e,i,t){const n=e.subarray(4*i,4*i+4),r=e.subarray(4*t,4*t+4),o=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),l=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),h=Math.min(r[0],r[2]),f=Math.min(r[1],r[3]),m=Math.max(r[0],r[2]),y=Math.max(r[1],r[3]),x=(l-o)*(d-c),v=(m-h)*(y-f);if(x<=0||v<=0)return 0;const w=Math.max(o,h),O=Math.max(c,f),k=Math.min(l,m),I=Math.min(d,y),S=Math.max(k-w,0)*Math.max(I-O,0);return S/(x+v-S)}function m(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function y(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return d}))},function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,d(e,t,n)}function o(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,d(e,n,r),d(t,n,r)}function c(e,t,n){return Math.max(e,Math.min(t,n))}function l(e){return e%2==0?e:e+1}function d(object,e,t){const n=object[e];object[e]=object[t],object[t]=n}function h(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i];return t}function f(a,b){const e=Math.random();return b*e+(1-e)*a}function m(a,b){let e=0;for(let i=0;i<a.length;i++){const t=Number(a[i])-Number(b[i]);e+=t*t}return e}function y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function x(e,t,n=""){y(I(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function v(a){y(null!=a,(()=>"The input to the tensor constructor must be a non-null value."))}function w(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||z(e)&&!n)for(let i=0;i<e.length;++i)w(e[i],t,n);else t.push(e);return t}function O(e){if(0===e.length)return 1;let t=e[0];for(let i=1;i<e.length;i++)t*=e[i];return t}function k(e){return 0===e.length}function I(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}function S(a){return a%1==0}function N(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function T(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function C(e){const t=new Uint32Array(e);for(let i=0;i<e;++i)t[i]=i;return r(t),t}function A(a,e){return e<=a.length?a:a+" ".repeat(e-a.length)}function j(e,t=(e=>0),n){return new Promise(((r,o)=>{let c=0;const l=()=>{if(e())return void r();c++;const d=t(c);null!=n&&c>=n?o():setTimeout(l,d)};l()}))}function $(e,t){let n=1,r=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=e.slice();return o[r]=t/n,o}function E(e,t){const n=t.length;return y((e=null==e?t.map(((s,i)=>i)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),y(e.every((e=>S(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((a=>a<0?n+a:a))}function R(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,c=null==t||o?null:E(t,e).sort();let l=0;for(let i=0;i<e.length;++i){if(null!=c){if(c[l]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==c[l]||c[l]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),c[l]<=i&&l++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function F(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function D(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function _(e,t){for(let i=0;i<e.length;i++){const n=e[i];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function M(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function L(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function z(a){return a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array||a instanceof Uint8ClampedArray}function P(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function B(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function W(e){return"string"==typeof e||e instanceof String}function U(e){return"boolean"==typeof e}function V(e){return"number"==typeof e}function G(e){return Array.isArray(e)?G(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":V(e)?"float32":W(e)?"string":U(e)?"bool":"float32"}function H(e){return!!(e&&e.constructor&&e.call&&e.apply)}function K(e,t){for(let i=t;i<e;++i)if(e%i==0)return i;return e}function Y(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let i=t-3;i>=0;--i)n[i]=n[i+1]*e[i+1];return n}function X(e,t,a,n=!1){const r=new Array;if(1===t.length){const o=t[0]*(n?2:1);for(let i=0;i<o;i++)r[i]=a[e+i]}else{const o=t[0],c=t.slice(1),l=c.reduce(((e,t)=>e*t))*(n?2:1);for(let i=0;i<o;i++)r[i]=X(e+i*l,c,a,n)}return r}function Z(e,a,t=!1){if(0===e.length)return a[0];const n=e.reduce(((e,t)=>e*t))*(t?2:1);if(0===n)return[];if(n!==a.length)throw new Error(`[${e}] does not match the input size ${a.length}${t?" for a complex tensor":""}.`);return X(0,e,a,t)}function J(e,t){const n=Q(e,t);for(let i=0;i<n.length;i++)n[i]=1;return n}function Q(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ee(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Z(e,new Float32Array(n));if("int32"===t)return Z(e,new Int32Array(n));if("bool"===t)return Z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function te(e){e.forEach((t=>{y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ne(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let i=0;i<e.length-1;++i)r+=n[i]*e[i];return r}function re(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let i=0;i<r.length-1;++i)r[i]=Math.floor(e/n[i]),e-=r[i]*n[i];return r[r.length-1]=e,r}function ae(object){return object&&object.then&&"function"==typeof object.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return o})),n.d(t,"i",(function(){return c})),n.d(t,"H",(function(){return l})),n.d(t,"S",(function(){return d})),n.d(t,"R",(function(){return h})),n.d(t,"J",(function(){return f})),n.d(t,"l",(function(){return m})),n.d(t,"b",(function(){return y})),n.d(t,"e",(function(){return x})),n.d(t,"d",(function(){return v})),n.d(t,"m",(function(){return w})),n.d(t,"O",(function(){return O})),n.d(t,"y",(function(){return k})),n.d(t,"a",(function(){return I})),n.d(t,"v",(function(){return S})),n.d(t,"T",(function(){return N})),n.d(t,"P",(function(){return T})),n.d(t,"k",(function(){return C})),n.d(t,"L",(function(){return A})),n.d(t,"K",(function(){return j})),n.d(t,"s",(function(){return $})),n.d(t,"I",(function(){return E})),n.d(t,"Q",(function(){return R})),n.d(t,"o",(function(){return F})),n.d(t,"n",(function(){return D})),n.d(t,"h",(function(){return _})),n.d(t,"B",(function(){return M})),n.d(t,"p",(function(){return L})),n.d(t,"A",(function(){return z})),n.d(t,"g",(function(){return P})),n.d(t,"f",(function(){return B})),n.d(t,"z",(function(){return W})),n.d(t,"t",(function(){return U})),n.d(t,"w",(function(){return V})),n.d(t,"r",(function(){return G})),n.d(t,"u",(function(){return H})),n.d(t,"G",(function(){return K})),n.d(t,"j",(function(){return Y})),n.d(t,"U",(function(){return Z})),n.d(t,"D",(function(){return J})),n.d(t,"F",(function(){return Q})),n.d(t,"E",(function(){return ee})),n.d(t,"c",(function(){return te})),n.d(t,"C",(function(){return ne})),n.d(t,"q",(function(){return re})),n.d(t,"x",(function(){return ae}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"d",(function(){return x})),n.d(t,"b",(function(){return y})),n.d(t,"e",(function(){return m})),n.d(t,"c",(function(){return f}));var r=n(547),o=n(513);const c="://";class l{constructor(){this.managers={}}static getInstance(){return null==l.instance&&(l.instance=new l),l.instance}static registerManager(e,t){Object(r.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(c)&&(e=e.slice(0,e.indexOf(c))),Object(r.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=l.getInstance();Object(r.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function d(e){if(-1===e.indexOf(c))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${l.getSchemes().join(",")}`);return{scheme:e.split(c)[0],path:e.split(c)[1]}}async function h(e,t,n=!1){Object(r.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const c=o.a.getLoadHandlers(e);Object(r.b)(c.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(r.b)(c.length<2,(()=>`Copying failed because more than one (${c.length}) load handlers for source URL ${e}.`));const h=c[0],f=o.a.getSaveHandlers(t);Object(r.b)(f.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(r.b)(f.length<2,(()=>`Copying failed because more than one (${c.length}) save handlers for destination URL ${t}.`));const m=f[0],y=d(e).scheme,x=d(e).path,v=y===d(e).scheme,w=await h.load();n&&v&&await l.getManager(y).removeModel(x);const O=await m.save(w);return n&&!v&&await l.getManager(y).removeModel(x),O.modelArtifactsInfo}async function f(){const e=l.getSchemes(),t={};for(const n of e){const e=await l.getManager(n).listModels();for(const path in e){t[n+c+path]=e[path]}}return t}async function m(e){const t=d(e);return l.getManager(t.scheme).removeModel(t.path)}async function y(e,t){return h(e,t,!1)}async function x(e,t){return h(e,t,!0)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({clone_:function(e){const t={x:Object(c.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(o.tb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({tile_:function(e,t){const n=Object(c.a)(e,"x","tile","string_or_numeric");l.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const d={x:n},h={reps:t};return r.a.runKernel(o.dd,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({log_:function(e){const t={x:Object(c.a)(e,"x","log","float32")};return r.a.runKernel(o.Eb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({max_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","max")},d={reductionIndices:t,keepDims:n};return r.a.runKernel(o.Kb,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(547),c=n(518),l=n(554);function d(e,t="float32"){if("complex64"===t){const t=d(e,"float32"),n=Object(l.a)(e,"float32");return Object(c.a)(t,n)}const n=Object(o.D)(Object(o.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(472),o=n(547),c=n(518);function l(e,t="float32"){if("complex64"===t){const t=l(e,"float32"),n=l(e,"float32");return Object(c.a)(t,n)}const n=Object(o.F)(Object(o.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({relu_:function(e){const t={x:Object(c.a)(e,"x","relu")};return r.a.runKernel(o.oc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({unstack_:function(e,t=0){const n=Object(c.a)(e,"x","unstack","string_or_numeric");l.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const d={value:n},h={axis:t};return r.a.runKernel(o.id,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({step_:function(e,t=0){const n={x:Object(c.a)(e,"x","step")},l={alpha:t};return r.a.runKernel(o.Uc,n,l)}})},,,,,,,function(e,t,n){"use strict";n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return y})),n.d(t,"d",(function(){return x})),n.d(t,"g",(function(){return v})),n.d(t,"a",(function(){return w})),n.d(t,"b",(function(){return E})),n.d(t,"c",(function(){return r}));var r,o=n(468),c=n(609),l=n(678);function d(e){return e instanceof o.ed?{value:e.clone(),recurse:!1}:Object(l.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class h{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class f extends h{constructor(){super(f.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let i=0;i<n;i++)t[i]=this.get(this.wrap(this.begin+i));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function m(e){return new O(e)}function y(e){return new k(e)}function x(e,t){return new F(e,t)}function v(e,t=r.FAIL){return new D(e,t)}f.INITIAL_CAPACITY=32;class w{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new j(this,e)}filter(e){return new C(this,e)}map(e){return new A(this,e)}mapAsync(e){return new $(this,e)}serialMapAsync(e){return new $(this,e).serial()}flatmap(e){return new R(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new T(this,e,t)}columnMajorBatch(e,t=!0,n=l.f){return this.rowMajorBatch(e,t).map((e=>Object(l.d)(e,n)))}concatenate(e,t){return new F(m([this,e]),t)}take(e){return e<0||null==e?this:new N(this,e)}skip(e){return e<0||null==e?this:new S(this,e)}prefetch(e){return new _(this,e)}shuffle(e,t){return new M(this,e,t)}serial(){return new I(this)}}class O extends w{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(l.b)(t,d)),done:!1};var t}}class k extends w{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class I extends w{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class S extends w{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;o.Td(e.value)}return this.upstream.next()}}class N extends w{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class T extends w{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class C extends w{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;o.Td(e.value)}}}class A extends w{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=o.sf.getTensorsInContainer(e.value),n=this.transform(e.value),r=o.sf.getTensorsInContainer(n);for(const e of t)o.sf.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class j extends w{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class $ extends w{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=o.sf.getTensorsInContainer(e.value),n=await this.transform(e.value),r=o.sf.getTensorsInContainer(n);for(const e of t)o.sf.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class E extends w{constructor(){super(),this.outputQueue=new f,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class R extends E{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=o.sf.getTensorsInContainer(e.value),n=this.transform(e.value),r=o.sf.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)o.sf.isTensorInList(e,r)||e.dispose();return!0}}class F extends w{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class D extends w{constructor(e,t=r.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const o=await Object(l.c)(this.iterators,(function(e){if(e instanceof w){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:o,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class _ extends w{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new h(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class M extends _{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=c.alea(n||o.Af.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(475);var h=n(470);const f=Object(h.a)({batchNorm_:function(e,t,n,h,f,m){null==m&&(m=.001);const y=Object(c.a)(e,"x","batchNorm"),x=Object(c.a)(t,"mean","batchNorm"),v=Object(c.a)(n,"variance","batchNorm");let w,O;null!=f&&(w=Object(c.a)(f,"scale","batchNorm")),null!=h&&(O=Object(c.a)(h,"offset","batchNorm")),l.b(x.rank===v.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),l.b(null==O||x.rank===O.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),l.b(null==w||x.rank===w.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const k=function(e){let t;return t=0===e.rank||1===e.rank?Object(d.a)(e,[1,1,1,e.size]):2===e.rank?Object(d.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(d.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(y),I={x:k,scale:w,offset:O,mean:x,variance:v},S={varianceEpsilon:m},N=r.a.runKernel(o.lb,I,S);return Object(d.a)(N,y.shape)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return h})),n.d(t,"a",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"e",(function(){return y})),n.d(t,"d",(function(){return x}));var r=n(493),o=n(635),c=n(595);const l=Object(o.a)("kernelRegistry",(()=>new Map)),d=Object(o.a)("gradRegistry",(()=>new Map));function h(e,t){const n=v(e,t);return l.get(n)}function f(e){return d.get(e)}function m(e){const t=l.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[c,l]=o,[d]=c.split("_");d===e&&n.push(l)}return n}function y(e){const{kernelName:t,backendName:n}=e,r=v(t,n);l.has(r)&&c.b(`The kernel '${t}' for backend '${n}' is already registered`),l.set(r,e)}function x(e){const{kernelName:t}=e;d.has(t)&&Object(r.b)().getBool("DEBUG")&&c.b(`Overriding the gradient for '${t}'`),d.set(t,e)}function v(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";(function(e){n(472);var t=n(636),r=n(493);const o=Object(r.b)();o.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),o.registerFlag("IS_BROWSER",(()=>t.isBrowser())),o.registerFlag("IS_NODE",(()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node)),o.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),o.registerFlag("PROD",(()=>!1)),o.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>o.getBool("DEBUG"))),o.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),o.registerFlag("IS_TEST",(()=>!1)),o.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),o.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),o.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1))}).call(this,n(212))},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(472),o=n(547),c=n(474);function l(e,t,n,l){if(null==l&&(l=Object(o.r)(e)),"complex64"===l)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(o.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(o.c)(t);const e=Object(o.O)(t),r=Object(o.O)(n);Object(o.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let i=0;i<n.length;++i){const e=n[i],r=i!==n.length-1||e!==Object(o.O)(t.slice(i));Object(o.b)(n[i]===t[i]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(o.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==l?Object(c.toTypedArray)(e,l):Object(o.m)(e,[],!0),r.a.makeTensor(e,t,l)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(492),h=n(470),f=n(475);const m=Object(h.a)({depthwiseConv2d_:function(e,filter,t,n,h="NHWC",m=[1,1],y){const x=Object(c.a)(e,"x","depthwiseConv2d","float32"),v=Object(c.a)(filter,"filter","depthwiseConv2d","float32");let w=x,O=!1;3===x.rank&&(O=!0,w=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===w.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${w.rank}.`)),l.b(4===v.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${v.rank}.`)),l.b(w.shape[3]===v.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${w.shape[3]}) must match the inChannels dimension in filter ${v.shape[2]}.`)),d.a("depthwiseConv2d",n,y);const k={x:w,filter:v},I={strides:t,pad:n,dataFormat:h,dilations:m,dimRoundingMode:y},S=r.a.runKernel(o.Q,k,I);return O?Object(f.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({equal_:function(a,b){let e=Object(l.a)(a,"a","equal","string_or_numeric"),t=Object(l.a)(b,"b","equal","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.ab,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({expandDims_:function(e,t=0){const n=Object(c.a)(e,"x","expandDims","string_or_numeric");l.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const d={input:n},h={dim:t};return r.a.runKernel(o.db,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(472),o=n(469);function c(e,t,n){const c={shape:e,value:t,dtype:n};return r.a.runKernel(o.gb,{},c)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(479),f=n(470);const m=Object(f.a)({maximum_:function(a,b){let e=Object(l.a)(a,"a","maximum"),t=Object(l.a)(b,"b","maximum");[e,t]=Object(c.makeTypesMatch)(e,t),"bool"===e.dtype&&(e=Object(h.a)(e,"int32"),t=Object(h.a)(t,"int32")),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Qb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({mean_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","mean")},d={axis:t,keepDims:n};return r.a.runKernel(o.Rb,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({reverse_:function(e,t){const n={x:Object(c.a)(e,"x","reverse")},l={dims:t};return r.a.runKernel(o.vc,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({sigmoid_:function(e){const t={x:Object(c.a)(e,"x","sigmoid","float32")};return r.a.runKernel(o.Dc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({real_:function(input){const e={input:Object(c.a)(input,"input","real")};return r.a.runKernel(o.lc,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({imag_:function(input){const e={input:Object(c.a)(input,"input","imag")};return r.a.runKernel(o.ub,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return I}));var r=n(471),o=n(547),c=n(526),l=n(508),d=n(552),h=n(616),f=n(470),m=n(531),y=n(475),x=n(484),v=n(509),w=n(491),O=n(488);function k(e,p,t=null){if(0===e.rank)return Object(c.a)(e);if(1!==e.rank&&null===t)return k(Object(y.a)(e,[-1]),p,t);if(1===e.rank||"number"==typeof t||Array.isArray(t)&&1===t.length){if(1===p)return Object(O.a)(Object(c.a)(e),t);if(p===1/0)return Object(d.a)(Object(c.a)(e),t);if(p===-1/0)return Object(h.a)(Object(c.a)(e),t);if("euclidean"===p||2===p)return Object(v.a)(Object(O.a)(Object(m.a)(Object(c.a)(e),Object(x.a)(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${p}`)}if(Array.isArray(t)&&2===t.length){if(1===p)return Object(d.a)(Object(O.a)(Object(c.a)(e),t[0]),t[1]-1);if(p===1/0)return Object(d.a)(Object(O.a)(Object(c.a)(e),t[1]),t[0]);if(p===-1/0)return Object(h.a)(Object(O.a)(Object(c.a)(e),t[1]),t[0]);if("fro"===p||"euclidean"===p)return Object(v.a)(Object(O.a)(Object(w.a)(e),t));throw new Error(`Error in norm: invalid ord value: ${p}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const I=Object(f.a)({norm_:function(e,t="euclidean",n=null,c=!1){const d=k(e=Object(r.a)(e,"x","norm"),t,n);let h=d.shape;if(c){const t=Object(o.I)(n,e.shape);h=l.e(d.shape,t)}return Object(y.a)(d,h)}})},function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return o})),n.d(t,"maskToAxes",(function(){return c})),n.d(t,"computeOutShape",(function(){return l})),n.d(t,"stridesWithElidedDims",(function(){return d})),n.d(t,"getNormalizedAxes",(function(){return m})),n.d(t,"startIndicesWithElidedDims",(function(){return y})),n.d(t,"stopIndicesWithElidedDims",(function(){return x})),n.d(t,"stridesForAxis",(function(){return v})),n.d(t,"startForAxis",(function(){return w})),n.d(t,"stopForAxis",(function(){return O})),n.d(t,"isSliceContinous",(function(){return k})),n.d(t,"computeFlatOffset",(function(){return I})),n.d(t,"parseSliceParams",(function(){return S})),n.d(t,"sliceInfo",(function(){return N}));var r=n(547);function o(input,e,t){const n=input.shape.length;r.b(n===e.length,(()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`)),r.b(n===t.length,(()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`));for(let i=0;i<n;++i)r.b(e[i]+t[i]<=input.shape[i],(()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${input.shape[i]})`))}function c(mask){const e=[];let t=0;for(;mask>0;)1&mask&&e.push(t),mask/=2,t++;return e}function l(e,t,n){const r=[];for(let o=0;o<e.length;o++)r[o]=Math.ceil((t[o]-e[o])/n[o]);return r}function d(e,t,n,r){const o=[...e];for(let i=o.length;i<r.length;i++)o.push(1);for(let i=0;i<n;i++)0===i?o[t]=1:(o.splice(t,0,1),o.pop());return o}function h(e,t,n){return n<=e?n:n-(t-1)}function f(e,t){const n=[];for(let i=0;i<e;i++)n.push(t+i);return n}function m(e,t,n,r,o,c,l,h,f){const m=e.length;let k=new Array(m),I=new Array(m),S=new Array(m);if(t.length&&n>0){const f=t[0],m=n+1;k=y(l,f,m,r,e),I=x(h,f,m,o,e),S=d(c,f,m,e)}else for(let t=0;t<m;t++)k[t]=w(l,r,c,e,t,f),I[t]=O(h,o,c,e,t,f),S[t]=v(c,t,f);return{begin:k,end:I,strides:S}}function y(e,t,n,r,o){const c=[...o],l=f(n,t);for(let o=0;o<c.length;o++)if(l.indexOf(o)>-1)c[o]=0;else{const l=h(t,n,o);let d=r[l];e&1<<l&&(d=0),c[o]=d}return c}function x(e,t,n,o,c){const l=[...c],d=f(n,t);for(let r=0;r<l.length;r++)if(d.indexOf(r)>-1)l[r]=Number.MAX_SAFE_INTEGER;else{const c=h(t,n,r);let d=o[c];e&1<<c&&(d=Number.MAX_SAFE_INTEGER),l[r]=d}for(let i=0;i<l.length;i++){const e=c[i];l[i]<0&&(l[i]+=e),l[i]=r.i(0,l[i],c[i])}return l}function v(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function w(e,t,n,o,c,l){let d=t[c];const h=n[c]||1;(e&1<<c||l&1<<c||null==d)&&(d=h>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const f=o[c];return d<0&&(d+=f),d=r.i(0,d,f-1),d}function O(e,t,n,o,c,l){let d=t[c];const h=n[c]||1;(e&1<<c||l&1<<c||null==d)&&(d=h>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const f=o[c];return d<0&&(d+=f),d=h>0?r.i(0,d,f):r.i(-1,d,f-1),d}function k(e,t,n){let r=n.length;for(let i=0;i<n.length;i++)if(n[i]>1){r=i;break}for(let i=r+1;i<n.length;i++)if(t[i]>0||n[i]!==e[i])return!1;return!0}function I(e,t){let n=e.length>0?e[e.length-1]:1;for(let i=0;i<e.length-1;i++)n+=e[i]*t[i];return n}function S(e,t,n){let o;const c=e.shape.length;let l;return o="number"==typeof t?[t,...new Array(c-1).fill(0)]:t.length<c?t.concat(new Array(c-t.length).fill(0)):t.slice(),o.forEach((e=>{r.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),l=null==n?new Array(c).fill(-1):"number"==typeof n?[n,...new Array(c-1).fill(-1)]:n.length<c?n.concat(new Array(c-n.length).fill(-1)):n,l=l.map(((t,i)=>t>=0?t:(r.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${i}.`)),e.shape[i]-o[i]))),[o,l]}function N(e,t,n,r,o,c,l,d,h){let f;if(null==r?(f=new Array(t.length),f.fill(1)):f=r,null!=l&&0!=(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let m=!1;const y={dims:f.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:f.slice(),beginMask:o,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h};for(let i=0;i<y.dims;i++)m&&0!=(1<<i&d)&&y.numAddAxisAfterEllipsis++,1<<i&l&&(m=!0);m||(y.ellipsisMask|=1<<y.dims,y.dims++);const x={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let i=0;i<e.dims;i++)if(1<<i&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-i)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=i}else if(1<<i&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[i]),null!=e.end&&(t.end[n]=e.end[i]),t.strides[n]=e.strides[i],e.beginMask&1<<i&&(t.beginMask|=1<<n),e.endMask&1<<i&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<i?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(i)),t.inputShapeGatherIndicesSparse[n]=i,n++}}(y,x);let v=!0,w=!0,O=!0;const k=[],I=[];for(let i=0;i<e.length;++i){if(0===x.strides[i])throw Error(`strides[${i}] must be non-zero`);const t=!!(x.shrinkAxisMask&1<<i),n=e[i];if(-1===n){k.push(t?1:-1);continue}const r=[x.beginMask&1<<i,x.endMask&1<<i],o=[x.strides[i]>0?0:-1,x.strides[i]>0?n:n-1];if(t&&x.strides[i]<=0)throw Error("only stride 1 allowed on non-range indexing.");O=O&&1===x.strides[i];const c=!!(x.beginMask&1<<i&&x.endMask&1<<i);if(x.beginValid&&x.endValid){if(t){const e=x.begin[i]<0?n+x.begin[i]:x.begin[i];if(x.begin[i]=e,x.end[i]=x.begin[i]+1,e<0||e>=n)throw Error(`slice index ${x.begin[i]} of dimension ${i} out of bounds.`)}else x.begin[i]=T(x.begin[i],0,x.strides[i],n,r,o),x.end[i]=T(x.end[i],1,x.strides[i],n,r,o);const e=1===x.strides[i]&&0===x.begin[i]&&x.end[i]===n;v=v&&e,w=w&&(0===i&&1===x.strides[i]||e)}else v=v&&1===x.strides[i]&&c,w=w&&(0===i&&1===x.strides[i]||c);let l,d=!1;if(x.beginValid&&x.endValid?(l=x.end[i]-x.begin[i],d=!0):t?(l=1,d=!0):c&&n>=0&&(l=x.strides[i]<0?-n:n,d=!0),d){let e;e=0===l||l<0!=x.strides[i]<0?0:Math.trunc(l/x.strides[i])+(l%x.strides[i]!=0?1:0),k.push(e)}else k.push(-1)}for(let e=0;e<x.finalShapeGatherIndices.length;++e){const t=x.finalShapeGatherIndices[e];t>=0?I.push(k[t]):-2===t&&I.push(1)}return{finalShapeSparse:I.filter(((e,i)=>-2!==x.finalShapeGatherIndices[i])),finalShape:I,isIdentity:v,sliceDim0:w,isSimpleSlice:O,begin:x.begin,end:x.end,strides:x.strides}}function T(e,t,n,r,o,c){if(o[t])return n>0?c[t]:c[t+1&1];{const t=e<0?r+e:e;return t<c[0]?c[0]:t>c[1]?c[1]:t}}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l}));var r=n(547);function o(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,c=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(c+` update.rank < ${o}. `);if(e.length<r+(n.rank-o))throw new Error(c+` Output shape length < ${r+(n.rank-o)}`);if(n.rank!==o+e.length-r)throw new Error(c+" update.rank != "+(o+e.length-r));for(let e=0;e<o;++e)if(n.shape[e]!==t.shape[e])throw new Error(c+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-o;++t)if(n.shape[t+o]!==e[t+r])throw new Error(c+` updates.shape[${t+o}] (${n.shape[t+o]}) != shape[${t+o}] (${e[t+o]})`)}function c(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}o(n,t,e)}function l(e,t,n){const o=t.shape.length,c=o>1?t.shape[o-1]:1,l=n.length;let d=1;for(let i=c;i<l;++i)d*=n[i];const h=c<1?1:c;return{sliceRank:c,numUpdates:Object(r.O)(t.shape)/h,sliceSize:d,strides:[...Object(r.j)(n.slice(0,c)),1],outputSize:Object(r.O)(n)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({spaceToBatchND_:function(e,t,n){const d=Object(c.a)(e,"x","spaceToBatchND");l.b(d.rank>=1+t.length,(()=>`input rank ${d.rank} should be > than [blockShape] ${t.length}`)),l.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),l.b(d.shape.reduce(((a,b,i)=>i>0&&i<=t.length?a&&(b+n[i-1][0]+n[i-1][1])%t[i-1]==0:a),!0),(()=>`input spatial dimensions ${d.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const h={x:d},f={blockShape:t,paddings:n};return r.a.runKernel(o.Kc,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({logicalNot_:function(e){const t={x:Object(c.a)(e,"x","logicalNot","bool")};return r.a.runKernel(o.Ib,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({batchToSpaceND_:function(e,t,n){const d=Object(c.a)(e,"x","batchToSpaceND"),h=t.reduce(((a,b)=>a*b));l.b(d.rank>=1+t.length,(()=>`input rank is ${d.rank} but should be > than blockShape.length ${t.length}`)),l.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),l.b(d.shape[0]%h==0,(()=>`input tensor batch is ${d.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${h}`));const f={x:d},m={blockShape:t,crops:n};return r.a.runKernel(o.t,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));const r={};function o(e){return r[e]}},,,,,,,,,,function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n(493);function o(...e){Object(r.b)().getBool("IS_TEST")||Object(r.b)().getBool("PROD")||console.warn(...e)}function c(...e){Object(r.b)().getBool("IS_TEST")||Object(r.b)().getBool("PROD")||console.log(...e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return c("refCount")}incRef(e){return c("incRef")}timerAvailable(){return!0}time(e){return c("time")}read(e){return c("read")}readSync(e){return c("readSync")}readToGPU(e,t){return c("readToGPU")}numDataIds(){return c("numDataIds")}disposeData(e,t){return c("disposeData")}write(e,t,n){return c("write")}move(e,t,n,r,o){return c("move")}memory(){return c("memory")}floatPrecision(){return c("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return c("dispose")}}function c(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(471),o=n(568);function c(e,t,n){const c=Object(r.c)(e,n);return Object(o.a)(e,t,c,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(479),h=n(492),f=n(470),m=n(475);const y=Object(f.a)({avgPool_:function(e,t,n,f,y){const x=Object(c.a)(e,"x","avgPool","float32");l.b(h.i(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let v=x,w=!1;3===x.rank&&(w=!0,v=Object(m.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===v.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${v.rank}.`)),h.a("avgPool",f,y);const O={x:v},k={filterSize:t,strides:n,pad:f,dimRoundingMode:y};let I=r.a.runKernel(o.o,O,k);return I=Object(d.a)(I,x.dtype),w?Object(m.a)(I,[I.shape[1],I.shape[2],I.shape[3]]):I}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({floorDiv_:function(a,b){let e=Object(l.a)(a,"a","floorDiv"),t=Object(l.a)(b,"b","floorDiv");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.jb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({elu_:function(e){const t={x:Object(c.a)(e,"x","elu","float32")};return r.a.runKernel(o.Y,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({floor_:function(e){const t={x:Object(c.a)(e,"x","floor","float32")};return r.a.runKernel(o.ib,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({gather_:function(e,t,n=0,l=0){const d={x:Object(c.a)(e,"x","gather"),indices:Object(c.a)(t,"indices","gather","int32")},h={axis:n,batchDims:l};return r.a.runKernel(o.pb,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({leakyRelu_:function(e,t=.2){const n={x:Object(c.a)(e,"x","leakyRelu")},l={alpha:t};return r.a.runKernel(o.Ab,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(492),h=n(470),f=n(475);const m=Object(h.a)({maxPool_:function(e,t,n,h,m){const y=Object(c.a)(e,"x","maxPool");let x=y,v=!1;3===y.rank&&(v=!0,x=Object(f.a)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),l.b(4===x.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${x.rank}.`)),l.b(d.i(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),d.a("maxPool",h,m);const w={x:x},O={filterSize:t,strides:n,pad:h,dimRoundingMode:m},k=r.a.runKernel(o.Lb,w,O);return v?Object(f.a)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(479),f=n(470);const m=Object(f.a)({minimum_:function(a,b){let e=Object(l.a)(a,"a","minimum"),t=Object(l.a)(b,"b","minimum");[e,t]=Object(c.makeTypesMatch)(e,t),"bool"===e.dtype&&(e=Object(h.a)(e,"int32"),t=Object(h.a)(t,"int32")),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Tb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({notEqual_:function(a,b){let e=Object(l.a)(a,"a","notEqual","string_or_numeric"),t=Object(l.a)(b,"b","notEqual","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.cc,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({pad_:function(e,t,n=0){const l=Object(c.a)(e,"x","pad");if(0===l.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const d={paddings:t,constantValue:n},h={x:l};return r.a.runKernel(o.gc,h,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({prelu_:function(e,t){const n={x:Object(c.a)(e,"x","prelu"),alpha:Object(c.a)(t,"alpha","prelu")};return r.a.runKernel(o.ic,n)}})},function(e,t,n){var r=n(864),o=n(865),c=n(866),l=n(867),d=n(868),h=n(869),f=n(870);f.alea=r,f.xor128=o,f.xorwow=c,f.xorshift7=l,f.xor4096=d,f.tychei=h,e.exports=f},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(471),o=n(547),c=n(470),l=n(475);const d=Object(c.a)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(l.a)(n,Object(o.Q)(n.shape,t).newShape)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(549),d=n(470),h=n(475);const f=Object(d.a)({broadcastTo_:function(e,t){let input=Object(c.a)(e,"broadcastTo","x");const n=input.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<input.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${input.rank}.`);if(t.length>input.rank){const e=input.shape.slice();for(;e.length<t.length;)e.unshift(1);input=Object(h.a)(input,e)}const d=input.shape,f=Array.from(t);for(let i=t.length-1;i>=0;i--)if(d[i]===t[i])f[i]=1;else if(1!==input.shape[i])throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(0===f.map(((e,i)=>e>1?i:-1)).filter((i=>i>=0)).length)return Object(l.a)(input);const m={x:input},y={reps:f};return r.a.runKernel(o.dd,m,y)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(547),l=n(470);const d=Object(l.a)({fft_:function(input){Object(c.b)("complex64"===input.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${input.dtype}.`));const e={input:input};return r.a.runKernel(o.fb,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(547),l=n(470);const d=Object(l.a)({ifft_:function(input){Object(c.b)("complex64"===input.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${input.dtype}.`));const e={input:input};return r.a.runKernel(o.sb,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var r=n(547),o=n(518),c=n(503),l=n(578),d=n(470),h=n(577),f=n(475),m=n(500),y=n(532),x=n(554),v=n(485),w=n(612);const O=Object(d.a)({rfft_:function(input,e){Object(r.b)("float32"===input.dtype,(()=>`The dtype for rfft() must be real value but got ${input.dtype}`));let t=input.shape[input.shape.length-1];const n=input.size/t;let d;if(null!=e&&e<t){const n=input.shape.map((e=>0)),r=input.shape.map((e=>e));r[input.shape.length-1]=e,d=Object(m.a)(input,n,r),t=e}else if(null!=e&&e>t){const n=input.shape.map((e=>e));n[input.shape.length-1]=e-t,d=Object(c.a)([input,Object(x.a)(n)],input.shape.length-1),t=e}else d=input;const O=Object(v.a)(d),k=Object(f.a)(Object(o.a)(d,O),[n,t]),I=Object(w.a)(k),S=Math.floor(t/2)+1,N=Object(h.a)(I),T=Object(l.a)(I),C=Object(y.a)(N,[S,t-S],N.shape.length-1),A=Object(y.a)(T,[S,t-S],T.shape.length-1),j=d.shape.slice();return j[d.shape.length-1]=S,Object(f.a)(Object(o.a)(C[0],A[0]),j)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(472),o=n(469);function c(e,t,n=1,c="float32"){if(0===n)throw new Error("Cannot have a step of zero");const l={start:e,stop:t,step:n,dtype:c};return r.a.runKernel(o.kc,{},l)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({min_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","min")},d={axis:t,keepDims:n};return r.a.runKernel(o.Sb,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({squaredDifference_:function(a,b){let e=Object(l.a)(a,"a","squaredDifference"),t=Object(l.a)(b,"b","squaredDifference");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Tc,n,{})}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var r=n(471),o=n(547),c=n(487),l=n(508),d=n(514),h=n(551),f=n(552),m=n(470),y=n(475),x=n(483),v=n(488);const w=Object(m.a)({logSumExp_:function(e,t=null,n=!1){const m=Object(r.a)(e,"x","logSumExp"),w=Object(o.I)(t,m.shape),O=Object(f.a)(m,w,!0),a=Object(x.a)(m,O),b=Object(d.a)(a),k=Object(v.a)(b,w),I=Object(h.a)(k),S=Object(c.a)(Object(y.a)(O,I.shape),I);if(n){const e=Object(l.e)(S.shape,w);return Object(y.a)(S,e)}return S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({relu6_:function(e){const t={x:Object(c.a)(e,"x","relu6")};return r.a.runKernel(o.pc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({cumsum_:function(e,t=0,n=!1,l=!1){const d={x:Object(c.a)(e,"x","cumsum")},h={axis:t,exclusive:n,reverse:l};return r.a.runKernel(o.N,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({unsortedSegmentSum_:function(e,t,n){const d=Object(c.a)(e,"x","unsortedSegmentSum"),h=Object(c.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(l.b)(Object(l.v)(n),(()=>"numSegments must be of dtype int"));const f={x:d,segmentIds:h},m={numSegments:n};return r.a.runKernel(o.jd,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(482),h=n(470);const f=Object(h.a)({less_:function(a,b){let e=Object(l.a)(a,"a","less","string_or_numeric"),t=Object(l.a)(b,"b","less","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Bb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({cumprod_:function(e,t=0,n=!1,l=!1){const d={x:Object(c.a)(e,"x","cumprod")},h={axis:t,exclusive:n,reverse:l};return r.a.runKernel(o.M,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({cos_:function(e){const t={x:Object(c.a)(e,"x","cos","float32")};return r.a.runKernel(o.J,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(482),d=n(470);const h=Object(d.a)({logicalOr_:function(a,b){const e=Object(c.a)(a,"a","logicalOr","bool"),t=Object(c.a)(b,"b","logicalOr","bool");Object(l.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Jb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470),h=n(475);const f=2147483648;const m=Object(d.a)({searchSorted_:function(e,t,n="left"){const d=Object(c.a)(e,"sortedSequence","searchSorted"),m=Object(c.a)(t,"values","searchSorted"),y=d.shape[d.shape.length-1],x=m.shape[m.shape.length-1],v=Object(h.a)(d,[-1,y]),w=Object(h.a)(m,[-1,x]);if(v.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(v.shape[0]!==w.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Object(l.O)(w.shape)>=f)throw new Error("values tensor size must less than 2147483648");if(v.shape[1]>=f)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${v.shape[1]}`);const O={sortedSequence:v,values:w},k={side:n};return r.a.runKernel(o.Ac,O,k)}})},,,,,,,,,function(e,t,n){"use strict";(function(e,r){let o;function c(){if(null==o){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}o=t}return o}function l(e,t){const n=function(){const e=c();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l}))}).call(this,n(79),n(212))},function(e,t,n){"use strict";let r;function o(e){r=e}function c(nav){if(void 0!==r)return r;if(nav||"undefined"!=typeof navigator&&null!=navigator){if(nav||(nav=navigator),"ReactNative"===nav.product)return!0;const a=nav.userAgent||nav.vendor||("undefined"!=typeof window?window.opera:"");if(!a){const e=nav;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))}return!1}function l(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"mockIsMobile",(function(){return o})),n.d(t,"isMobile",(function(){return c})),n.d(t,"isBrowser",(function(){return l}))},function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({all_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","all","bool")},d={axis:t,keepDims:n};return r.a.runKernel(o.f,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({any_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","any","bool")},d={axis:t,keepDims:n};return r.a.runKernel(o.g,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({argMax_:function(e,t=0){const n={x:Object(c.a)(e,"x","argMax")},l={axis:t};return r.a.runKernel(o.h,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(471),o=n(547),c=n(527),l=n(492),d=n(470),h=n(475);const f=Object(d.a)({conv1d_:function(e,filter,t,n,d="NWC",f=1,m){const y=Object(r.a)(e,"x","conv1d"),x=Object(r.a)(filter,"filter","conv1d");let v=y,w=!1;2===y.rank&&(w=!0,v=Object(h.a)(y,[1,y.shape[0],y.shape[1]])),o.b(3===v.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${v.rank}.`)),o.b(3===x.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${x.rank}.`)),l.a("conv1d",n,m),o.b(v.shape[2]===x.shape[1],(()=>`Error in conv1d: depth of input (${v.shape[2]}) must match input depth for filter ${x.shape[1]}.`)),o.b(l.i(t,f),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${f}'`)),o.b("NWC"===d,(()=>`Error in conv1d: got dataFormat of ${d} but only NWC is currently supported.`));const O=Object(h.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]]),k=Object(h.a)(v,[v.shape[0],1,v.shape[1],v.shape[2]]),I=[1,t],S=[1,f],N=Object(c.a)(k,O,I,n,"NHWC",S,m);return w?Object(h.a)(N,[N.shape[2],N.shape[3]]):Object(h.a)(N,[N.shape[0],N.shape[2],N.shape[3]])}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(471),o=n(643),c=n(470);const l=Object(c.a)({conv2dTranspose_:function(e,filter,t,n,c,l){const d=Object(r.a)(e,"x","conv2dTranspose"),h=Object(r.a)(filter,"filter","conv2dTranspose");return Object(o.a)(t,d,h,n,c,"NHWC",l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(547),l=n(492),d=n(470),h=n(475);const f=Object(d.a)({conv2DBackpropInput_:function(e,t,filter,n,d,f="NHWC",m){c.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let y=e,x=t,v=!1;3===t.rank&&(v=!0,x=Object(h.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),y=[1,e[0],e[1],e[2]]),c.b(4===y.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${y.length}.`)),c.b(4===x.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${x.rank}`)),c.b(4===filter.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${filter.rank}`));const w="NHWC"===f?y[3]:y[1],O="NHWC"===f?x.shape[3]:x.shape[1];c.b(w===filter.shape[2],(()=>`Error in conv2dDerInput: depth of input (${w}) must match input depth for filter ${filter.shape[2]}.`)),c.b(O===filter.shape[3],(()=>`Error in conv2dDerInput: depth of output (${O}) must match output depth for filter ${filter.shape[3]}.`)),l.a("conv2dDerInput",d,m);const k={dy:x,filter:filter},I={strides:n,pad:d,dataFormat:f,dimRoundingMode:m,inputShape:y},S=r.a.runKernel(o.F,k,I);return v?Object(h.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({log1p_:function(e){const t={x:Object(c.a)(e,"x","log1p")};return r.a.runKernel(o.Fb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({oneHot_:function(e,t,n=1,l=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const d={indices:Object(c.a)(e,"indices","oneHot","int32")},h={depth:t,onValue:n,offValue:l};return r.a.runKernel(o.dc,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return c}));var r=n(609);n(647);class o{constructor(e,t,n,o,c){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const l=c||Math.random();this.random=r.alea(l.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const c=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*c,t=this.mean+this.stdDev*o*c,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class c{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==o&&(o=Math.random()),"number"==typeof o&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n(472);n(471),n(547),n(474);function o(){return 32===r.a.backend.floatPrecision()?.001:.1}function c(a,e,t){if(null==t&&(t=o()),!l(a,e,t))throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`)}function l(a,e,t){return!isFinite(a)&&!isFinite(e)||!(isNaN(a)||isNaN(e)||Math.abs(a-e)>t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(519),o=n(470),c=n(646);const l=Object(o.a)({randomUniform_:function(e,t=0,n=1,o="float32",l){const d=Object(r.a)(e,o),h=new c.b(t,n,null,l);for(let i=0;i<d.values.length;i++)d.values[i]=h.nextValue();return d.toTensor()}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({selu_:function(e){const t={x:Object(c.a)(e,"x","selu")};return r.a.runKernel(o.Cc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(471),o=n(547),c=n(527),l=n(569),d=n(470),h=n(475);const f=Object(d.a)({separableConv2d_:function(e,t,n,d,f,m=[1,1],y="NHWC"){const x=Object(r.a)(e,"x","separableConv2d"),v=Object(r.a)(t,"depthwiseFilter","separableConv2d"),w=Object(r.a)(n,"pointwiseFilter","separableConv2d");let O=x,k=!1;if(3===x.rank&&(k=!0,O=Object(h.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),"NCHW"===y)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");o.b(4===O.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${O.rank}.`)),o.b(4===v.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${v.rank}.`)),o.b(4===w.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${v.rank}.`)),o.b(1===w.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${w.shape[0]}.`)),o.b(1===w.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${w.shape[1]}.`));const I=v.shape[2],S=v.shape[3];o.b(w.shape[2]===I*S,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${I*S}, but got ${w.shape[2]}.`));const N=Object(l.a)(O,v,d,f,y,m),T=Object(c.a)(N,w,1,"valid",y);return k?Object(h.a)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({softplus_:function(e){const t={x:Object(c.a)(e,"x","softplus")};return r.a.runKernel(o.Jc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var r=n(518),o=n(503),c=n(578),l=n(476),d=n(470),h=n(577),f=n(475),m=n(575),y=n(484),x=n(500),v=n(613);const w=Object(d.a)({irfft_:function(input){const e=input.shape[input.shape.length-1],t=input.size/e;let n;if(e<=2){const r=Object(f.a)(input,[t,e]);n=Object(v.a)(r)}else{const d=[t,2*(e-1)],w=Object(f.a)(Object(h.a)(input),[t,e]),O=Object(f.a)(Object(c.a)(input),[t,e]),k=Object(m.a)(Object(x.a)(w,[0,1],[t,e-2]),1),I=Object(l.a)(Object(m.a)(Object(x.a)(O,[0,1],[t,e-2]),1),Object(y.a)(-1)),S=Object(o.a)([w,k],1),i=Object(o.a)([O,I],1),N=Object(f.a)(Object(r.a)(S,i),[d[0],d[1]]);n=Object(v.a)(N)}if(n=Object(h.a)(n),3===input.rank&&0!==input.shape[0]){const e=n,t=input.shape[0];n=Object(f.a)(n,[t,n.shape[0]/t,n.shape[1]]),e.dispose()}return n}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({bincount_:function(e,t,n){const d=Object(c.a)(e,"x","bincount"),h=Object(c.a)(t,"weights","bincount");l.b("int32"===d.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${d.dtype}`)),l.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),l.b(h.size===d.size||0===h.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${d.shape}, weights shape: ${h.shape}.`));const f={x:d,weights:h},m={size:n};return r.a.runKernel(o.u,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({round_:function(e){const t={x:Object(c.a)(e,"x","round")};return r.a.runKernel(o.xc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(547),l=n(492),d=n(470),h=n(475);const f=Object(d.a)({conv2DBackpropFilter_:function(e,t,n,d,f,m="NHWC",y){let x=e;3===e.rank&&(x=Object(h.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let v=t;3===v.rank&&(v=Object(h.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),c.b(4===x.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${x.shape}.`)),c.b(4===v.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${v.shape}.`)),c.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const w="NHWC"===m?x.shape[3]:x.shape[1],O="NHWC"===m?v.shape[3]:v.shape[1];c.b(w===n[2],(()=>`Error in conv2dDerFilter: depth of input ${w}) must match input depth in filter (${n[2]}.`)),c.b(O===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${O}) must match output depth for filter (${n[3]}).`)),l.a("conv2dDerFilter",f,y);const k={x:x,dy:v},I={strides:d,pad:f,dataFormat:m,dimRoundingMode:y,filterShape:n};return r.a.runKernel(o.E,k,I)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(471),o=n(547),c=n(568);function l(e,t,n){if(Object(o.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const l=Object(r.c)(e,n);if(3!==l.length&&1!==l.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===l.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(c.a)(e,t,l,n)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return o}));const r=1.7580993408473768,o=1.0507009873554805},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(519);function o(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const o=Object(r.a)(e,"int32"),c=Object(r.a)([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=o.indexToLoc(n[i]),r=i*e.length;c.values.set(t,r)}return c.toTensor()}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({sin_:function(e){const t={x:Object(c.a)(e,"x","sin","float32")};return r.a.runKernel(o.Fc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({sinh_:function(e){const t={x:Object(c.a)(e,"x","sinh")};return r.a.runKernel(o.Gc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({rsqrt_:function(e){const t={x:Object(c.a)(e,"x","rsqrt","float32")};return r.a.runKernel(o.yc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({cosh_:function(e){const t={x:Object(c.a)(e,"x","cosh","float32")};return r.a.runKernel(o.K,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({argMin_:function(e,t=0){const n={x:Object(c.a)(e,"x","argMin")},l={axis:t};return r.a.runKernel(o.i,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({atan2_:function(a,b){let e=Object(l.a)(a,"a","atan2"),t=Object(l.a)(b,"b","atan2");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.m,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({depthToSpace_:function(e,t,n="NHWC"){const d=Object(c.a)(e,"x","depthToSpace","float32"),h="NHWC"===n?d.shape[1]:d.shape[2],f="NHWC"===n?d.shape[2]:d.shape[3],m="NHWC"===n?d.shape[3]:d.shape[1];l.b(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),l.b(h*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${h} and ${t}  for depthToSpace with input shape\n    ${d.shape}`)),l.b(f*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${f} and ${t} for depthToSpace with input shape\n        ${d.shape}`)),l.b(m%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${m} for depthToSpace with input shape ${d.shape}`));const y={x:d},x={blockSize:t,dataFormat:n};return r.a.runKernel(o.P,y,x)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470),h=n(475);const f=Object(d.a)({dilation2d_:function(e,filter,t,n,d=[1,1],f="NHWC"){const m=Object(c.a)(e,"x","dilation2d"),y=Object(c.a)(filter,"filter","dilation2d");l.b(3===m.rank||4===m.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${m.rank}.`)),l.b(3===y.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${y.rank}.`)),l.b("NHWC"===f,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${f}`));let x=m,v=!1;3===m.rank&&(x=Object(h.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]]),v=!0);const w={x:x,filter:y},O={strides:t,pad:n,dilations:d},k=r.a.runKernel(o.U,w,O);return v?Object(h.a)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(486),o=n(471),c=n(481),l=n(570),d=n(470),h=n(501),f=n(485);const m=Object(d.a)({divNoNan_:function(a,b){let e=Object(o.a)(a,"a","div"),t=Object(o.a)(b,"b","div");[e,t]=Object(r.makeTypesMatch)(e,t);const n=Object(c.a)(e,t),d=Object(f.a)(n),m=Object(l.a)(t,d);return Object(h.a)(m,d,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(471),o=n(547),c=n(530),l=n(470),d=n(475);const h=Object(l.a)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),l=Object(r.a)(t,"t2","dot");o.b(!(1!==n.rank&&2!==n.rank||1!==l.rank&&2!==l.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${l.rank}.`));const h=1===n.rank?n.size:n.shape[1],f=1===l.rank?l.size:l.shape[0];if(o.b(h===f,(()=>`Error in dot: inner dimensions of inputs must match, but got ${h} and ${f}.`)),1===n.rank&&1===l.rank){const e=Object(d.a)(n,[1,-1]),t=Object(d.a)(l,[-1,1]),r=Object(c.a)(e,t);return Object(d.a)(r,[])}if(1===n.rank&&2===l.rank){const e=Object(d.a)(n,[1,-1]),t=Object(d.a)(l,[l.shape[0],l.shape[1]]),r=Object(c.a)(e,t);return Object(d.a)(r,[r.size])}if(2===n.rank&&1===l.rank){const e=Object(d.a)(l,[-1,1]),t=Object(c.a)(n,e);return Object(d.a)(t,[t.size])}{const e=Object(d.a)(l,[l.shape[0],l.shape[1]]);return Object(c.a)(n,e)}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(579),o=n(470);const c=Object(o.a)({euclideanNorm_:function(e,t=null,n=!1){return Object(r.a)(e,"euclidean",t,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470),h=n(475);const f=Object(d.a)({localResponseNormalization_:function(e,t=5,n=1,d=1,f=.5){const m=Object(c.a)(e,"x","localResponseNormalization");l.b(4===m.rank||3===m.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${m.rank}.`)),l.b(l.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let y=m,x=!1;3===m.rank&&(x=!0,y=Object(h.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]]));const v={x:y},w={depthRadius:t,bias:n,alpha:d,beta:f},O=r.a.runKernel(o.yb,v,w);return x?Object(h.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(471),o=n(482),c=n(529),l=n(583),d=n(625),h=n(470);const f=Object(h.a)({logicalXor_:function(a,b){const e=Object(r.a)(a,"a","logicalXor","bool"),t=Object(r.a)(b,"b","logicalXor","bool");return Object(o.assertAndGetBroadcastShape)(e.shape,t.shape),Object(c.a)(Object(d.a)(a,b),Object(l.a)(Object(c.a)(a,b)))}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({mirrorPad_:function(e,t,n){l.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const d=Object(c.a)(e,"x","mirrorPad");if(0===d.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");l.b(t.length===d.rank,(()=>`Padding doesn't match input. Must be ${d.rank}. Got ${t.length}.`));const h="reflect"===n?1:0;for(let i=0;i<d.rank;i++)l.b(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),l.b(t[i][0]>=0&&t[i][0]<=d.shape[i]-h&&t[i][1]>=0&&t[i][1]<=d.shape[i]-h,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${d.shape[i]-h} or less than 0 for input of shape ${d.shape}`));const f={paddings:t,mode:n},m={x:d};return r.a.runKernel(o.Ub,m,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(486),l=n(471),d=n(470);const h=Object(d.a)({mod_:function(a,b){let e=Object(l.a)(a,"a","mod"),t=Object(l.a)(b,"b","mod");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Vb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var r=n(471),o=n(547),c=n(598),l=n(584),d=n(492),h=n(604),f=n(470),m=n(475),y=n(582);const x=Object(f.a)({pool_:function(input,e,t,n,f,x,v){null==f&&(f=[1,1]),null==x&&(x=1),0===n&&(n="valid");const w=Object(r.a)(input,"x","maxPool");let O=w,k=!1;3===w.rank&&(k=!0,O=Object(m.a)(w,[1,w.shape[0],w.shape[1],w.shape[2]])),o.b(d.i(x,f),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${x} and dilations '${f}'`));const I=d.f(O.shape,e,x,f,n),S=[I.dilationHeight,I.dilationWidth];let N;N="same"===n?function(e,t){const n=e.map(((s,i)=>s+(s-1)*(t[i]-1))).map((s=>s-1)),r=n.map((s=>Math.floor(s/2))),o=n.map(((s,i)=>s-r[i]));return n.map(((e,i)=>[r[i],o[i]]))}([I.filterHeight,I.filterWidth],S):[[0,0],[0,0]];const T=1===S[0]&&1===S[1],[C,A]=function(e,t,n){const r=n.map((b=>b[0])),o=n.map((b=>b[1])),c=e.concat(r,o),l=t.map(((b,i)=>(b-c[i]%b)%b)),d=o.map(((s,i)=>s+l[i])),h=t.map(((e,i)=>[r[i],d[i]])),f=t.map(((e,i)=>[0,l[i]]));return[h,f]}([I.inHeight,I.inWidth],S,N),j=T?n:"valid",$=T?O:Object(y.a)(O,S,C),E=("avg"===t?()=>Object(c.a)($,e,x,j,v):()=>Object(h.a)($,e,x,j,v))(),R=T?E:Object(l.a)(E,S,A);return k?Object(m.a)(R,[R.shape[1],R.shape[2],R.shape[3]]):R}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(479),d=n(470);const h=Object(d.a)({prod_:function(e,t=null,n=!1){let d=Object(c.a)(e,"x","prod");"bool"===d.dtype&&(d=Object(l.a)(d,"int32"));const h={x:d},f={axis:t,keepDims:n};return r.a.runKernel(o.jc,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({topk_:function(e,t=1,n=!0){const l=Object(c.a)(e,"x","topk");if(0===l.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const d=l.shape[l.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>d)throw new Error(`'k' passed to topk() must be <= the last dimension (${d}) but got ${t}`);const h={x:l},f={k:t,sorted:n},[m,y]=r.a.runKernel(o.ed,h,f);return{values:m,indices:y}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({unique_:function(e,t=0){const n=Object(c.a)(e,"x","unique","string_or_numeric");Object(l.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const d={x:n},h={axis:t},[f,m]=r.a.runKernel(o.hd,d,h);return{values:f,indices:m}}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"d",(function(){return l})),n.d(t,"f",(function(){return h})),n.d(t,"c",(function(){return f})),n.d(t,"e",(function(){return m})),n.d(t,"a",(function(){return y}));var r=n(468);function o(input,e){return c(input,e)}function c(input,e,t=new Map,n=new Set){if(null==input)return null;if("function"==typeof Blob&&input instanceof Blob)return input.slice();if(n.has(input))throw new Error("Circular references are not supported.");if(t.has(input))return t.get(input);const r=e(input);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(m(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const l=c(input[o],e,t,n);r[o]=l}return n.delete(input),input.__proto__&&(r.__proto__=input.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${input}`)}return t.set(input,r.value),r.value}function l(e,t=h){return d(e,t)}function d(e,t,n=new Set){const input=e[0];if(n.has(input))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(m(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const c=d(e.map((e=>e[o])),t,n);r[o]=c}return n.delete(input),r}throw new Error(`Can't recurse into non-iterable type: ${input}`)}return r.value}function h(e){return null===e?null:m(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function f(input,e){const t=new Map;c(input,e,t);for(const e of Array.from(t.keys())){const n=t.get(e);if(r.Af.isPromise(n)){const r=await n;t.set(e,r)}}return c(input,e,t)}function m(e){let t=!1;if(r.Yd().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(764);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.ed)&&!(e instanceof Promise)&&!t)}function y(e){return null==e||(null===(t=e)||"object"!=typeof t&&"function"!=typeof t)||Array.isArray(e)||"object"==typeof e&&e instanceof r.ed||r.Af.isTypedArray(e);var t}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"fc",(function(){return fe})),n.d(t,"ed",(function(){return H.a})),n.d(t,"fd",(function(){return H.b})),n.d(t,"nf",(function(){return me.a})),n.d(t,"zf",(function(){return me.b})),n.d(t,"pd",(function(){return be.a})),n.d(t,"qd",(function(){return be.b})),n.d(t,"rd",(function(){return be.c})),n.d(t,"sd",(function(){return be.d})),n.d(t,"td",(function(){return be.e})),n.d(t,"ud",(function(){return be.f})),n.d(t,"vd",(function(){return be.g})),n.d(t,"yd",(function(){return be.h})),n.d(t,"zd",(function(){return be.i})),n.d(t,"Ad",(function(){return be.j})),n.d(t,"Dd",(function(){return be.k})),n.d(t,"Ed",(function(){return be.l})),n.d(t,"Fd",(function(){return be.m})),n.d(t,"Gd",(function(){return be.n})),n.d(t,"Hd",(function(){return be.o})),n.d(t,"Id",(function(){return be.p})),n.d(t,"Jd",(function(){return be.q})),n.d(t,"Kd",(function(){return be.r})),n.d(t,"Ld",(function(){return be.s})),n.d(t,"Md",(function(){return be.t})),n.d(t,"Nd",(function(){return be.u})),n.d(t,"Od",(function(){return be.v})),n.d(t,"Pd",(function(){return be.w})),n.d(t,"Qd",(function(){return be.x})),n.d(t,"Rd",(function(){return be.y})),n.d(t,"Ud",(function(){return be.z})),n.d(t,"Wd",(function(){return be.B})),n.d(t,"Zd",(function(){return be.C})),n.d(t,"ae",(function(){return be.D})),n.d(t,"be",(function(){return be.E})),n.d(t,"ce",(function(){return be.F})),n.d(t,"de",(function(){return be.G})),n.d(t,"ee",(function(){return be.H})),n.d(t,"ge",(function(){return be.J})),n.d(t,"he",(function(){return be.K})),n.d(t,"ie",(function(){return be.L})),n.d(t,"ne",(function(){return be.N})),n.d(t,"pe",(function(){return be.P})),n.d(t,"qe",(function(){return be.Q})),n.d(t,"re",(function(){return be.R})),n.d(t,"se",(function(){return be.S})),n.d(t,"te",(function(){return be.T})),n.d(t,"ue",(function(){return be.U})),n.d(t,"ve",(function(){return be.V})),n.d(t,"we",(function(){return be.W})),n.d(t,"xe",(function(){return be.X})),n.d(t,"ye",(function(){return be.Y})),n.d(t,"Ae",(function(){return be.Z})),n.d(t,"Be",(function(){return be.ab})),n.d(t,"Ce",(function(){return be.bb})),n.d(t,"De",(function(){return be.cb})),n.d(t,"Fe",(function(){return be.db})),n.d(t,"Ge",(function(){return be.eb})),n.d(t,"He",(function(){return be.fb})),n.d(t,"Ie",(function(){return be.gb})),n.d(t,"Je",(function(){return be.hb})),n.d(t,"Ke",(function(){return be.ib})),n.d(t,"Le",(function(){return be.jb})),n.d(t,"Me",(function(){return be.kb})),n.d(t,"Ne",(function(){return be.lb})),n.d(t,"Qe",(function(){return be.mb})),n.d(t,"Re",(function(){return be.nb})),n.d(t,"Se",(function(){return be.ob})),n.d(t,"Te",(function(){return be.pb})),n.d(t,"Ue",(function(){return be.qb})),n.d(t,"Ve",(function(){return be.rb})),n.d(t,"Ye",(function(){return be.sb})),n.d(t,"Ze",(function(){return be.tb})),n.d(t,"af",(function(){return be.ub})),n.d(t,"bf",(function(){return be.vb})),n.d(t,"cf",(function(){return be.wb})),n.d(t,"df",(function(){return be.xb})),n.d(t,"ff",(function(){return be.yb})),n.d(t,"gf",(function(){return be.zb})),n.d(t,"hf",(function(){return be.Bb})),n.d(t,"if",(function(){return be.Cb})),n.d(t,"jf",(function(){return be.Db})),n.d(t,"kf",(function(){return be.Eb})),n.d(t,"lf",(function(){return be.Gb})),n.d(t,"mf",(function(){return be.Hb})),n.d(t,"of",(function(){return be.Ib})),n.d(t,"pf",(function(){return be.Jb})),n.d(t,"qf",(function(){return be.Kb})),n.d(t,"rf",(function(){return be.Lb})),n.d(t,"uf",(function(){return be.Mb})),n.d(t,"xf",(function(){return be.Ob})),n.d(t,"yf",(function(){return be.Pb})),n.d(t,"Bf",(function(){return be.Qb})),n.d(t,"Ef",(function(){return be.Rb})),n.d(t,"Ff",(function(){return be.Sb})),n.d(t,"Gf",(function(){return be.Tb})),n.d(t,"wf",(function(){return be.Nb})),n.d(t,"Vd",(function(){return be.A})),n.d(t,"je",(function(){return be.M})),n.d(t,"oe",(function(){return be.O})),n.d(t,"fe",(function(){return be.I})),n.d(t,"vf",(function(){return Fe})),n.d(t,"Xd",(function(){return de.c})),n.d(t,"ze",(function(){return de.e})),n.d(t,"tf",(function(){return de.h})),n.d(t,"Td",(function(){return de.b})),n.d(t,"le",(function(){return de.d})),n.d(t,"Xe",(function(){return de.g})),n.d(t,"Oe",(function(){return de.f})),n.d(t,"wd",(function(){return de.a})),n.d(t,"Pe",(function(){return G.e})),n.d(t,"Cf",(function(){return he.b})),n.d(t,"Yd",(function(){return f.b})),n.d(t,"Df",(function(){return le})),n.d(t,"Ee",(function(){return De.a})),n.d(t,"Cd",(function(){return o})),n.d(t,"ke",(function(){return r})),n.d(t,"We",(function(){return c})),n.d(t,"Af",(function(){return ce})),n.d(t,"xd",(function(){return d})),n.d(t,"Bd",(function(){return W})),n.d(t,"sf",(function(){return ue})),n.d(t,"ef",(function(){return ae})),n.d(t,"Sd",(function(){return Bt})),n.d(t,"me",(function(){return h})),n.d(t,"yb",(function(){return Vt.b})),n.d(t,"N",(function(){return Vt.a})),n.d(t,"a",(function(){return V.a})),n.d(t,"b",(function(){return V.b})),n.d(t,"c",(function(){return V.c})),n.d(t,"d",(function(){return V.d})),n.d(t,"e",(function(){return V.e})),n.d(t,"f",(function(){return V.f})),n.d(t,"g",(function(){return V.g})),n.d(t,"h",(function(){return V.h})),n.d(t,"i",(function(){return V.i})),n.d(t,"j",(function(){return V.j})),n.d(t,"k",(function(){return V.k})),n.d(t,"l",(function(){return V.l})),n.d(t,"n",(function(){return V.n})),n.d(t,"m",(function(){return V.m})),n.d(t,"o",(function(){return V.o})),n.d(t,"r",(function(){return V.r})),n.d(t,"p",(function(){return V.p})),n.d(t,"q",(function(){return V.q})),n.d(t,"s",(function(){return V.s})),n.d(t,"t",(function(){return V.t})),n.d(t,"u",(function(){return V.u})),n.d(t,"v",(function(){return V.v})),n.d(t,"w",(function(){return V.x})),n.d(t,"x",(function(){return V.y})),n.d(t,"y",(function(){return V.z})),n.d(t,"z",(function(){return V.A})),n.d(t,"A",(function(){return V.B})),n.d(t,"B",(function(){return V.C})),n.d(t,"C",(function(){return V.D})),n.d(t,"D",(function(){return V.E})),n.d(t,"E",(function(){return V.F})),n.d(t,"F",(function(){return V.G})),n.d(t,"G",(function(){return V.H})),n.d(t,"H",(function(){return V.I})),n.d(t,"I",(function(){return V.J})),n.d(t,"J",(function(){return V.K})),n.d(t,"L",(function(){return V.M})),n.d(t,"M",(function(){return V.N})),n.d(t,"K",(function(){return V.L})),n.d(t,"O",(function(){return V.O})),n.d(t,"P",(function(){return V.P})),n.d(t,"Q",(function(){return V.Q})),n.d(t,"R",(function(){return V.R})),n.d(t,"S",(function(){return V.S})),n.d(t,"T",(function(){return V.T})),n.d(t,"U",(function(){return V.U})),n.d(t,"W",(function(){return V.W})),n.d(t,"V",(function(){return V.V})),n.d(t,"nc",(function(){return V.mc})),n.d(t,"X",(function(){return V.X})),n.d(t,"Y",(function(){return V.Y})),n.d(t,"Z",(function(){return V.Z})),n.d(t,"bb",(function(){return V.bb})),n.d(t,"ab",(function(){return V.ab})),n.d(t,"cb",(function(){return V.cb})),n.d(t,"db",(function(){return V.db})),n.d(t,"eb",(function(){return V.eb})),n.d(t,"fb",(function(){return V.fb})),n.d(t,"gb",(function(){return V.gb})),n.d(t,"hb",(function(){return V.hb})),n.d(t,"ib",(function(){return V.ib})),n.d(t,"jb",(function(){return V.jb})),n.d(t,"lb",(function(){return V.lb})),n.d(t,"pb",(function(){return V.pb})),n.d(t,"ob",(function(){return V.ob})),n.d(t,"qb",(function(){return V.qb})),n.d(t,"rb",(function(){return V.rb})),n.d(t,"tb",(function(){return V.tb})),n.d(t,"sb",(function(){return V.sb})),n.d(t,"ub",(function(){return V.ub})),n.d(t,"vb",(function(){return V.vb})),n.d(t,"wb",(function(){return V.wb})),n.d(t,"xb",(function(){return V.xb})),n.d(t,"Bb",(function(){return V.Ab})),n.d(t,"Cb",(function(){return V.Bb})),n.d(t,"Db",(function(){return V.Cb})),n.d(t,"Eb",(function(){return V.Db})),n.d(t,"Fb",(function(){return V.Eb})),n.d(t,"Gb",(function(){return V.Fb})),n.d(t,"Hb",(function(){return V.Hb})),n.d(t,"Ib",(function(){return V.Ib})),n.d(t,"Jb",(function(){return V.Jb})),n.d(t,"zb",(function(){return V.yb})),n.d(t,"Ab",(function(){return V.zb})),n.d(t,"Kb",(function(){return V.Kb})),n.d(t,"Qb",(function(){return V.Qb})),n.d(t,"Lb",(function(){return V.Lb})),n.d(t,"Ob",(function(){return V.Ob})),n.d(t,"Mb",(function(){return V.Mb})),n.d(t,"Nb",(function(){return V.Nb})),n.d(t,"Pb",(function(){return V.Pb})),n.d(t,"Rb",(function(){return V.Rb})),n.d(t,"Sb",(function(){return V.Sb})),n.d(t,"Tb",(function(){return V.Tb})),n.d(t,"Ub",(function(){return V.Ub})),n.d(t,"Vb",(function(){return V.Vb})),n.d(t,"Wb",(function(){return V.Wb})),n.d(t,"Xb",(function(){return V.Xb})),n.d(t,"Yb",(function(){return V.Yb})),n.d(t,"cc",(function(){return V.cc})),n.d(t,"Zb",(function(){return V.Zb})),n.d(t,"ac",(function(){return V.ac})),n.d(t,"bc",(function(){return V.bc})),n.d(t,"ec",(function(){return V.ec})),n.d(t,"dc",(function(){return V.dc})),n.d(t,"gc",(function(){return V.fc})),n.d(t,"hc",(function(){return V.gc})),n.d(t,"ic",(function(){return V.hc})),n.d(t,"jc",(function(){return V.ic})),n.d(t,"kc",(function(){return V.jc})),n.d(t,"lc",(function(){return V.kc})),n.d(t,"mc",(function(){return V.lc})),n.d(t,"oc",(function(){return V.nc})),n.d(t,"pc",(function(){return V.oc})),n.d(t,"rc",(function(){return V.qc})),n.d(t,"uc",(function(){return V.tc})),n.d(t,"vc",(function(){return V.uc})),n.d(t,"sc",(function(){return V.rc})),n.d(t,"tc",(function(){return V.sc})),n.d(t,"qc",(function(){return V.pc})),n.d(t,"wc",(function(){return V.vc})),n.d(t,"yc",(function(){return V.xc})),n.d(t,"zc",(function(){return V.yc})),n.d(t,"Ac",(function(){return V.zc})),n.d(t,"Bc",(function(){return V.Ac})),n.d(t,"Cc",(function(){return V.Bc})),n.d(t,"Dc",(function(){return V.Cc})),n.d(t,"Ic",(function(){return V.Hc})),n.d(t,"Gc",(function(){return V.Fc})),n.d(t,"Hc",(function(){return V.Gc})),n.d(t,"Fc",(function(){return V.Ec})),n.d(t,"Ec",(function(){return V.Dc})),n.d(t,"Kc",(function(){return V.Jc})),n.d(t,"Sc",(function(){return V.Rc})),n.d(t,"bd",(function(){return V.ad})),n.d(t,"Lc",(function(){return V.Kc})),n.d(t,"Rc",(function(){return V.Qc})),n.d(t,"Jc",(function(){return V.Ic})),n.d(t,"Mc",(function(){return V.Lc})),n.d(t,"Nc",(function(){return V.Mc})),n.d(t,"Oc",(function(){return V.Nc})),n.d(t,"Pc",(function(){return V.Oc})),n.d(t,"Qc",(function(){return V.Pc})),n.d(t,"Uc",(function(){return V.Tc})),n.d(t,"Tc",(function(){return V.Sc})),n.d(t,"Wc",(function(){return V.Vc})),n.d(t,"Xc",(function(){return V.Wc})),n.d(t,"Yc",(function(){return V.Xc})),n.d(t,"Zc",(function(){return V.Yc})),n.d(t,"ad",(function(){return V.Zc})),n.d(t,"cd",(function(){return V.bd})),n.d(t,"dd",(function(){return V.cd})),n.d(t,"gd",(function(){return V.dd})),n.d(t,"hd",(function(){return V.ed})),n.d(t,"id",(function(){return V.fd})),n.d(t,"jd",(function(){return V.gd})),n.d(t,"kd",(function(){return V.hd})),n.d(t,"ld",(function(){return V.id})),n.d(t,"md",(function(){return V.jd})),n.d(t,"nd",(function(){return V.kd})),n.d(t,"Vc",(function(){return V.Uc})),n.d(t,"kb",(function(){return V.kb})),n.d(t,"xc",(function(){return V.wc})),n.d(t,"od",(function(){return V.ld})),n.d(t,"mb",(function(){return V.mb})),n.d(t,"nb",(function(){return V.nb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return B.b})),n.d(r,"listModels",(function(){return B.c})),n.d(r,"moveModel",(function(){return B.d})),n.d(r,"removeModel",(function(){return B.e})),n.d(r,"browserFiles",(function(){return O})),n.d(r,"browserHTTPRequest",(function(){return R})),n.d(r,"concatenateArrayBuffers",(function(){return m.d})),n.d(r,"decodeWeights",(function(){return m.e})),n.d(r,"encodeWeights",(function(){return m.f})),n.d(r,"fromMemory",(function(){return M})),n.d(r,"fromMemorySync",(function(){return L})),n.d(r,"getLoadHandlers",(function(){return y.b})),n.d(r,"getModelArtifactsForJSON",(function(){return m.g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return m.h})),n.d(r,"getSaveHandlers",(function(){return y.c})),n.d(r,"http",(function(){return E})),n.d(r,"isHTTPScheme",(function(){return j})),n.d(r,"loadWeights",(function(){return T})),n.d(r,"registerLoadRouter",(function(){return y.d})),n.d(r,"registerSaveRouter",(function(){return y.e})),n.d(r,"weightsLoaderFactory",(function(){return C})),n.d(r,"withSaveHandler",(function(){return z})),n.d(r,"withSaveHandlerSync",(function(){return P}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return te})),n.d(o,"toPixels",(function(){return ne})),n.d(o,"fromPixels",(function(){return re}));var c={};n.r(c),n.d(c,"Serializable",(function(){return se})),n.d(c,"SerializationMap",(function(){return ie})),n.d(c,"registerClass",(function(){return oe}));var l={};n.r(l),n.d(l,"segOpComputeOptimalWindowSize",(function(){return _t})),n.d(l,"computeOutShape",(function(){return Mt})),n.d(l,"collectGatherOpShapeInfo",(function(){return Lt}));var d={};n.r(d),n.d(d,"axesAreInnerMostDims",(function(){return _e.b})),n.d(d,"combineLocations",(function(){return _e.c})),n.d(d,"computeOutAndReduceShapes",(function(){return _e.d})),n.d(d,"expandShapeToKeepDim",(function(){return _e.e})),n.d(d,"assertAxesAreInnerMostDims",(function(){return _e.a})),n.d(d,"getAxesPermutation",(function(){return _e.f})),n.d(d,"getUndoAxesPermutation",(function(){return _e.h})),n.d(d,"getInnerMostAxes",(function(){return _e.g})),n.d(d,"getBroadcastDims",(function(){return W.getBroadcastDims})),n.d(d,"getReductionAxes",(function(){return W.getReductionAxes})),n.d(d,"assertAndGetBroadcastShape",(function(){return W.assertAndGetBroadcastShape})),n.d(d,"assertParamsConsistent",(function(){return Me})),n.d(d,"computeOutShape",(function(){return Le})),n.d(d,"computeDilation2DInfo",(function(){return ze.e})),n.d(d,"computePool2DInfo",(function(){return ze.f})),n.d(d,"computePool3DInfo",(function(){return ze.g})),n.d(d,"computeConv2DInfo",(function(){return ze.b})),n.d(d,"computeConv3DInfo",(function(){return ze.c})),n.d(d,"computeDefaultPad",(function(){return ze.d})),n.d(d,"tupleValuesAreOne",(function(){return ze.j})),n.d(d,"eitherStridesOrDilationsAreOne",(function(){return ze.i})),n.d(d,"convertConv2DDataFormat",(function(){return ze.h})),n.d(d,"checkPadOnDimRoundingMode",(function(){return ze.a})),n.d(d,"getFusedDyActivation",(function(){return Pe.c})),n.d(d,"getFusedBiasGradient",(function(){return Pe.b})),n.d(d,"applyActivation",(function(){return Pe.a})),n.d(d,"shouldFuse",(function(){return Pe.d})),n.d(d,"PARALLELIZE_THRESHOLD",(function(){return Be})),n.d(d,"computeOptimalWindowSize",(function(){return We})),n.d(d,"slice_util",(function(){return ae})),n.d(d,"upcastType",(function(){return me.b})),n.d(d,"getImageCenter",(function(){return Ue})),n.d(d,"getReshaped",(function(){return Ve})),n.d(d,"getPermuted",(function(){return Ge})),n.d(d,"getReshapedPermuted",(function(){return He})),n.d(d,"getSliceBeginCoords",(function(){return qe})),n.d(d,"getSliceSize",(function(){return Ke})),n.d(d,"prepareAndValidate",(function(){return Ye})),n.d(d,"validateUpdateShape",(function(){return Xe.c})),n.d(d,"validateInput",(function(){return Xe.b})),n.d(d,"calculateShapes",(function(){return Xe.a})),n.d(d,"SELU_SCALEALPHA",(function(){return Ze.b})),n.d(d,"SELU_SCALE",(function(){return Ze.a})),n.d(d,"ERF_P",(function(){return Je})),n.d(d,"ERF_A1",(function(){return Qe})),n.d(d,"ERF_A2",(function(){return et})),n.d(d,"ERF_A3",(function(){return tt})),n.d(d,"ERF_A4",(function(){return nt})),n.d(d,"ERF_A5",(function(){return at})),n.d(d,"warn",(function(){return st.b})),n.d(d,"log",(function(){return st.a})),n.d(d,"mergeRealAndImagArrays",(function(){return it})),n.d(d,"splitRealAndImagArrays",(function(){return ot})),n.d(d,"complexWithEvenIndex",(function(){return ut})),n.d(d,"complexWithOddIndex",(function(){return ct})),n.d(d,"getComplexWithIndex",(function(){return lt})),n.d(d,"assignToTypedArray",(function(){return ht})),n.d(d,"exponents",(function(){return pt})),n.d(d,"exponent",(function(){return ft})),n.d(d,"decodeEinsumEquation",(function(){return gt})),n.d(d,"getEinsumPermutation",(function(){return yt})),n.d(d,"checkEinsumDimSizes",(function(){return xt})),n.d(d,"getEinsumComputePath",(function(){return vt})),n.d(d,"isIdentityPermutation",(function(){return wt})),n.d(d,"prepareSplitSize",(function(){return kt})),n.d(d,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return It})),n.d(d,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return St})),n.d(d,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return Nt})),n.d(d,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return Tt})),n.d(d,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return Ct})),n.d(d,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return At})),n.d(d,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return jt})),n.d(d,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return $t})),n.d(d,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return Et})),n.d(d,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return Rt})),n.d(d,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return Ft})),n.d(d,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return Dt})),n.d(d,"segment_util",(function(){return l})),n.d(d,"fromUint8ToStringArray",(function(){return zt})),n.d(d,"fromStringArrayToUint8",(function(){return Pt}));var h={};n.r(h),n.d(h,"nonMaxSuppressionV3Impl",(function(){return Wt.a})),n.d(h,"nonMaxSuppressionV4Impl",(function(){return Wt.b})),n.d(h,"nonMaxSuppressionV5Impl",(function(){return Wt.c})),n.d(h,"whereImpl",(function(){return Ut.a}));n(711),n(714),n(567);var f=n(493),m=n(507),y=n(513);function x(e){return new Promise((e=>setTimeout(e))).then(e)}class v{constructor(e){if(!Object(f.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(v.URL_SCHEME)&&(e=e.slice(v.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(m.i)(e,n),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),c=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(c.download=this.modelJsonFileName,c.href=o,await x((()=>c.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await x((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(m.h)(e)}}}}v.URL_SCHEME="downloads://";class w{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),o=r.modelTopology;if(null==o)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:o});const c=Object(m.g)(r,(e=>this.loadWeights(e)));e(c)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),o=n.map((path=>this.loadWeightsFile(path,r[path])));return Promise.all(o).then((e=>[t,Object(m.d)(e)]))}loadWeightsFile(path,e){return new Promise(((t,n)=>{const r=new FileReader;r.onload=e=>{const n=e.target.result;t(n)},r.onerror=e=>n(`Failed to weights data from file of path '${path}'.`),r.readAsArrayBuffer(e)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Object(m.c)(e.name))),r={};for(const o of e)o.paths.forEach((path=>{const e=Object(m.c)(path);if(-1!==t.indexOf(e))throw new Error(`Duplicate file basename found in weights manifest: '${e}'`);if(t.push(e),-1===n.indexOf(e))throw new Error(`Weight file with basename '${e}' is not provided.`);r[path]=this.weightsFiles[n.indexOf(e)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function O(e){return new w(e)}y.a.registerSaveRouter((e=>Object(f.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(v.URL_SCHEME)?function(e="model"){return new v(e)}(e.slice(v.URL_SCHEME.length)):null));var k=n(547);function I(e,t,n,r){!function(e){Object(k.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(k.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(k.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(k.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map((c=>(c.then((c=>{const l=n+ ++o/e.length*(r-n);return t(l),c})),c))))}var S=n(713);async function N(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(f.b)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),o=(null==t.onProgress?await Promise.all(r):await I(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(o):await I(o,t.onProgress,.5,1)}async function T(e,t="",n,r){return C((e=>N(e,{requestInit:r})))(e,t,n)}function C(e){return async(t,n="",r)=>{const o=t.map((()=>!1)),c={},l=null!=r?r.map((()=>!1)):[],d=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const h="quantization"in e?e.quantization.dtype:e.dtype,f=S.a[h]*k.O(e.shape),m=()=>{o[t]=!0,null==c[t]&&(c[t]=[]),c[t].push({manifestEntry:e,groupOffset:n,sizeBytes:f})};null!=r?r.forEach(((t,n)=>{t===e.name&&(m(),l[n]=!0)})):m(),d.push(e.name),n+=f}))})),!l.every((e=>e))){const e=r.filter(((e,i)=>!l[i]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${d.join(", ")}.`)}const h=o.reduce(((e,t,i)=>(t&&e.push(i),e)),[]),f=[];h.forEach((i=>{t[i].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;f.push(t)}))}));const y=await e(f),x={};let v=0;return h.forEach((i=>{const e=t[i].paths.length;let n=0;for(let i=0;i<e;i++)n+=y[v+i].byteLength;const r=new ArrayBuffer(n),o=new Uint8Array(r);let l=0;for(let i=0;i<e;i++){const e=new Uint8Array(y[v+i]);o.set(e,l),l+=e.byteLength}c[i].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(m.e)(t,[e.manifestEntry]);for(const e in n)x[e]=n[e]})),v+=e})),x}}class A{constructor(path,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(k.b)("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Object(f.b)().platform.fetch,Object(k.b)(null!=path&&path.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(path)&&Object(k.b)(2===path.length,(()=>`URL paths for http must have a length of 2, (actual length is ${path.length}).`)),this.path=path,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(m.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Object(m.h)(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(m.g)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),o=this.weightPathPrefix||n,c=[];for(const t of e)c.push(...t.weights);const l=[],d=[];for(const t of e)for(const path of t.paths)null!=this.weightUrlConverter?d.push(this.weightUrlConverter(path)):l.push(o+path+r);this.weightUrlConverter&&l.push(...await Promise.all(d));const h=await N(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[c,Object(m.d)(h)]}}function j(e){return null!=e.match(A.URL_SCHEME_REGEX)}A.URL_SCHEME_REGEX=/^https?:\/\//;const $=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>j(e))):j(e),n)return E(e,t)}return null};function E(path,e){return new A(path,e)}function R(path,e){return E(path,e)}y.a.registerSaveRouter($),y.a.registerLoadRouter($);class F{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class D{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class _{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function M(e,t,n,r){const o=arguments;return new _(L(...o))}function L(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new F(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new F({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new F({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function z(e){return new D(e)}function P(e){return new D(e)}var B=n(548),W=n(482),U=n(472),V=n(469),G=n(566),H=n(473),K=n(471),Y=n(479),X=n(470),Z=n(656);let J;function Q(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,c=!1,l=!1,d=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)c=!0;else if(null!=e.getContext)l=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);d=!0}if(o){const t=2;if(o&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(G.b)(V.kb,U.a.backendName)){const n={pixels:e},r={numChannels:t};return U.a.runKernel(V.kb,n,r)}const[h,f]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let m,y;if(l)m=e.getContext("2d").getImageData(0,0,h,f).data;else if(r||n)m=e.data;else if(c||o||d){if(null==J)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");J=new OffscreenCanvas(1,1).getContext("2d")}else J=document.createElement("canvas").getContext("2d");J.canvas.width=h,J.canvas.height=f,J.drawImage(e,0,0,h,f),m=J.getImageData(0,0,h,f).data}if(4===t)y=new Int32Array(m);else{const e=h*f;y=new Int32Array(e*t);for(let i=0;i<e;i++)for(let e=0;e<t;++e)y[i*t+e]=m[4*i+e]}const x=[f,h,t];return Object(Z.a)(y,x,"int32")}function ee(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function te(e,t=3){let n=null;if(Object(f.b)().getBool("WRAP_TO_IMAGEBITMAP")&&ee(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Q(n,t)}async function ne(img,canvas){let e=Object(K.a)(img,"img","toPixels");if(!(img instanceof H.a)){const t=e;e=Object(Y.a)(t,"int32"),t.dispose()}if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const[t,n]=e.shape.slice(0,2),r=2===e.rank?1:e.shape[2];if(r>4||2===r)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${r}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);const data=await e.data(),o="float32"===e.dtype?255:1,c=new Uint8ClampedArray(n*t*4);for(let i=0;i<t*n;++i){const t=[0,0,0,255];for(let n=0;n<r;n++){const c=data[i*r+n];if("float32"===e.dtype){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if("int32"===e.dtype&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);1===r?(t[0]=c*o,t[1]=c*o,t[2]=c*o):t[n]=c*o}const n=4*i;c[n+0]=Math.round(t[0]),c[n+1]=Math.round(t[1]),c[n+2]=Math.round(t[2]),c[n+3]=Math.round(t[3])}if(null!=canvas){canvas.width=n,canvas.height=t;const e=canvas.getContext("2d"),r=new ImageData(c,n,t);e.putImageData(r,0,0)}return e!==img&&e.dispose(),c}const re=Object(X.a)({fromPixels_:Q});var ae=n(580);class se{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ie{constructor(){this.classNameMap={}}static getMap(){return null==ie.instance&&(ie.instance=new ie),ie.instance}static register(e){ie.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function oe(e){Object(k.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(k.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(k.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ie.register(e)}var ue=n(486),ce=n(474);const le="3.18.0";var de=n(502),he=n(499),pe=n(484);class fe extends se{minimize(e,t=!1,n){const{value:r,grads:o}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:o[e.name]})));this.applyGradients(e)}else this.applyGradients(o);return Object(de.b)(o),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(he.b)(e,t)}dispose(){null!=this.iterations_&&Object(de.b)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(pe.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(fe,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var me=n(525),be=n(477),ge=n(487),div=n(481),ye=n(476),xe=n(509),ve=n(491),we=n(485);class Oe extends fe{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=U.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=U.a.registeredVariables[t];null==this.accumulatedGrads[i]&&(this.accumulatedGrads[i]={originalName:`${t}/accum_grad`,variable:Object(de.h)((()=>Object(we.a)(n).variable(false)))}),null==this.accumulatedUpdates[i]&&(this.accumulatedUpdates[i]={originalName:`${t}/accum_var`,variable:Object(de.h)((()=>Object(we.a)(n).variable(false)))});const r=Array.isArray(e)?e[i].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;Object(de.h)((()=>{const e=Object(ge.a)(Object(ye.a)(o,this.rho),Object(ye.a)(Object(ve.a)(r),1-this.rho)),t=Object(ye.a)(Object(div.a)(Object(xe.a)(Object(ge.a)(c,this.epsilon)),Object(xe.a)(Object(ge.a)(o,this.epsilon))),r),l=Object(ge.a)(Object(ye.a)(c,this.rho),Object(ye.a)(Object(ve.a)(t),1-this.rho));o.assign(e),c.assign(l);const d=Object(ge.a)(Object(ye.a)(t,-this.learningRate),n);n.assign(d)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(de.b)(this.accumulatedGrads.map((e=>e.variable))),Object(de.b)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Oe.className="Adadelta",oe(Oe);var ke=n(572);class Ie extends fe{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=U.a.registeredVariables[t];if(null==this.accumulatedGrads[i]){const e=!1;this.accumulatedGrads[i]={originalName:`${t}/accumulator`,variable:Object(de.h)((()=>Object(ke.a)(n.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[i].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[i].variable;Object(de.h)((()=>{const e=Object(ge.a)(o,Object(ve.a)(r));o.assign(e);const t=Object(ge.a)(Object(ye.a)(Object(div.a)(r,Object(xe.a)(Object(ge.a)(e,U.a.backend.epsilon()))),-this.learningRate),n);n.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(de.b)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Ie.className="Adagrad",oe(Ie);var Se=n(531),sub=n(483);class Ne extends fe{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(de.h)((()=>{this.accBeta1=Object(pe.a)(t).variable(),this.accBeta2=Object(pe.a)(n).variable()})),null==r&&(this.epsilon=U.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(de.h)((()=>{const n=Object(sub.a)(1,this.accBeta1),r=Object(sub.a)(1,this.accBeta2);t.forEach(((t,i)=>{const o=U.a.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Object(de.h)((()=>Object(we.a)(o).variable(false)))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${t}/v`,variable:Object(de.h)((()=>Object(we.a)(o).variable(false)))});const c=Array.isArray(e)?e[i].tensor:e[t];if(null==c)return;const l=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,h=Object(ge.a)(Object(ye.a)(l,this.beta1),Object(ye.a)(c,1-this.beta1)),f=Object(ge.a)(Object(ye.a)(d,this.beta2),Object(ye.a)(Object(ve.a)(c),1-this.beta2)),m=Object(div.a)(h,n),y=Object(div.a)(f,r);l.assign(h),d.assign(f);const x=Object(ge.a)(Object(ye.a)(Object(div.a)(m,Object(ge.a)(Object(xe.a)(y),this.epsilon)),-this.learningRate),o);o.assign(x)})),this.accBeta1.assign(Object(ye.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(ye.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(de.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Object(de.b)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Object(de.h)((()=>{this.accBeta1.assign(Object(Se.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Se.a)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ne.className="Adam",oe(Ne);var Te=n(526),Ce=n(573);class Ae extends fe{constructor(e,t,n,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(de.h)((()=>{this.iteration=Object(pe.a)(0).variable(),this.accBeta1=Object(pe.a)(t).variable()})),null==r&&(this.epsilon=U.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(de.h)((()=>{const n=Object(sub.a)(1,this.accBeta1),r=Object(div.a)(-this.learningRate,Object(ge.a)(Object(ye.a)(this.iteration,this.decay),1));t.forEach(((t,i)=>{const o=U.a.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Object(we.a)(o).variable(false)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${t}/v`,variable:Object(we.a)(o).variable(false)});const c=Array.isArray(e)?e[i].tensor:e[t];if(null==c)return;const l=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,h=Object(ge.a)(Object(ye.a)(l,this.beta1),Object(ye.a)(c,1-this.beta1)),f=Object(ye.a)(d,this.beta2),m=Object(Te.a)(c),y=Object(Ce.a)(f,m);l.assign(h),d.assign(y);const x=Object(ge.a)(Object(ye.a)(Object(div.a)(r,n),Object(div.a)(h,Object(ge.a)(y,this.epsilon))),o);o.assign(x)})),this.iteration.assign(Object(ge.a)(this.iteration,1)),this.accBeta1.assign(Object(ye.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(de.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Object(de.b)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ae.className="Adamax",oe(Ae);class je extends fe{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=Array.isArray(e)?e[i].tensor:e[t];if(null==n)return;const r=U.a.registeredVariables[t];Object(de.h)((()=>{const e=Object(ge.a)(Object(ye.a)(this.c,n),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(de.d)(Object(pe.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}je.className="SGD",oe(je);class $e extends je{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(pe.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=U.a.registeredVariables[t];if(null==this.accumulations[i]){const e=!1;this.accumulations[i]={originalName:`${t}/momentum`,variable:Object(de.h)((()=>Object(we.a)(n).variable(e)))}}const r=this.accumulations[i].variable,o=Array.isArray(e)?e[i].tensor:e[t];null!=o&&Object(de.h)((()=>{let e;const t=Object(ge.a)(Object(ye.a)(this.m,r),o);e=this.useNesterov?Object(ge.a)(Object(ye.a)(this.c,Object(ge.a)(o,Object(ye.a)(t,this.m))),n):Object(ge.a)(Object(ye.a)(this.c,t),n),r.assign(t),n.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(de.b)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}$e.className="Momentum",oe($e);class Ee extends fe{constructor(e,t=.9,n=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=U.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=U.a.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[i]&&(this.accumulatedMeanSquares[i]={originalName:`${t}/rms`,variable:Object(de.h)((()=>Object(we.a)(n).variable(r)))}),null==this.accumulatedMoments[i]&&(this.accumulatedMoments[i]={originalName:`${t}/momentum`,variable:Object(de.h)((()=>Object(we.a)(n).variable(r)))}),null==this.accumulatedMeanGrads[i]&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${t}/mg`,variable:Object(de.h)((()=>Object(we.a)(n).variable(r)))});const o=Array.isArray(e)?e[i].tensor:e[t];if(null==o)return;const c=this.accumulatedMeanSquares[i].variable,l=this.accumulatedMoments[i].variable;Object(de.h)((()=>{const e=Object(ge.a)(Object(ye.a)(c,this.decay),Object(ye.a)(Object(ve.a)(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[i].variable,r=Object(ge.a)(Object(ye.a)(t,this.decay),Object(ye.a)(o,1-this.decay)),d=Object(div.a)(Object(ye.a)(o,this.learningRate),Object(xe.a)(Object(sub.a)(e,Object(ge.a)(Object(ve.a)(r),this.epsilon)))),h=Object(ge.a)(Object(ye.a)(l,this.momentum),d);c.assign(e),t.assign(r),l.assign(h);const f=Object(sub.a)(n,h);n.assign(f)}else{const e=Object(ge.a)(Object(ye.a)(c,this.decay),Object(ye.a)(Object(ve.a)(o),1-this.decay)),t=Object(ge.a)(Object(ye.a)(l,this.momentum),Object(div.a)(Object(ye.a)(o,this.learningRate),Object(xe.a)(Object(ge.a)(e,this.epsilon))));c.assign(e),l.assign(t);const r=Object(sub.a)(n,t);n.assign(r)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(de.b)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(de.b)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Object(de.b)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Ee.className="RMSProp",oe(Ee);class Re{static sgd(e){return new je(e)}static momentum(e,t,n=!1){return new $e(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,o=!1){return new Ee(e,t,n,r,o)}static adam(e=.001,t=.9,n=.999,r=null){return new Ne(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Oe(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,o=0){return new Ae(e,t,n,r,o)}static adagrad(e,t=.1){return new Ie(e,t)}}const Fe={sgd:Re.sgd,momentum:Re.momentum,adadelta:Re.adadelta,adagrad:Re.adagrad,rmsprop:Re.rmsprop,adamax:Re.adamax,adam:Re.adam};var De=n(732),_e=n(508);function Me(e,t){const n=e[0].length;e.forEach(((e,i)=>{k.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`))})),k.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,i)=>{for(let o=0;o<n;o++)k.b(o===t||e[o]===r[o],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`))}))}function Le(e,t){const n=e[0].slice();for(let i=1;i<e.length;i++)n[t]+=e[i][t];return n}var ze=n(492),Pe=n(535);const Be=30;function We(e){return e<=Be?e:Object(k.G)(e,Math.floor(Math.sqrt(e)))}function Ue(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ve(e,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);const n=t.length;for(let i=0;i<n;++i)o=o.concat([e[i+1]/t[i],t[i]]);o=o.concat(e.slice(n+1))}return o}function Ge(e,t,n=!0){const r=[];if(n){r.push(t);for(let i=t+1;i<e;++i)i<=2*t?(r.push(i),r.push(i-(t+1))):r.push(i)}else{const n=[],o=[];for(let i=1;i<e;++i)i>=2*t+1||i%2==1?o.push(i):n.push(i);r.push(...n),r.push(0),r.push(...o)}return r}function He(e,t,n,r=!0){const o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?r?o.push(t[i-1]*e[i]):o.push(e[i]/t[i-1]):o.push(e[i]);return o}function qe(e,t){const n=[0];for(let i=0;i<t;++i)n.push(e[i][0]);return n}function Ke(e,t,n){const r=e.slice(0,1);for(let i=0;i<n;++i)r.push(e[i+1]-t[i][0]-t[i][1]);return r}function Ye(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(k.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const o=t.shape,c=o[o.length-1];let l=1;for(let i=0;i<o.length-1;++i)l*=o[i];const d=e.shape,h=o.slice();h.pop();let f=1;for(let i=c;i<n;++i)f*=d[i],h.push(d[i]);const m=[...Object(k.j)(e.shape).map((e=>e/f)),1].slice(0,c);return[h,l,f,m]}var Xe=n(581),Ze=n(657);const Je=.3275911,Qe=.254829592,et=-.284496736,tt=1.421413741,nt=-1.453152027,at=1.061405429;var st=n(595);function it(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let i=0;i<n.length;i+=2)n[i]=e[i/2],n[i+1]=t[i/2];return n}function ot(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let i=0;i<e.length;i+=2)t[i/2]=e[i],n[i/2]=e[i+1];return{real:t,imag:n}}function ut(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let i=0;i<e.length;i+=4)n[Math.floor(i/4)]=e[i],r[Math.floor(i/4)]=e[i+1];return{real:n,imag:r}}function ct(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let i=2;i<e.length;i+=4)n[Math.floor(i/4)]=e[i],r[Math.floor(i/4)]=e[i+1];return{real:n,imag:r}}function lt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ht(data,e,t,n){data[2*n]=e,data[2*n+1]=t}function pt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let i=0;i<Math.ceil(e/2);i++){const o=(t?2:-2)*Math.PI*(i/e);n[i]=Math.cos(o),r[i]=Math.sin(o)}return{real:n,imag:r}}function ft(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const mt="->",bt=/->/g;function gt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(bt,"").length)/mt.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,o]=e.split(mt);Object(k.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const c=r.split(","),l=c.length;if(t!==l)throw new Error(`Expected ${l} input tensors, received ${t}`);if(l>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const d=[];for(let i=0;i<o.length;++i){const e=o[i];if(!c.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===d.indexOf(e)&&d.push(e)}for(let i=0;i<r.length;++i){const e=r[i];-1===d.indexOf(e)&&","!==e&&d.push(e)}const h=new Array(c.length);for(let i=0;i<l;++i){if(new Set(c[i].split("")).size!==c[i].length)throw new Error(`Found duplicate axes in input component ${c[i]}. Support for duplicate axes in input is not implemented yet.`);h[i]=[];for(let e=0;e<c[i].length;++e)h[i].push(d.indexOf(c[i][e]))}const f=d.length,m=[];for(let i=o.length;i<f;++i)m.push(i);return{allDims:d,summedDims:m,idDims:h}}function yt(e,t){let n=new Array(e);n.fill(-1);for(let i=0;i<t.length;++i)n[t[i]]=i;const r=[];for(let i=0;i<e;++i)-1===n[i]&&r.push(i);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function xt(e,t,n){const r=new Array(e);for(let i=0;i<n.length;++i){const e=n[i].shape;for(let n=0;n<t[i].length;++n)void 0===r[t[i][n]]?r[t[i][n]]=e[n]:Object(k.b)(r[t[i][n]]===e[n],(()=>`Expected dimension ${r[t[i][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function vt(e,t){const path=e,n=[];let r=0;0===e.length&&path.push(-1),r=e.length+1;for(let i=0;i<r;++i)n.push([]);const o=[];for(let i=0;i<path.length;++i){const e=Ot(t,path[i]);for(const t of e)-1===o.indexOf(t)&&(n[i].push(t),o.push(t))}return{path:path,steps:n}}function wt(e){return e.every(((e,t)=>e===t))}function Ot(e,t){const n=[];for(let i=0;i<e.length;++i)0!==e[i].length&&-1===e[i].indexOf(t)&&-1!==t||n.push(i);return n}function kt(e,t,n=0){let r=[];if("number"==typeof t)Object(k.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const o=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(k.b)(o<=1,(()=>"There should be only one negative value in split array."));const c=t.indexOf(-1);if(-1!==c){const r=t.reduce(((a,b)=>b>0?a+b:a));t[c]=e.shape[n]-r}Object(k.b)(e.shape[n]===t.reduce(((a,b)=>a+b)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function It(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function St(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Nt(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Tt(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Ct(e,t){return`size ${e} must be non-negative, not ${t}`}function At(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function jt(e,t){return`Input to reshape is a SparseTensor with ${Object(k.O)(e)}\n  dense values, but the requested shape requires a multiple of ${Object(k.O)(t)}. inputShape=${e} outputShape= ${t}`}function $t(e,t){return`Input to reshape is a tensor with ${Object(k.O)(e)} dense values, but the requested shape has ${Object(k.O)(t)}. inputShape=${e} outputShape=${t}`}function Et(){return"segment ids must be >= 0"}function Rt(){return"segment ids are not increasing"}function Ft(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Dt(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function _t(e,t){let n,r=!1;for(e<=Be?(n=e,r=!0):n=Object(k.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(k.G)(e,n+1);return n}function Mt(e,t,n){const r=[],o=e.length;for(let c=0;c<o;c++)c!==t?r.push(e[c]):r.push(n);return r}function Lt(e,t,n,r){const o=t.shape.length,c=e.shape.length;if(0!==r&&(r<-o||r>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${r}`);if(r<0&&(r+=o),r>c)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${c}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let i=0;i<r;++i)if(e.shape[i]!==t.shape[i])throw new Error(`x.shape[${i}]: ${e.shape[i]} should be equal to indices.shape[${i}]: ${t.shape[i]}.`);const l=e.shape[n],d=[];let h=1,f=1,m=1;for(let i=0;i<r;++i)d.push(e.shape[i]),h*=e.shape[i];for(let i=r;i<n;i++)d.push(e.shape[i]),f*=e.shape[i];for(let i=r;i<o;i++)d.push(t.shape[i]);for(let i=n+1;i<c;i++)d.push(e.shape[i]),m*=e.shape[i];return{batchSize:h,sliceSize:m,outerSize:f,dimSize:l,outputShape:d}}function zt(e){try{return e.map((e=>Object(ce.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Pt(e){return e.map((s=>Object(ce.encodeString)(s)))}var Bt=n(636),Wt=n(546),Ut=n(658),Vt=n(596)},function(e,t,n){"use strict";n.d(t,"a",(function(){return y})),n.d(t,"b",(function(){return v}));n(567);var r=n(493),o=n(507),c=n(513);const l="tensorflowjs",d="models_store",h="model_info_store";function f(){if(!Object(r.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function m(e){const t=e.result;t.createObjectStore(d,{keyPath:"modelPath"}),t.createObjectStore(h,{keyPath:"modelPath"})}class y{constructor(e){if(this.indexedDB=f(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(l,1);r.onupgradeneeded=()=>m(r),r.onsuccess=()=>{const c=r.result;if(null==t){const t=c.transaction(d,"readonly"),r=t.objectStore(d).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return c.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(c.close(),n(r.error)),t.oncomplete=()=>c.close()}else{const r=Object(o.h)(t),l=c.transaction(h,"readwrite");let f=l.objectStore(h);const m=f.put({modelPath:this.modelPath,modelArtifactsInfo:r});let y;m.onsuccess=()=>{y=c.transaction(d,"readwrite");const o=y.objectStore(d).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{f=l.objectStore(h);const t=f.delete(this.modelPath);t.onsuccess=()=>(c.close(),n(o.error)),t.onerror=e=>(c.close(),n(o.error))}},m.onerror=e=>(c.close(),n(m.error)),l.oncomplete=()=>{null==y?c.close():y.oncomplete=()=>c.close()}}},r.onerror=e=>n(r.error)}))}}y.URL_SCHEME="indexeddb://";const x=e=>{return Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(y.URL_SCHEME)?(t=e.slice(y.URL_SCHEME.length),new y(t)):null;var t};c.a.registerSaveRouter(x),c.a.registerLoadRouter(x);class v{constructor(){this.indexedDB=f()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(l,1);n.onupgradeneeded=()=>m(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(h,"readonly"),c=o.objectStore(h).getAll();c.onsuccess=()=>{const t={};for(const e of c.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},c.onerror=e=>(r.close(),t(c.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(path){var e;return path=(e=path).startsWith(y.URL_SCHEME)?e.slice(y.URL_SCHEME.length):e,new Promise(((e,t)=>{const n=this.indexedDB.open(l,1);n.onupgradeneeded=()=>m(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(h,"readwrite"),c=o.objectStore(h),l=c.get(path);let f;l.onsuccess=()=>{if(null==l.result)return r.close(),t(new Error(`Cannot find model with path '${path}' in IndexedDB.`));{const n=c.delete(path),o=()=>{f=r.transaction(d,"readwrite");const n=f.objectStore(d).delete(path);n.onsuccess=()=>e(l.result.modelArtifactsInfo),n.onerror=e=>t(l.error)};n.onsuccess=o,n.onerror=e=>(o(),r.close(),t(l.error))}},l.onerror=e=>(r.close(),t(l.error)),o.oncomplete=()=>{null==f?r.close():f.oncomplete=()=>r.close()}},n.onerror=e=>t(n.error)}))}}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t,n){"use strict";n.d(t,"a",(function(){return I})),n.d(t,"b",(function(){return N}));n(567);var r=n(493),o=n(547),c=n(507),l=n(513);const d="/",h="tensorflowjs_models",f="info",m="model_topology",y="weight_specs",x="weight_data",v="model_metadata";function w(path){return{info:[h,path,f].join(d),topology:[h,path,m].join(d),weightSpecs:[h,path,y].join(d),weightData:[h,path,x].join(d),modelMetadata:[h,path,v].join(d)}}function O(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function k(e){const t=e.split(d);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(d)}class I{constructor(e){if(!Object(r.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=w(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(c.h)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(c.a)(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch(e){throw O(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const l=this.LS.getItem(this.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(c.b)(l),t}}I.URL_SCHEME="localstorage://";const S=e=>{return Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(I.URL_SCHEME)?(t=e.slice(I.URL_SCHEME.length),new I(t)):null;var t};l.a.registerSaveRouter(S),l.a.registerLoadRouter(S);class N{constructor(){Object(o.b)(Object(r.b)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(o.b)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=h+d,n=d+f;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(t)&&r.endsWith(n)){e[k(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(path){var e;const t=w(path=(e=path).startsWith(I.URL_SCHEME)?e.slice(I.URL_SCHEME.length):e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${path}'`);const n=JSON.parse(this.LS.getItem(t.info));return O(t),n}}},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(492),h=n(479),f=n(470),m=n(475);const y=Object(f.a)({avgPool3d_:function(e,t,n,f,y,x="NDHWC"){const v=Object(c.a)(e,"x","avgPool3d","float32");let w=v,O=!1;4===v.rank&&(O=!0,w=Object(m.a)(v,[1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]])),l.b(5===w.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${w.rank}.`)),l.b("NDHWC"===x,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${x}`)),Object(d.a)("avgPool3d",f,y);const k={x:w},I={filterSize:t,strides:n,pad:f,dimRoundingMode:y,dataFormat:x};let S=r.a.runKernel(o.p,k,I);return S=Object(h.a)(S,w.dtype),O?Object(m.a)(S,[S.shape[1],S.shape[2],S.shape[3],S.shape[4]]):S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({clipByValue_:function(e,t,n){const d=Object(c.a)(e,"x","clipByValue");l.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const h={x:d},f={clipValueMin:t,clipValueMax:n};return r.a.runKernel(o.z,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(492),h=n(470),f=n(475);const m=Object(h.a)({conv3d_:function(e,filter,t,n,h="NDHWC",m=[1,1,1]){const y=Object(c.a)(e,"x","conv3d"),x=Object(c.a)(filter,"filter","conv3d");let v=y,w=!1;4===y.rank&&(w=!0,v=Object(f.a)(y,[1,y.shape[0],y.shape[1],y.shape[2],y.shape[3]])),l.b(5===v.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${v.rank}.`)),l.b(5===x.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${x.rank}.`)),l.b(v.shape[4]===x.shape[3],(()=>`Error in conv3d: depth of input (${v.shape[4]}) must match input depth for filter ${x.shape[3]}.`)),l.b(Object(d.i)(t,m),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${m}'`)),l.b("NDHWC"===h,(()=>`Error in conv3d: got dataFormat of ${h} but only NDHWC is currently supported.`));const O={x:v,filter:x},k={strides:t,pad:n,dataFormat:h,dilations:m},I=r.a.runKernel(o.G,O,k);return w?Object(f.a)(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(547),l=n(470),d=n(475);const h=Object(l.a)({conv3DBackpropInput_:function(e,t,filter,n,l){c.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,f=t,m=!1;4===t.rank&&(m=!0,f=Object(d.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),h=[1,e[0],e[1],e[2],e[3]]);const y=h[4],x=f.shape[4];c.b(5===h.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${h.length}.`)),c.b(5===f.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${f.rank}`)),c.b(5===filter.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${filter.rank}`)),c.b(y===filter.shape[3],(()=>`Error in conv3dDerInput: depth of input (${y}) must match input depth for filter ${filter.shape[3]}.`)),c.b(x===filter.shape[4],(()=>`Error in conv3dDerInput: depth of output (${x}) must match output depth for filter ${filter.shape[4]}.`));const v={dy:f,filter:filter},w={pad:l,strides:n,inputShape:h},O=r.a.runKernel(o.I,v,w);return m?Object(d.a)(O,[O.shape[1],O.shape[2],O.shape[3],O.shape[4]]):O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var r=n(499),o=n(471),c=n(479),l=n(514),d=n(551),h=n(552),f=n(476),m=n(470),y=n(483),x=n(488);const v=Object(m.a)({logSoftmax_:function(e,t=-1){const n=Object(o.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const m=Object(r.a)(((e,n)=>{const r=Object(h.a)(e,t,!0),o=Object(y.a)(e,r),m=Object(y.a)(Object(c.a)(o,"float32"),Object(d.a)(Object(x.a)(Object(l.a)(o),t,!0)));n([m]);return{value:m,gradFunc:(e,n)=>{const[r]=n,o=Object(l.a)(r);return Object(y.a)(e,Object(f.a)(Object(x.a)(e,t,!0),o))}}}));return m(n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(492),h=n(470),f=n(475);const m=Object(h.a)({maxPool3d_:function(e,t=[1,1,1],n,h,m,y="NDHWC"){const x=Object(c.a)(e,"x","maxPool3d");let v=x,w=!1;4===x.rank&&(w=!0,v=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2],x.shape[3]])),l.b(5===v.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${v.rank}.`)),l.b("NDHWC"===y,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${y}`)),Object(d.a)("maxPool3d",h,m);const O={x:v},k={filterSize:t,strides:n,pad:h,dimRoundingMode:m,dataFormat:y},I=r.a.runKernel(o.Mb,O,k);return w?Object(f.a)(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({onesLike_:function(e){const t={x:Object(c.a)(e,"x","onesLike")};return r.a.runKernel(o.ec,t)}})},,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({softmax_:function(e,t=-1){const n=Object(c.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const l={logits:n},d={dim:t};return r.a.runKernel(o.Ic,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({tanh_:function(e){const t={x:Object(c.a)(e,"x","tanh","float32")};return r.a.runKernel(o.cd,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(519),o=n(470),c=n(646);const l=Object(o.a)({truncatedNormal_:function(e,t=0,n=1,o,l){if(null!=o&&"bool"===o)throw new Error("Unsupported data type $ { dtype }");const d=new c.a(t,n,o,!0,l),h=Object(r.a)(e,o);for(let i=0;i<h.values.length;i++)h.values[i]=d.nextValue();return h.toTensor()}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470),h=n(475);const f=Object(d.a)({resizeNearestNeighbor_:function(e,t,n=!1,d=!1){const f=Object(c.a)(e,"images","resizeNearestNeighbor");l.b(3===f.rank||4===f.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${f.rank}.`)),l.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),l.b("float32"===f.dtype||"int32"===f.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),l.b(!1===d||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let m=f,y=!1;3===f.rank&&(y=!0,m=Object(h.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]));const[]=t,x={images:m},v={alignCorners:n,halfPixelCenters:d,size:t},w=r.a.runKernel(o.tc,x,v);return y?Object(h.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470),h=n(475);const f=Object(d.a)({resizeBilinear_:function(e,t,n=!1,d=!1){const f=Object(c.a)(e,"images","resizeBilinear");l.b(3===f.rank||4===f.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${f.rank}.`)),l.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),l.b(!1===d||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let m=f,y=!1;3===f.rank&&(y=!0,m=Object(h.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]));const[]=t,x={images:m},v={alignCorners:n,halfPixelCenters:d,size:t},w=r.a.runKernel(o.rc,x,v);return y?Object(h.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(470),l=n(475);const d=Object(c.a)({depthwiseConv2dNativeBackpropInput_:function(e,t,filter,n,c,d=[1,1],h){let f=t,m=!1;3===t.rank&&(m=!0,f=Object(l.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const y={dy:f,filter:filter},x={strides:n,pad:c,dimRoundingMode:h,dilations:d,inputShape:e},v=r.a.runKernel(o.S,y,x);return m?Object(l.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(470),l=n(475);const d=Object(c.a)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,c,d,h=[1,1],f){let m=e;3===e.rank&&(m=Object(l.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let y=t;3===y.rank&&(y=Object(l.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const x={x:m,dy:y},v={strides:c,pad:d,dimRoundingMode:f,dilations:h,filterShape:n};return r.a.runKernel(o.R,x,v)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return o}));const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e();function o(){return new Promise((e=>r((()=>e()))))}}).call(this,n(301).setImmediate)},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({acos_:function(e){const t={x:Object(c.a)(e,"x","acos")};return r.a.runKernel(o.b,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({acosh_:function(e){const t={x:Object(c.a)(e,"x","acosh")};return r.a.runKernel(o.c,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({asin_:function(e){const t={x:Object(c.a)(e,"x","asin")};return r.a.runKernel(o.j,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({asinh_:function(e){const t={x:Object(c.a)(e,"x","asinh")};return r.a.runKernel(o.k,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({atan_:function(e){const t={x:Object(c.a)(e,"x","atan")};return r.a.runKernel(o.l,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({atanh_:function(e){const t={x:Object(c.a)(e,"x","atanh")};return r.a.runKernel(o.n,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({ceil_:function(e){const t={x:Object(c.a)(e,"x","ceil","float32")};return r.a.runKernel(o.y,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(479),h=n(470);const f=Object(h.a)({erf_:function(e){let t=Object(c.a)(e,"x","erf");l.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Object(d.a)(t,"float32"));const n={x:t};return r.a.runKernel(o.bb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({expm1_:function(e){const t={x:Object(c.a)(e,"x","expm1")};return r.a.runKernel(o.eb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({isFinite_:function(e){const t={x:Object(c.a)(e,"x","isFinite")};return r.a.runKernel(o.vb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({isInf_:function(e){const t={x:Object(c.a)(e,"x","isInf")};return r.a.runKernel(o.wb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({isNaN_:function(e){const t={x:Object(c.a)(e,"x","isNaN")};return r.a.runKernel(o.xb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(499),o=n(471),c=n(476),l=n(495),d=n(470),h=n(576),f=n(651);const m=Object(d.a)({logSigmoid_:function(e){const t=Object(o.a)(e,"x","logSigmoid"),n=Object(r.a)((e=>({value:Object(l.a)(Object(f.a)(Object(l.a)(e))),gradFunc:t=>Object(c.a)(t,Object(h.a)(Object(l.a)(e)))})));return n(t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({reciprocal_:function(e){const t={x:Object(c.a)(e,"x","reciprocal")};return r.a.runKernel(o.nc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({sign_:function(e){const t={x:Object(c.a)(e,"x","sign")};return r.a.runKernel(o.Ec,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({stridedSlice_:function(e,t,n,l,d=0,h=0,f=0,m=0,y=0){const x={x:Object(c.a)(e,"x","stridedSlice","string_or_numeric")},v={begin:t,end:n,strides:l,beginMask:d,endMask:h,ellipsisMask:f,newAxisMask:m,shrinkAxisMask:y};return r.a.runKernel(o.Vc,x,v)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({tan_:function(e){const t={x:Object(c.a)(e,"x","tan","float32")};return r.a.runKernel(o.bd,t)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return R})),n.d(t,"i",(function(){return D})),n.d(t,"c",(function(){return _})),n.d(t,"f",(function(){return M})),n.d(t,"e",(function(){return P})),n.d(t,"d",(function(){return B})),n.d(t,"k",(function(){return U})),n.d(t,"g",(function(){return V})),n.d(t,"h",(function(){return G})),n.d(t,"j",(function(){return H})),n.d(t,"b",(function(){return K}));var r=n(468),o=n(871),c=n(585),l=n(490),d=n(872),h=n(873),f=n(874),m=n(875),y=n(876),x=n(877),v=n(878),w=n(879),O=n(880),k=n(881),I=n(882),S=n(883),N=n(884),T=n(885),C=n(886),A=n(887),j=n(888),$=n(889),E=n(890);class R{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[d,h,f,m,y,x,v,w,O,k,I,S,N,T,C,A,j,$,E].map((e=>e.json)));this.opMappers=e.reduce(((map,e)=>(map[e.tfOpName]=e,map)),{})}transformGraph(e,t={}){const n=e.node,r=[],o=[],c=[],d=n.reduce(((map,e)=>(map[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(map[e.name]):"Const"===e.op?o.push(map[e.name]):null!=e.input&&0!==e.input.length||c.push(map[e.name]),map)),{});let h=[];const f=[];let m={},y={};null!=t&&(m=this.mapSignatureEntries(t.inputs),y=this.mapSignatureEntries(t.outputs));const x=Object.keys(d);x.forEach((e=>{const t=d[e];t.inputNames.forEach(((e,n)=>{const[r,,o]=Object(l.b)(e),c=d[r];if(null!=c.outputs){const e=c.outputs.indexOf(o);if(-1!==e){const o=`${r}:${e}`;t.inputNames[n]=o}}t.inputs.push(c),c.children.push(t)}))})),0===Object.keys(y).length?x.forEach((e=>{const t=d[e];0===t.children.length&&f.push(t)})):Object.keys(y).forEach((e=>{const[t]=Object(l.b)(e),n=d[t];null!=n&&(n.signatureKey=y[e],f.push(n))})),Object.keys(m).length>0?Object.keys(m).forEach((e=>{const[t]=Object(l.b)(e),n=d[t];n&&(n.signatureKey=m[e],h.push(n))})):h=r;let v={};null!=e.library&&null!=e.library.function&&(v=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const w={nodes:d,inputs:h,outputs:f,weights:o,placeholders:r,signature:t,functions:v};return c.length>0&&(w.initNodes=c),w}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Object(c.a)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((input=>input.startsWith("^")?input.slice(1):input)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((map,param)=>(map[param.name]={type:param.type,inputIndexStart:param.start,inputIndexEnd:param.end},map)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((map,param)=>{const t=param.type;let n;switch(param.type){case"string":n=D(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=D(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"string[]":n=G(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=G(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"number":n=M(e.attr,param.tfName,param.defaultValue||0),void 0===n&&param.tfDeprecatedName&&(n=M(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"number[]":n=V(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=V(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool":n=_(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=_(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool[]":n=K(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=K(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape":n=U(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=U(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape[]":n=H(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=H(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype":n=P(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=P(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype[]":n=B(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=B(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"func":n=z(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=z(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${param.type} for op: ${e.op}`)}return map[param.name]={value:n,type:t},map}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((map,e)=>(map[e.name]=this.mapNode(e),"Const"===e.op&&n.push(map[e.name]),map)),{}));const o=[],c=[];e.signature.inputArg.forEach((e=>{const[t]=Object(l.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:L(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,o.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[o,,c]=Object(l.b)(e),d=r[o];if(null!=d.outputs){const e=d.outputs.indexOf(c);if(-1!==e){const r=`${o}:${e}`;t.inputNames[n]=r}}t.inputs.push(d),d.children.push(t)}))}));const d=e.ret;e.signature.outputArg.forEach((output=>{const[e,t]=Object(l.b)(d[output.name]),n=r[e];null!=n&&(n.defaultOutput=t,c.push(n))}));const h=this.mapArgsToSignature(e);return{nodes:r,inputs:o,outputs:c,weights:n,placeholders:[],signature:h}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((map,e)=>(map[e.name]=this.mapArgToTensorInfo(e),map)),{}),outputs:e.signature.outputArg.reduce(((map,t)=>(map[t.name]=this.mapArgToTensorInfo(t,e.ret),map)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function F(s,t){const n=Array.isArray(s)?String.fromCharCode.apply(null,s):function(text){const t=Object(r.Yd)().global;if(void 0!==t.atob)return t.atob(text);if(void 0!==e)return new e(text,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(s);return t?n:n.toLowerCase()}function D(e,t,n,r=!1){const param=e[t];return null!=param?F(param.s,r):n}function _(e,t,n){const param=e[t];return param?param.b:n}function M(e,t,n){const param=e[t]||{},r=null!=param.i?param.i:null!=param.f?param.f:n;return"number"==typeof r?r:parseInt(r,10)}function L(e){switch("string"==typeof e&&(e=o.a[e]),e){case o.a.DT_FLOAT:case o.a.DT_HALF:return"float32";case o.a.DT_INT32:case o.a.DT_INT64:case o.a.DT_INT8:case o.a.DT_UINT8:return"int32";case o.a.DT_BOOL:return"bool";case o.a.DT_DOUBLE:return"float32";case o.a.DT_STRING:return"string";default:return null}}function z(e,t,n){const param=e[t];return param&&param.func?param.func.name:n}function P(e,t,n){const param=e[t];return param&&param.type?L(param.type):n}function B(e,t,n){const param=e[t];return param&&param.list&&param.list.type?param.list.type.map((e=>L(e))):n}function W(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function U(e,t,n){const param=e[t];return param&&param.shape?W(param.shape):n}function V(e,t,n){const param=e[t];return param?((param.list.f&&param.list.f.length?param.list.f:param.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function G(e,t,n,r=!1){const param=e[t];return param&&param.list&&param.list.s?param.list.s.map((e=>F(e,r))):n}function H(e,t,n){const param=e[t];return param&&param.list&&param.list.shape?param.list.shape.map((e=>W(e))):n}function K(e,t,n){const param=e[t];return param&&param.list&&param.list.b?param.list.b:n}}).call(this,n(494).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({addN_:function(e){l.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),l.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,i)=>Object(c.a)(e,`tensors${i}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!l.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const d=t;return r.a.runKernel(o.e,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({maxPoolWithArgmax_:function(e,t,n,l,d=!1){const h={x:Object(c.a)(e,"x","maxPoolWithArgmax")},f={filterSize:t,strides:n,pad:l,includeBatchInIndex:d},m=r.a.runKernel(o.Pb,h,f);return{result:m[0],indexes:m[1]}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(472),o=n(469);function c(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const c={start:e,stop:t,num:n};return r.a.runKernel(o.Db,{},c)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(470),d=n(475);const h=Object(l.a)({multinomial_:function(e,t,n,l=!1){const h=Object(c.a)(e,"logits","multinomial"),f=h.size,m=h.rank;if(f<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${f}.`);if(m>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${m}`);n=n||Math.random();const y={logits:1===m?Object(d.a)(h,[1,-1]):h},x={numSamples:t,seed:n,normalized:l},v=r.a.runKernel(o.Wb,y,x);return 1===m?Object(d.a)(v,[v.size]):v}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(658),o=n(471);const c=async function(e){const t=Object(o.a)(e,"condition","whereAsync","bool"),n=await t.data(),c=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),c}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(473),o=n(471),c=n(547);const l=async function(e,t){const n=Object(o.a)(e,"x","setdiff1d"),l=Object(o.a)(t,"y","setdiff1d");c.b(n.dtype===l.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${l.dtype}).`)),c.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),c.b(1===l.rank,(()=>`y should be 1D tensor, but got y (${l.shape}).`));const d=await n.data(),h=await l.data(),f=new Set(h);let m=0;for(let i=0;i<d.length;i++)f.has(d[i])||m++;const y=new r.b([m],n.dtype),x=new r.b([m],"int32");for(let i=0,p=0;i<d.length;i++)f.has(d[i])||(y.values[p]=d[i],x.values[p]=i,p++);return[y.toTensor(),x.toTensor()]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(626);function o(e,t){return Object(r.a)(e,t,"left")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(626);function o(e,t){return Object(r.a)(e,t,"right")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({einsum_:function(e,...t){const n=t.map(((e,i)=>Object(c.a)(e,`tensors${i}`,"einsum"))),l={equation:e};return r.a.runKernel(o.X,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(547),d=n(470);const h=Object(d.a)({denseBincount_:function(e,t,n,d=!1){const h=Object(c.a)(e,"x","denseBincount"),f=Object(c.a)(t,"weights","denseBincount");l.b("int32"===h.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${h.dtype}`)),l.b(h.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${h.rank}.`)),l.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),l.b(f.size===h.size||0===f.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${h.shape}, weights shape: ${f.shape}.`));const m={x:h,weights:f},y={size:n,binaryOutput:d};return r.a.runKernel(o.O,m,y)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(472),o=n(469),c=n(471),l=n(470),d=n(581);const h=Object(l.a)({scatterND_:function(e,t,n){const l=Object(c.a)(e,"indices","scatterND","int32"),h=Object(c.a)(t,"updates","scatterND");d.b(h,l,n);const f={indices:l,updates:h},m={shape:n};return r.a.runKernel(o.zc,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({gatherND_:function(e,t){const n=Object(c.a)(t,"indices","gatherND","int32"),l={params:Object(c.a)(e,"x","gatherND","string_or_numeric"),indices:n};return r.a.runKernel(o.ob,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469),c=n(471),l=n(470);const d=Object(l.a)({broadcastArgs_:function(e,t){const n=Object(c.a)(e,"s0","broadcastArgs","int32"),l=Object(c.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==l.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${l.rank}`);const d={s0:n,s1:l};return r.a.runKernel(o.v,d)}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"e",(function(){return l.Ge})),n.d(t,"g",(function(){return l.Te})),n.d(t,"j",(function(){return l.rf})),n.d(t,"k",(function(){return l.vf})),n.d(t,"b",(function(){return l.Cd})),n.d(t,"i",(function(){return l.We})),n.d(t,"a",(function(){return ji})),n.d(t,"d",(function(){return Po})),n.d(t,"h",(function(){return zo})),n.d(t,"c",(function(){return r})),n.d(t,"f",(function(){return o}));var r={};n.r(r),n.d(r,"inputLayer",(function(){return Kc})),n.d(r,"elu",(function(){return Yc})),n.d(r,"reLU",(function(){return Xc})),n.d(r,"leakyReLU",(function(){return Zc})),n.d(r,"prelu",(function(){return Jc})),n.d(r,"softmax",(function(){return Qc})),n.d(r,"thresholdedReLU",(function(){return el})),n.d(r,"conv1d",(function(){return tl})),n.d(r,"conv2d",(function(){return nl})),n.d(r,"conv2dTranspose",(function(){return rl})),n.d(r,"conv3d",(function(){return al})),n.d(r,"conv3dTranspose",(function(){return sl})),n.d(r,"separableConv2d",(function(){return il})),n.d(r,"cropping2D",(function(){return cl})),n.d(r,"upSampling2d",(function(){return ll})),n.d(r,"depthwiseConv2d",(function(){return hl})),n.d(r,"activation",(function(){return pl})),n.d(r,"dense",(function(){return fl})),n.d(r,"dropout",(function(){return ml})),n.d(r,"spatialDropout1d",(function(){return bl})),n.d(r,"flatten",(function(){return gl})),n.d(r,"repeatVector",(function(){return yl})),n.d(r,"reshape",(function(){return xl})),n.d(r,"permute",(function(){return vl})),n.d(r,"embedding",(function(){return wl})),n.d(r,"add",(function(){return Ol})),n.d(r,"average",(function(){return kl})),n.d(r,"concatenate",(function(){return Il})),n.d(r,"maximum",(function(){return Sl})),n.d(r,"minimum",(function(){return Nl})),n.d(r,"multiply",(function(){return Tl})),n.d(r,"dot",(function(){return Cl})),n.d(r,"batchNormalization",(function(){return Al})),n.d(r,"layerNormalization",(function(){return jl})),n.d(r,"zeroPadding2d",(function(){return $l})),n.d(r,"averagePooling1d",(function(){return El})),n.d(r,"avgPool1d",(function(){return Rl})),n.d(r,"avgPooling1d",(function(){return Fl})),n.d(r,"averagePooling2d",(function(){return Dl})),n.d(r,"avgPool2d",(function(){return _l})),n.d(r,"avgPooling2d",(function(){return Ml})),n.d(r,"averagePooling3d",(function(){return Ll})),n.d(r,"avgPool3d",(function(){return zl})),n.d(r,"avgPooling3d",(function(){return Pl})),n.d(r,"globalAveragePooling1d",(function(){return Bl})),n.d(r,"globalAveragePooling2d",(function(){return Wl})),n.d(r,"globalMaxPooling1d",(function(){return Ul})),n.d(r,"globalMaxPooling2d",(function(){return Vl})),n.d(r,"maxPooling1d",(function(){return Gl})),n.d(r,"maxPooling2d",(function(){return Hl})),n.d(r,"maxPooling3d",(function(){return ql})),n.d(r,"gru",(function(){return Kl})),n.d(r,"gruCell",(function(){return Yl})),n.d(r,"lstm",(function(){return Xl})),n.d(r,"lstmCell",(function(){return Zl})),n.d(r,"simpleRNN",(function(){return Jl})),n.d(r,"simpleRNNCell",(function(){return Ql})),n.d(r,"convLstm2d",(function(){return ed})),n.d(r,"convLstm2dCell",(function(){return nd})),n.d(r,"rnn",(function(){return rd})),n.d(r,"stackedRNNCells",(function(){return ad})),n.d(r,"bidirectional",(function(){return sd})),n.d(r,"timeDistributed",(function(){return id})),n.d(r,"globalMaxPool1d",(function(){return od})),n.d(r,"globalMaxPool2d",(function(){return ud})),n.d(r,"maxPool1d",(function(){return cd})),n.d(r,"maxPool2d",(function(){return ld})),n.d(r,"Layer",(function(){return ti})),n.d(r,"RNN",(function(){return Bu})),n.d(r,"RNNCell",(function(){return Wu})),n.d(r,"input",(function(){return Bo})),n.d(r,"gaussianNoise",(function(){return hd})),n.d(r,"gaussianDropout",(function(){return pd})),n.d(r,"alphaDropout",(function(){return fd})),n.d(r,"masking",(function(){return md}));var o={};n.r(o),n.d(o,"l1l2",(function(){return bd})),n.d(o,"l1",(function(){return gd})),n.d(o,"l2",(function(){return yd}));var c={};n.r(c),n.d(c,"simpleAbsImpl",(function(){return mh})),n.d(c,"addImpl",(function(){return ih})),n.d(c,"bincountImpl",(function(){return Jh})),n.d(c,"bincountReduceImpl",(function(){return Qh})),n.d(c,"ceilImpl",(function(){return np})),n.d(c,"concatImpl",(function(){return cp})),n.d(c,"equalImpl",(function(){return Hp})),n.d(c,"expImpl",(function(){return rf})),n.d(c,"expm1Impl",(function(){return cf})),n.d(c,"floorImpl",(function(){return Nf})),n.d(c,"gatherNdImpl",(function(){return Ff})),n.d(c,"gatherV2Impl",(function(){return _f})),n.d(c,"greaterImpl",(function(){return Lf})),n.d(c,"greaterEqualImpl",(function(){return Bf})),n.d(c,"lessImpl",(function(){return Zf})),n.d(c,"lessEqualImpl",(function(){return tm})),n.d(c,"linSpaceImpl",(function(){return am})),n.d(c,"logImpl",(function(){return im})),n.d(c,"maxImpl",(function(){return wm})),n.d(c,"maximumImpl",(function(){return Im})),n.d(c,"minimumImpl",(function(){return Fm})),n.d(c,"multiplyImpl",(function(){return Lp})),n.d(c,"negImpl",(function(){return Vm})),n.d(c,"notEqualImpl",(function(){return Jm})),n.d(c,"prodImpl",(function(){return db})),n.d(c,"rangeImpl",(function(){return pb})),n.d(c,"rsqrtImpl",(function(){return Sb})),n.d(c,"scatterImpl",(function(){return Cb})),n.d(c,"sigmoidImpl",(function(){return Hd})),n.d(c,"sliceImpl",(function(){return Kh})),n.d(c,"sparseFillEmptyRowsImpl",(function(){return Kb})),n.d(c,"sparseReshapeImpl",(function(){return Xb})),n.d(c,"sparseSegmentReductionImpl",(function(){return Jb})),n.d(c,"sqrtImpl",(function(){return rg})),n.d(c,"squaredDifferenceImpl",(function(){return og})),n.d(c,"stridedSliceImpl",(function(){return hg})),n.d(c,"stringNGramsImpl",(function(){return mg})),n.d(c,"stringSplitImpl",(function(){return yg})),n.d(c,"stringToHashBucketFastImpl",(function(){return vg})),n.d(c,"subImpl",(function(){return mf})),n.d(c,"tileImpl",(function(){return Ng})),n.d(c,"topKImpl",(function(){return jg})),n.d(c,"transposeImpl",(function(){return Oh})),n.d(c,"uniqueImpl",(function(){return Mg}));var l=n(468),d=n(469),h=n(479),f=n(476),m=n(557);const y={kernelName:d.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(m.a)(Object(h.a)(n,"float32"),-1))}}};var div=n(481),x=n(495),v=n(484),w=n(509),O=n(491),sub=n(483);const k={kernelName:d.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(O.a)(Object(h.a)(n,"float32")),b=Object(w.a)(Object(sub.a)(Object(v.a)(1),a));return Object(x.a)(Object(div.a)(e,b))}}}},I={kernelName:d.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(w.a)(Object(sub.a)(Object(O.a)(Object(h.a)(n,"float32")),1));return Object(div.a)(e,a)}}}};var S=n(482),N=n(475),T=n(488);const C={kernelName:d.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=S.assertAndGetBroadcastShape(a.shape,b.shape);return{a:()=>{let t=e;const r=S.getReductionAxes(a.shape,n);return r.length>0&&(t=Object(T.a)(t,r)),Object(N.a)(t,a.shape)},b:()=>{let t=e;const r=S.getReductionAxes(b.shape,n);return r.length>0&&(t=Object(T.a)(t,r)),Object(N.a)(t,b.shape)}}}},A={kernelName:d.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,i)=>{n[i]=()=>e.clone()})),n}};var j=n(485);const $={kernelName:d.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(n)}}},E={kernelName:d.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(n)}}},R={kernelName:d.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(w.a)(Object(sub.a)(Object(v.a)(1),Object(O.a)(Object(h.a)(n,"float32")))))}}};var F=n(487);const D={kernelName:d.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(w.a)(Object(F.a)(Object(v.a)(1),Object(O.a)(Object(h.a)(n,"float32"))));return Object(div.a)(e,a)}}}},_={kernelName:d.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(S.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(F.a)(Object(O.a)(a),Object(O.a)(b));let r=Object(f.a)(e,Object(div.a)(b,t));const o=Object(S.getReductionAxes)(a.shape,n);return o.length>0&&(r=Object(T.a)(r,o)),Object(N.a)(r,a.shape)},b:()=>{const t=Object(F.a)(Object(O.a)(a),Object(O.a)(b));let r=Object(x.a)(Object(f.a)(e,Object(div.a)(a,t)));const o=Object(S.getReductionAxes)(b.shape,n);return o.length>0&&(r=Object(T.a)(r,o)),Object(N.a)(r,b.shape)}}}},M={kernelName:d.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(F.a)(Object(O.a)(Object(h.a)(n,"float32")),1))}}},L={kernelName:d.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(sub.a)(Object(v.a)(1),Object(O.a)(Object(h.a)(n,"float32"))))}}};var z=n(472),P=n(471),B=n(547),W=n(492),U=n(470);const V=Object(U.a)({avgPool3dGrad_:function(e,input,t,n,r,o){const c=Object(P.a)(e,"dy","avgPool3dGrad"),l=Object(P.a)(input,"input","avgPool3dGrad");let h=c,f=l,m=!1;4===l.rank&&(m=!0,h=Object(N.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=Object(N.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),B.b(5===h.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),B.b(5===f.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${f.rank}.`)),Object(W.a)("avgPool3dGrad",r,o);const y={dy:h,input:f},x={filterSize:t,strides:n,pad:r,dimRoundingMode:o},v=z.a.runKernel(d.q,y,x);return m?Object(N.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}}),G={kernelName:d.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:d}=n;return{x:()=>V(e,r,o,c,l,d)}}};const H=Object(U.a)({avgPoolGrad_:function(e,input,t,n,r){const o=Object(P.a)(e,"dy","avgPoolGrad"),c=Object(P.a)(input,"input","avgPoolGrad");B.b(c.rank===o.rank,(()=>`Rank of input (${c.rank}) does not match rank of dy (${o.rank})`));let l=c,h=o,f=!1;3===c.rank&&(f=!0,l=Object(N.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]),h=Object(N.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B.b(4===h.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${h.rank}.`)),B.b(4===l.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`));const m={dy:h,input:l},y={filterSize:t,strides:n,pad:r},x=z.a.runKernel(d.r,m,y);return f?Object(N.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),K={kernelName:d.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:c,pad:l}=n;return{x:()=>H(e,r,o,c,l)}}};var Y=n(530);const X={kernelName:d.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,b]=t,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>Object(Y.a)(e,b,!1,!1),b:()=>Object(Y.a)(e,a,!0,!1)}:r&&!o?{a:()=>Object(Y.a)(b,e,!1,!0),b:()=>Object(Y.a)(a,e,!1,!1)}:{a:()=>Object(Y.a)(b,e,!0,!0),b:()=>Object(Y.a)(e,a,!0,!0)}:{a:()=>Object(Y.a)(e,b,!1,!0),b:()=>Object(Y.a)(a,e,!0,!1)}}};var Z=n(582);const J={kernelName:d.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>Object(Z.a)(e,r,o)}}},Q={kernelName:d.w,gradFunc:(e,t,n)=>{const r=n,o=r.inputShape,c=r.shape,l=Array.from(c);for(let i=o.length-1;i>=0;i--)if(o[i]===c[i])l[i]=1;else if(1!==o[i])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${c}].`);const d=[];for(let i=0;i<l.length;i++)l[i]>1&&d.push(i);return{x:()=>Object(T.a)(e,d,!0)}}},ee={kernelName:d.x,gradFunc:e=>({x:()=>e.clone()})},te={kernelName:d.y,gradFunc:e=>({x:()=>Object(j.a)(e)})};var ne=n(528),re=n(521),ae=n(529),se=n(501);const ie={kernelName:d.z,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:c}=n;return{x:()=>Object(se.a)(Object(ae.a)(Object(ne.a)(r,o),Object(re.a)(r,c)),e,Object(j.a)(e))}}},oe={kernelName:d.B,inputsToSave:["x"],gradFunc:y.gradFunc};var ue=n(532);const ce={kernelName:d.C,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:o}=n,c=Object(B.I)(o,t[0].shape)[0],l=r.map((s=>s[c]));return Object(ue.a)(e,l,c).map((e=>()=>e))}};var le=n(655),de=n(643);const he={kernelName:d.D,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{dilations:c,strides:l,pad:d,dataFormat:h}=n;return B.b(W.j(c),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${c}'`)),{x:()=>Object(de.a)(r.shape,e,o,l,d,h),filter:()=>Object(le.a)(r,e,o.shape,l,d,h)}}};var pe=n(527);const fe={kernelName:d.F,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,filter]=t,{strides:o,pad:c,dataFormat:l,dimRoundingMode:d}=n;return{dy:()=>Object(pe.a)(e,filter,o,c,l,1,d),filter:()=>Object(le.a)(e,r,filter.shape,o,c,l,d)}}};const me=Object(U.a)({conv3DBackpropFilter_:function(e,t,n,r,o){let c=e;4===e.rank&&(c=Object(N.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let l=t;4===l.rank&&(l=Object(N.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),B.b(5===c.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${c.shape}.`)),B.b(5===l.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${l.shape}.`)),B.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),B.b(c.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${c.shape[4]}) must match input depth in filter (${n[3]}.`)),B.b(l.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${l.shape[4]}) must match output depth for filter (${n[4]}).`));const h={x:c,dy:l},f={strides:r,pad:o,filterShape:n};return z.a.runKernel(d.H,h,f)}});var be=n(720);const ge={kernelName:d.G,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:c}=n;B.b(Object(W.j)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[l,d]=t;return{x:()=>Object(be.a)(l.shape,e,d,o,c),filter:()=>me(l,e,d.shape,o,c)}}};var ye=n(659);const xe={kernelName:d.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(x.a)(Object(ye.a)(Object(h.a)(n,"float32"))),e)}}};var ve=n(660);const we={kernelName:d.K,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(ve.a)(Object(h.a)(n,"float32")),e)}}};var Oe=n(508),ke=n(620),Ie=n(520);const Se={kernelName:d.N,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o,exclusive:c,reverse:l}=n;return{x:()=>{const t=Object(Oe.f)([o],r.rank);let n=Object(ke.a)(e,o,c,!l);return null!=t&&(n=Object(Ie.a)(n,t)),n}}}};var Ne=n(731),Te=n(730);const Ce={kernelName:d.Q,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:c,dimRoundingMode:l}=n,d=null==r?[1,1]:r;B.b(W.j(d),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[h,filter]=t;return B.b(4===h.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${h.rank}.`)),B.b(4===filter.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${filter.rank}.`)),B.b(h.shape[3]===filter.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${filter.shape[2]}.`)),B.b(W.i(o,d),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${d}'.`)),W.a("depthwiseConv2d",c,l),{x:()=>Object(Te.a)(h.shape,e,filter,o,c,d,l),filter:()=>Object(Ne.a)(h,e,filter.shape,o,c,d,l)}}},Ae={kernelName:d.U,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,filter]=t,o={x:r,filter:filter,dy:e},c={x:r,filter:filter,dy:e};return{x:()=>z.a.runKernel(d.W,o,n),filter:()=>z.a.runKernel(d.V,c,n)}}},je={kernelName:d.Y,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>z.a.runKernel(d.Z,r)}}};var $e=n(514);const Ee={kernelName:d.bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Object(f.a)(Object($e.a)(Object(x.a)(Object(O.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(f.a)(e,a)}}},Re={kernelName:d.cb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,n)}}},Fe={kernelName:d.db,inputsToSave:["input"],gradFunc:(e,t)=>{const[input]=t;return{input:()=>Object(N.a)(e,input.shape)}}},De={kernelName:d.eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object($e.a)(n))}}},_e={kernelName:d.ib,gradFunc:e=>({x:()=>Object(j.a)(e)})},Me={kernelName:d.jb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(S.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(div.a)(e,Object(h.a)(b,"float32")),r=Object(S.getReductionAxes)(a.shape,n);return r.length>0?Object(N.a)(Object(T.a)(t,r),a.shape):t},b:()=>{let t=Object(f.a)(e,Object(h.a)(a,"float32"));const r=Object(S.getReductionAxes)(b.shape,n);r.length>0&&(t=Object(N.a)(Object(T.a)(t,r),b.shape));const o=Object(O.a)(b);return Object(x.a)(Object(div.a)(t,Object(h.a)(o,"float32")))}}}};var Le=n(661),ze=n(550);const Pe={kernelName:d.lb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[o,c,l,d]=t,h=null==d?Object(v.a)(1):d,m=Object(S.getReductionAxes)(c.shape,o.shape),y=[];if(1===c.rank){for(let i=0;i<o.shape.length-1;++i)y.push(o.shape[i]);y.push(1)}const x=Object(sub.a)(o,c),w=Object(f.a)(e,h),O=Object(Le.a)(Object(F.a)(l,Object(v.a)(r))),k=Object(f.a)(Object(f.a)(Object(f.a)(O,O),O),Object(v.a)(-.5));return{x:()=>1===c.rank?Object(N.a)(Object(f.a)(Object(f.a)(e,Object(ze.a)(Object(N.a)(O,[1,1,1,c.shape[0]]),y)),h),o.shape):Object(N.a)(Object(f.a)(Object(f.a)(e,O),h),o.shape),mean:()=>{let e=Object(f.a)(Object(f.a)(O,Object(v.a)(-1)),w);return 1===c.rank&&(e=Object(T.a)(e,m)),Object(N.a)(e,c.shape)},variance:()=>{let e=Object(f.a)(Object(f.a)(k,x),w);return 1===c.rank&&(e=Object(T.a)(e,m)),Object(N.a)(e,c.shape)},scale:()=>{const t=Object(f.a)(x,O);let n=Object(f.a)(e,t);return 1===c.rank&&(n=Object(T.a)(n,m)),Object(N.a)(n,c.shape)},offset:()=>{let t=e;return 1===c.rank&&(t=Object(T.a)(t,m)),Object(N.a)(t,c.shape)}}}};var Be=n(621);const We={kernelName:d.pb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,o]=t,{axis:c}=n,l=Object(B.I)(c,r.shape)[0];return{x:()=>{const t=r.shape,n=o.size,d=t.slice(0,l),h=d.length,f=t.slice(c,t.length).slice(1),m=f.length,y=Ue(0,h),x=Ue(h+1,h+1+m),v=Ve([d,[n],f]),w=Object(N.a)(e,v),O=Object(N.a)(o,[n]),k=Ve([[h],y,x]),I=Object(Ie.a)(w,k);let S=Object(Be.a)(I,O,r.shape[l]);const T=Object(Oe.h)(k);return S=Object(Ie.a)(S,T),S},indices:()=>o}}};function Ue(e,t){const n=[];for(let i=e;i<t;++i)n.push(i);return n}function Ve(e){const t=[];for(let i=0;i<e.length;++i)for(let n=0;n<e[i].length;++n)t.push(e[i][n]);return t}const Ge={kernelName:d.rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(j.a)(a),b:()=>Object(j.a)(b)}}},He={kernelName:d.tb,gradFunc:e=>({x:()=>Object(h.a)(e,"float32")})},qe={kernelName:d.vb,gradFunc:e=>({x:()=>Object(j.a)(e)})},Ke={kernelName:d.wb,gradFunc:e=>({x:()=>Object(j.a)(e)})},Ye={kernelName:d.xb,gradFunc:e=>({x:()=>Object(j.a)(e)})};var Xe=n(515);const Ze={kernelName:d.Ab,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:o}=n,mask=Object(Xe.a)(r,0);return{x:()=>Object(se.a)(mask,e,Object(f.a)(e,o))}}},Je={kernelName:d.Fb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(F.a)(n,1))}}},Qe={kernelName:d.Eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(h.a)(n,"float32"))}}},et={kernelName:d.Gb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const t=Object($e.a)(r);return Object(sub.a)(e,Object(f.a)(Object(T.a)(e,o,!0),t))}}}};const tt=Object(U.a)({localResponseNormalizationBackprop_:function(e,t,n,r=5,o=1,c=1,l=.5){const h={x:e,y:t,dy:n},f={depthRadius:r,bias:o,alpha:c,beta:l};return z.a.runKernel(d.zb,h,f)}}),nt={kernelName:d.yb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{depthRadius:c,bias:l,alpha:d,beta:h}=n;return{x:()=>tt(r,o,e,c,l,d,h)}}};var at=n(570);function st(e,t,n,r){return t.rank<n.rank&&(t=Object(N.a)(t,Oe.e(t.shape,r))),e.rank<n.rank&&(e=Object(N.a)(e,Oe.e(e.shape,r))),{x:()=>Object(f.a)(e,Object(h.a)(Object(at.a)(n,t),e.dtype))}}const it={kernelName:d.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:o}=r,c=t[0],l=st(e,t[1],c,B.I(o,c.shape));return{x:()=>l.x()}}};var ot=n(622);const ut={kernelName:d.Qb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(f.a)(e,Object(h.a)(Object(ne.a)(a,b),"float32")),b:()=>Object(f.a)(e,Object(h.a)(Object(ot.a)(a,b),"float32"))}}};const ct=Object(U.a)({maxPool3dGrad_:function(e,input,output,t,n,r,o){const c=Object(P.a)(e,"dy","maxPool3dGrad"),l=Object(P.a)(input,"input","maxPool3dGrad"),h=Object(P.a)(output,"output","maxPool3dGrad");let f=c,m=l,y=h,x=!1;4===l.rank&&(x=!0,f=Object(N.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),m=Object(N.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),y=Object(N.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),B.b(5===f.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`)),B.b(5===m.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`)),B.b(5===y.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${y.rank}.`)),Object(W.a)("maxPool3dGrad",r,o);const v={dy:f,input:m,output:y},w={filterSize:t,strides:n,pad:r,dimRoundingMode:o},O=z.a.runKernel(d.Nb,v,w);return x?Object(N.a)(O,[O.shape[1],O.shape[2],O.shape[3],O.shape[4]]):O}}),lt={kernelName:d.Mb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=n;return{x:()=>ct(e,r,o,c,l,d,h)}}};const ht=Object(U.a)({maxPoolGrad_:function(e,input,output,t,n,r,o){const c=Object(P.a)(e,"dy","maxPoolGrad"),l=Object(P.a)(input,"input","maxPoolGrad"),h=Object(P.a)(output,"output","maxPoolGrad");B.b(l.rank===c.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${c.rank})`)),B.b(4===c.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${c.rank}.`)),B.b(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),W.a("maxPoolGrad",r,o);const f={dy:c,input:l,output:h},m={filterSize:t,strides:n,pad:r,dimRoundingMode:o};return z.a.runKernel(d.Ob,f,m)}}),pt={kernelName:d.Lb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:c,strides:l,pad:d}=n;return{x:()=>ht(e,r,o,c,l,d)}}};var ft=n(553);const mt={kernelName:d.Rb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n,c=B.I(o,r.shape),l=Object(Oe.d)(r.shape,c)[1],d=B.O(l);return{x:()=>{const t=r.shape.slice();c.forEach((e=>{t[e]=1}));const n=Object(N.a)(e,t);return Object(div.a)(Object(f.a)(n,Object(ft.a)(r.shape,"float32")),d)}}}},bt={kernelName:d.Sb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:o}=r,[c,l]=t,d=st(e,l,c,B.I(o,c.shape));return{x:()=>d.x()}}},gt={kernelName:d.Tb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(f.a)(e,Object(h.a)(Object(re.a)(a,b),"float32")),b:()=>Object(f.a)(e,Object(h.a)(Object(Xe.a)(a,b),"float32"))}}};var yt=n(500);const xt={kernelName:d.Ub,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,c=o.map((p=>p[0]));return{x:()=>Object(yt.a)(e,c,r.shape)}}};var vt=n(601);const wt={kernelName:d.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(S.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(S.getReductionAxes)(a.shape,n);return t.length>0?Object(N.a)(Object(T.a)(e,t),a.shape):e},b:()=>{const t=Object(f.a)(e,Object(x.a)(Object(vt.a)(Object(div.a)(a,b)))),r=Object(S.getReductionAxes)(b.shape,n);return r.length>0?Object(N.a)(Object(T.a)(t,r),b.shape):t}}}},Ot={kernelName:d.Xb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(S.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(f.a)(e,Object(h.a)(b,"float32")),r=Object(S.getReductionAxes)(a.shape,n);return r.length>0?Object(N.a)(Object(T.a)(t,r),a.shape):t},b:()=>{const t=Object(f.a)(e,Object(h.a)(a,"float32")),r=Object(S.getReductionAxes)(b.shape,n);return r.length>0?Object(N.a)(Object(T.a)(t,r),b.shape):t}}}},kt={kernelName:d.Yb,gradFunc:e=>({x:()=>Object(x.a)(e)})};var It=n(554);const St={kernelName:d.dc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(It.a)(n.shape,"float32")}}},Nt={kernelName:d.ec,gradFunc:e=>({x:()=>Object(j.a)(e)})};var Tt=n(556);const Ct={kernelName:d.fc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(Tt.a)(e,r).map((e=>()=>e))}},At={kernelName:d.gc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,c=o.map((p=>p[0]));return{x:()=>Object(yt.a)(e,c,r.shape)}}};var jt=n(551),$t=n(531);const Et={kernelName:d.hc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[a,b,n]=t,base=a,r=b,o=S.assertAndGetBroadcastShape(base.shape,r.shape);return{a:()=>{const t=Object(h.a)(r,"float32");let n=Object(f.a)(e,Object(f.a)(t,Object($t.a)(base,Object(sub.a)(t,Object(v.a)(1)))));const c=S.getReductionAxes(base.shape,o);return c.length>0&&(n=Object(T.a)(n,c)),Object(N.a)(n,base.shape)},b:()=>{const t=Object(Xe.a)(base,0),c=Object(se.a)(t,Object(jt.a)(base),Object(j.a)(base));let l=Object(f.a)(e,Object(f.a)(n,c));const d=S.getReductionAxes(r.shape,o);return d.length>0&&(l=Object(T.a)(l,d)),Object(N.a)(l,r.shape)}}}},Rt={kernelName:d.ic,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,mask=Object(Xe.a)(n,0);return{x:()=>Object(se.a)(mask,e,Object(f.a)(e,r)),alpha:()=>{let t=Object(se.a)(mask,Object(j.a)(e),Object(f.a)(e,n));const o=Object(S.getReductionAxes)(r.shape,e.shape);return o.length>0&&(t=Object(T.a)(t,o)),Object(N.a)(t,r.shape)}}}};var Ft=n(710),Dt=n(623);function _t(e,t,n){const r=e.shape.length,o=r-n.length,c=Ft.xd.getAxesPermutation(n,r);let l=e;null!=c&&(l=Object(Ie.a)(e,c));const d=l.shape.slice(),h=d.splice(r-n.length,n.length).reduce(((p,e)=>p*e),1);d.push(h);let m=function(e,t,n){const r=e.shape.slice();r[n]=1;const o=Object(N.a)(t,r),c=Object(Dt.a)(e,n,!0,!1),l=Object(Dt.a)(e,n,!0,!0),d=Object(f.a)(c,l);return Object(f.a)(o,d)}(l.reshape(d),t,o);if(m=m.reshape(l.shape),null!=c){const e=Ft.xd.getUndoAxesPermutation(c);m=Object(Ie.a)(m,e)}return m}const Mt={kernelName:d.jc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n;let c=[];return c=null==o?r.shape.map(((e,i)=>i)):"number"==typeof o?[o]:o,{x:()=>_t(r,e,c)}}},Lt={kernelName:d.mc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=S.assertAndGetBroadcastShape(a.shape,b.shape);return{a:()=>{const t=Object(div.a)(e,Object(h.a)(b,"float32")),r=S.getReductionAxes(a.shape,n);return r.length>0?Object(N.a)(Object(T.a)(t,r),a.shape):t},b:()=>{let t=Object(f.a)(e,Object(h.a)(a,"float32"));const r=S.getReductionAxes(b.shape,n);r.length>0&&(t=Object(N.a)(Object(T.a)(t,r),b.shape));const o=Object(O.a)(b);return Object(x.a)(Object(div.a)(t,Object(h.a)(o,"float32")))}}}},zt={kernelName:d.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(x.a)(Object(O.a)(n)))}}},Pt={kernelName:d.pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,mask=Object(f.a)(Object(re.a)(n,6),Object(m.a)(n));return{x:()=>Object(f.a)(e,Object(h.a)(mask,"float32"))}}},Bt={kernelName:d.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(h.a)(Object(m.a)(n),"float32"))}}},Wt={kernelName:d.qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(N.a)(e,n.shape)}}},Ut={kernelName:d.rc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o={dy:e,images:r};return{images:()=>z.a.runKernel(d.sc,o,n)}}},Vt={kernelName:d.tc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o={dy:e,images:r};return{images:()=>z.a.runKernel(d.uc,o,n)}}};var Gt=n(575);const Ht={kernelName:d.vc,gradFunc:(e,t,n)=>{const{dims:r}=n,o=Object(B.I)(r,e.shape);return{x:()=>Object(Gt.a)(e,o)}}},qt={kernelName:d.xc,gradFunc:e=>({x:()=>Object(j.a)(e)})},Kt={kernelName:d.yc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(x.a)(Object(div.a)(e,Object(f.a)(Object($t.a)(n,1.5),2)))}}};var Yt=n(583);const Xt={kernelName:d.Bc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(h.a)(Object(j.a)(n),"float32"),t:()=>Object(f.a)(e,Object(h.a)(n,e.dtype)),e:()=>Object(f.a)(e,Object(h.a)(Object(Yt.a)(n),e.dtype))}}};var Zt=n(657);const Jt={kernelName:d.Cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const mask=Object(Xe.a)(n,Object(v.a)(0)),t=Object(v.a)(Zt.b),r=Object(v.a)(Zt.a),o=Object(f.a)(e,r),c=Object(f.a)(Object(f.a)(e,t),Object($e.a)(Object(h.a)(n,"float32")));return Object(se.a)(mask,o,c)}}}},Qt={kernelName:d.Dc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(f.a)(n,Object(sub.a)(Object(v.a)(1),n)))}}},en={kernelName:d.Ec,gradFunc:e=>({x:()=>Object(j.a)(e)})};var tn=n(624);const nn={kernelName:d.Fc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(tn.a)(Object(h.a)(n,"float32")),e)}}};var rn=n(662);const an={kernelName:d.Gc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(rn.a)(Object(h.a)(n,"float32")),e)}}};var sn=n(607),on=n(580);const un={kernelName:d.Hc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:o,size:c}=n,l=r.shape,[d,h]=Object(on.parseSliceParams)(r,o,c),f=[];for(let i=0;i<e.rank;i++)f.push([d[i],l[i]-d[i]-h[i]]);return{x:()=>Object(sn.a)(e,f)}}},cn={kernelName:d.Ic,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:o}=n,c=Object(f.a)(e,r);return{logits:()=>Object(sub.a)(c,Object(f.a)(Object(T.a)(c,[o],true),r))}}};var ln=n(576);const dn={kernelName:d.Jc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(ln.a)(n))}}};var hn=n(584);const pn={kernelName:d.Kc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>Object(hn.a)(e,r,o)}}};var fn=n(503);const mn={kernelName:d.Qc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(fn.a)(e,r)}}},bn={kernelName:d.Rc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(f.a)(Object(w.a)(Object(h.a)(n,"float32")),2))}}},gn={kernelName:d.Sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(f.a)(Object(h.a)(n,"float32"),2))}}},yn={kernelName:d.Tc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(v.a)(2);return{a:()=>Object(f.a)(e,Object(f.a)(n,Object(sub.a)(a,b))),b:()=>Object(f.a)(e,Object(f.a)(n,Object(sub.a)(b,a)))}}},xn={kernelName:d.Uc,gradFunc:e=>({x:()=>Object(j.a)(e)})},vn={kernelName:d.Zc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=S.assertAndGetBroadcastShape(a.shape,b.shape);return{a:()=>{let t=e;const r=S.getReductionAxes(a.shape,n);return r.length>0&&(t=Object(T.a)(t,r)),Object(N.a)(t,a.shape)},b:()=>{let t=e;const r=S.getReductionAxes(b.shape,n);return r.length>0&&(t=Object(T.a)(t,r)),Object(N.a)(Object(x.a)(t),b.shape)}}}},wn={kernelName:d.ad,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:c}=n;Object(B.I)(c,r.shape).forEach((e=>{o[e]=1}));const l=Object(N.a)(e,o),d=Object(f.a)(l,Object(ft.a)(r.shape,"float32"));return{x:()=>d}}},On={kernelName:d.bd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(O.a)(Object(tn.a)(n)))}}},kn={kernelName:d.cd,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(sub.a)(Object(v.a)(1),Object(O.a)(n)),e)}}},In={kernelName:d.dd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let t=Object(j.a)(r);if(1===r.rank)for(let i=0;i<o[0];++i)t=Object(F.a)(t,Object(yt.a)(e,[i*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)t=Object(F.a)(t,Object(yt.a)(e,[i*r.shape[0],n*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let c=0;c<o[2];++c)t=Object(F.a)(t,Object(yt.a)(e,[i*r.shape[0],n*r.shape[1],c*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let c=0;c<o[2];++c)for(let l=0;l<o[3];++l)t=Object(F.a)(t,Object(yt.a)(e,[i*r.shape[0],n*r.shape[1],c*r.shape[2],l*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Sn={kernelName:d.gd,gradFunc:(e,t,n)=>{const r=n,{perm:o}=r,c=Oe.h(o);return{x:()=>Object(Ie.a)(e,c)}}};var Nn=n(533);const Tn={kernelName:d.id,gradFunc:(e,t,n)=>{const r=n,{axis:o}=r;return{value:()=>Object(Nn.a)(e,o)}}};var Cn=n(571),An=n(602),jn=n(573);const $n={kernelName:d.jd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(jn.a)(t,Object(j.a)(t)),r=Object(An.a)(e,n);let o=Object(ne.a)(t,Object(v.a)(0,"int32"));const c=r.rank-o.rank;for(let i=0;i<c;++i)o=Object(Cn.a)(o,i+1);o=Object(ae.a)(o,Object(ft.a)(r.shape,"bool"));const l=Object(j.a)(r);return Object(se.a)(o,r,l)}(e,n)}}};const En={kernelName:d.kd,gradFunc:e=>({x:()=>Object(j.a)(e)})};var Rn=n(566);const Fn=[y,k,I,C,A,$,E,R,D,_,M,L,G,K,X,J,Q,ee,te,ie,oe,ce,fe,he,ge,xe,we,Se,Ce,Ae,Lt,je,Ee,Re,Fe,De,Me,_e,Pe,We,Ge,He,qe,Ke,Ye,Ze,Je,Qe,et,nt,it,it,ut,lt,pt,mt,bt,gt,xt,wt,Ot,kt,St,Nt,Ct,At,At,Et,Rt,Mt,zt,Pt,Bt,Wt,Ut,Vt,Ht,qt,Kt,Xt,Jt,Qt,en,nn,an,un,cn,dn,pn,pn,mn,mn,bn,yn,gn,xn,vn,wn,On,kn,In,Sn,Tn,$n,En];for(const e of Fn)Object(Rn.d)(e);var Dn=n(526),_n=n(473);Object(_n.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(Dn.a)(this)};var Mn=n(733);Object(_n.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var Ln=n(734);Object(_n.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(Ln.a)(this)},Object(_n.d)().prototype.add=function(b){return this.throwIfDisposed(),Object(F.a)(this,b)};var zn=n(638);Object(_n.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(zn.a)(this,e,t)};var Pn=n(639);Object(_n.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Pn.a)(this,e,t)};var Bn=n(640);Object(_n.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Bn.a)(this,e)};var Wn=n(663);Object(_n.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Wn.a)(this,e)},Object(_n.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(B.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(N.a)(this,[])},Object(_n.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(h.a)(this,e)},Object(_n.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(N.a)(this,[this.size])},Object(_n.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(N.a)(this,[e,t])},Object(_n.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(N.a)(this,[e,t,n])},Object(_n.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(N.a)(this,[e,t,n,r])},Object(_n.d)().prototype.as5D=function(e,t,n,r,o){return this.throwIfDisposed(),Object(N.a)(this,[e,t,n,r,o])};var Un=n(735);Object(_n.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Un.a)(this)};var Vn=n(736);Object(_n.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Vn.a)(this)};var Gn=n(737);Object(_n.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Gn.a)(this)};var Hn=n(664);Object(_n.d)().prototype.atan2=function(b){return this.throwIfDisposed(),Object(Hn.a)(this,b)};var qn=n(738);Object(_n.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(qn.a)(this)};var Kn=n(598);Object(_n.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Kn.a)(this,e,t,n,r)},Object(_n.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(hn.a)(this,e,t)};var Yn=n(565);Object(_n.d)().prototype.batchNorm=function(e,t,n,r,o){return this.throwIfDisposed(),Object(Yn.a)(this,e,t,n,r,o)};var Xn=n(611);Object(_n.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Xn.a)(this,e)},Object(_n.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(h.a)(this,e)};var Zn=n(739);Object(_n.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Zn.a)(this)};var Jn=n(718);Object(_n.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Jn.a)(this,e,t)},Object(_n.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof _n.a&&(e=[e]),Object(fn.a)([this,...e],t)};var Qn=n(641);Object(_n.d)().prototype.conv1d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(Qn.a)(this,filter,e,t,n,r,o)};var er=n(642);Object(_n.d)().prototype.conv2dTranspose=function(filter,e,t,n,r){return this.throwIfDisposed(),Object(er.a)(this,filter,e,t,n,r)},Object(_n.d)().prototype.conv2d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(pe.a)(this,filter,e,t,n,r,o)},Object(_n.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(tn.a)(this)},Object(_n.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(rn.a)(this)},Object(_n.d)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Object(Dt.a)(this,e,t,n)},Object(_n.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(ke.a)(this,e,t,n)};var nr=n(665);Object(_n.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(nr.a)(this,e,t)};var rr=n(569);Object(_n.d)().prototype.depthwiseConv2d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(rr.a)(this,filter,e,t,n,r,o)};var ar=n(666);Object(_n.d)().prototype.dilation2d=function(filter,e,t,n,r){return this.throwIfDisposed(),Object(ar.a)(this,filter,e,t,n,r)};var sr=n(667);Object(_n.d)().prototype.divNoNan=function(b){return this.throwIfDisposed(),Object(sr.a)(this,b)},Object(_n.d)().prototype.div=function(b){return this.throwIfDisposed(),Object(div.a)(this,b)};var ir=n(668);Object(_n.d)().prototype.dot=function(b){return this.throwIfDisposed(),Object(ir.a)(this,b)};var or=n(600);Object(_n.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(or.a)(this)},Object(_n.d)().prototype.equal=function(b){return this.throwIfDisposed(),Object(at.a)(this,b)};var ur=n(740);Object(_n.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n(669);Object(_n.d)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Object(cr.a)(this,e,t)},Object(_n.d)().prototype.exp=function(){return this.throwIfDisposed(),Object($e.a)(this)},Object(_n.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(Cn.a)(this,e)};var lr=n(741);Object(_n.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(lr.a)(this)};var dr=n(612);Object(_n.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(dr.a)(this)},Object(_n.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(N.a)(this,[this.size])},Object(_n.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(vt.a)(this)};var pr=n(599);Object(_n.d)().prototype.floorDiv=function(b){return this.throwIfDisposed(),Object(pr.a)(this,b)},Object(_n.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(An.a)(this,e,t)},Object(_n.d)().prototype.greaterEqual=function(b){return this.throwIfDisposed(),Object(ne.a)(this,b)},Object(_n.d)().prototype.greater=function(b){return this.throwIfDisposed(),Object(Xe.a)(this,b)};var fr=n(613);Object(_n.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(fr.a)(this)};var mr=n(652);Object(_n.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(mr.a)(this)};var gr=n(742);Object(_n.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(gr.a)(this)};var yr=n(743);Object(_n.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(yr.a)(this)};var xr=n(744);Object(_n.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(xr.a)(this)};var vr=n(603);Object(_n.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(vr.a)(this,e)},Object(_n.d)().prototype.lessEqual=function(b){return this.throwIfDisposed(),Object(re.a)(this,b)},Object(_n.d)().prototype.less=function(b){return this.throwIfDisposed(),Object(ot.a)(this,b)};var wr=n(670);Object(_n.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(wr.a)(this,e,t,n,r)};var Or=n(745);Object(_n.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(Or.a)(this)};var kr=n(721);Object(_n.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(kr.a)(this,e)};var Ir=n(618);Object(_n.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(Ir.a)(this,e,t)},Object(_n.d)().prototype.log=function(){return this.throwIfDisposed(),Object(jt.a)(this)};var Sr=n(644);Object(_n.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(Sr.a)(this)},Object(_n.d)().prototype.logicalAnd=function(b){return this.throwIfDisposed(),Object(ae.a)(this,b)},Object(_n.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Yt.a)(this)};var Nr=n(625);Object(_n.d)().prototype.logicalOr=function(b){return this.throwIfDisposed(),Object(Nr.a)(this,b)};var Tr=n(671);Object(_n.d)().prototype.logicalXor=function(b){return this.throwIfDisposed(),Object(Tr.a)(this,b)},Object(_n.d)().prototype.matMul=function(b,e,t){return this.throwIfDisposed(),Object(Y.a)(this,b,e,t)};var Cr=n(604);Object(_n.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Cr.a)(this,e,t,n,r)};var Ar=n(552);Object(_n.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(Ar.a)(this,e,t)},Object(_n.d)().prototype.maximum=function(b){return this.throwIfDisposed(),Object(jn.a)(this,b)};var jr=n(574);Object(_n.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(jr.a)(this,e,t)};var $r=n(616);Object(_n.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object($r.a)(this,e,t)};var Er=n(605);Object(_n.d)().prototype.minimum=function(b){return this.throwIfDisposed(),Object(Er.a)(this,b)};var Rr=n(672);Object(_n.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(Rr.a)(this,e,t)};var Fr=n(673);Object(_n.d)().prototype.mod=function(b){return this.throwIfDisposed(),Object(Fr.a)(this,b)},Object(_n.d)().prototype.mul=function(b){return this.throwIfDisposed(),Object(f.a)(this,b)},Object(_n.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(x.a)(this)};var Dr=n(579);Object(_n.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Dr.a)(this,e,t,n)};var _r=n(606);Object(_n.d)().prototype.notEqual=function(b){return this.throwIfDisposed(),Object(_r.a)(this,b)};var Mr=n(645);Object(_n.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object(Mr.a)(this,e,t,n)};var Lr=n(723);Object(_n.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Lr.a)(this)},Object(_n.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(sn.a)(this,e,t)};var zr=n(674);Object(_n.d)().prototype.pool=function(e,t,n,r,o,c){return this.throwIfDisposed(),Object(zr.a)(this,e,t,n,r,o,c)},Object(_n.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object($t.a)(this,e)};var Pr=n(608);Object(_n.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Pr.a)(this,e)};var Br=n(675);Object(_n.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Br.a)(this,e,t)};var Wr=n(746);Object(_n.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Wr.a)(this)};var Ur=n(555);Object(_n.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Ur.a)(this)};var Vr=n(619);Object(_n.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Vr.a)(this)},Object(_n.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(N.a)(this,e.shape)},Object(_n.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(N.a)(this,e)};var Gr=n(729);Object(_n.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Gr.a)(this,e,t,n)};var Hr=n(728);Object(_n.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Hr.a)(this,e,t,n)},Object(_n.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Gt.a)(this,e)};var qr=n(614);Object(_n.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(qr.a)(this)};var Kr=n(654);Object(_n.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Kr.a)(this)},Object(_n.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Le.a)(this)};var Yr=n(649);Object(_n.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Yr.a)(this)};var Xr=n(650);Object(_n.d)().prototype.separableConv2d=function(e,t,n,r,o,c){return this.throwIfDisposed(),Object(Xr.a)(this,e,t,n,r,o,c)},Object(_n.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(ln.a)(this)};var Zr=n(747);Object(_n.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Zr.a)(this)},Object(_n.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(ye.a)(this)},Object(_n.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(ve.a)(this)},Object(_n.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(yt.a)(this,e,t)};var Jr=n(725);Object(_n.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Jr.a)(this,e)};var Qr=n(651);Object(_n.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Qr.a)(this)},Object(_n.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(Z.a)(this,e,t)},Object(_n.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ue.a)(this,e,t)},Object(_n.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(w.a)(this)},Object(_n.d)().prototype.square=function(){return this.throwIfDisposed(),Object(O.a)(this)};var ea=n(617);Object(_n.d)().prototype.squaredDifference=function(b){return this.throwIfDisposed(),Object(ea.a)(this,b)};var ta=n(610);Object(_n.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(ta.a)(this,e)},Object(_n.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof _n.a?[this,e]:[this,...e];return Object(Nn.a)(n,t)},Object(_n.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(m.a)(this,e)};var na=n(748);Object(_n.d)().prototype.stridedSlice=function(e,t,n,r,o,c,l,d){return this.throwIfDisposed(),Object(na.a)(this,e,t,n,r,o,c,l,d)},Object(_n.d)().prototype.sub=function(b){return this.throwIfDisposed(),Object(sub.a)(this,b)},Object(_n.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(T.a)(this,e,t)};var ra=n(749);Object(_n.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(ra.a)(this)};var aa=n(726);Object(_n.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(aa.a)(this)},Object(_n.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(ze.a)(this,e)},Object(_n.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(h.a)(this,"bool")},Object(_n.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(h.a)(this,"float32")},Object(_n.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(h.a)(this,"int32")};var sa=n(676);Object(_n.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(sa.a)(this,e,t)},Object(_n.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(Ie.a)(this,e)};var ia=n(677);Object(_n.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(ia.a)(this,e)},Object(_n.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(Be.a)(this,e,t)},Object(_n.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(Tt.a)(this,e)},Object(_n.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(se.a)(e,this,t)},Object(_n.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(j.a)(this)};class oa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oa.prototype)}}class ua extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ua.prototype)}}class ca extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ca.prototype)}}class la extends Error{constructor(e){super(e),Object.setPrototypeOf(this,la.prototype)}}class da extends Error{constructor(e){super(e),Object.setPrototypeOf(this,da.prototype)}}Error;class ha{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let i=0;i<this.maxEntries-e;i++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function pa(e,t){if(Array.isArray(e)){let n=[];for(let i=0;i<t;i++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function fa(e,t){if(!e)throw new da(t)}function ma(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ba(e){return 1===e.length?e[0]:e}function ga(e){return Array.isArray(e)?e:[e]}function ya(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function xa(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let va={};function wa(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Oa(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Oa(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Oa(t):e[n]=t.value)}}}function ka(e,t={},n={},r="object",o=!1){if("string"==typeof e){const o=e;let c;if(o in n)c=n[o];else if(o in va)c=va[o];else if(c=t[o],null==c)throw new ca(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return c}{const c=e;if(null==c.className||null==c.config)throw new ca(`${r}: Improper config format: ${JSON.stringify(c)}.\n'className' and 'config' must set.`);const l=c.className;let d,h;if(l in n?[d,h]=n[l]:l in va?[d,h]=va.className:l in t&&([d,h]=t[l]),null==d)throw new ca(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=h){const e={};for(const t of Object.keys(va))e[t]=va[t];for(const t of Object.keys(n))e[t]=n[t];c.config.customObjects=e;const t=Object.assign({},va);for(const e of Object.keys(n))va[e]=n[e];Oa(c.config);const r=h(d,c.config,n,o);return va=Object.assign({},t),r}{const e=Object.assign({},va);for(const e of Object.keys(n))va[e]=n[e];const t=new d(c.config);return va=Object.assign({},e),t}}}function Ia(a,b){return-1*function(a,b){return a<b?-1:a>b?1:0}(a,b)}function Sa(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Na(e){if(null==e)throw new ca(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ta(e,label,t){if(null!=t&&e.indexOf(t)<0)throw new ca(`${t} is not a valid ${label}.  Valid values are ${e} or null/undefined.`)}function Ca(e,t,n=0,r=1/0){return fa(n>=0),fa(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Aa(e,t){Array.isArray(e)?(l.Af.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,i)=>Aa(e,`element ${i+1} of ${t}`)))):l.Af.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ja(e)}.`))}function ja(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ja(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function $a(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Ea=0;function Ra(){return Ea++}const Fa={};function Da(e=""){return e in Fa||(Fa[e]=0),Fa[e]+=1,e+Fa[e].toString()}const _a=["channelsFirst","channelsLast"],Ma=["nearest","bilinear"],La=["valid","same","causal"],za=["max","avg"],Pa=["sum","mul","concat","ave"],Ba=new Map;function Wa(e){Ta(_a,"DataFormat",e)}function Ua(e){Ta(La,"PaddingMode",e)}function Va(e){Ta(za,"PoolMode",e)}const Ga=[];function Ha(e,t){Ga.push(e);try{const e=t();return Ga.pop(),e}catch(e){throw Ga.pop(),e}}function qa(e){if(!Xa(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ga.length?"":Ga.join("/")+"/")+e}function Ka(e){if(!Xa(e))throw new Error("Not a valid tensor name: '"+e+"'");Ba.has(e)||Ba.set(e,0);const t=Ba.get(e);if(Ba.set(e,Ba.get(e)+1),t>0){const n=`${e}_${t}`;return Ba.set(n,1),n}return e}const Ya=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Xa(e){return!!e.match(Ya)}function Za(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let i=t;i<n;++i)r*=e[i];return r}function Ja(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let i=0;i<e.length;i++){const n=e[i];n<t&&(t=n)}return t}function Qa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let i=0;i<e.length;i++){const n=e[i];n>t&&(t=n)}return t}function es(e,t){if(t<e)throw new ca(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let i=e;i<t;++i)n.push(i);return n}let ts;function ns(){return null==ts&&(ts=Object(l.wd)().epsilon()),ts}function rs(e,t){return l.Ed(e,t)}function as(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),l.Re(e,n)}function ss(e,t,n){return Object(l.tf)((()=>{switch(e.rank){case 1:return l.af(e,t,n);case 2:return l.bf(e,[t,0],[n,e.shape[1]]);case 3:return l.cf(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return l.df(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return l.Ze(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return l.Ze(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ca(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function is(e,t,n){return Object(l.tf)((()=>{switch(e.rank){case 1:return l.af(e,t,n);case 2:return l.bf(e,[0,t],[e.shape[0],n]);case 3:return l.cf(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return l.df(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ca(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function os(e,t,n,r){return Object(l.tf)((()=>{switch(e.rank){case 1:return l.af(e,t,n);case 2:switch(r){case 1:return ss(e,t,n);case 2:return is(e,t,n);default:throw new ca(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ss(e,t,n);case 2:return l.cf(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return is(e,t,n);default:throw new ca(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ss(e,t,n);case 2:return l.df(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return l.df(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return is(e,t,n);default:throw new ca(`The axis is not within the rank of the tensor ${r}`)}default:throw new ca(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function us(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),l.Hd(e,t)}function cs(a,b){switch(a.rank){case 1:return l.Id([a,b]);case 2:return l.Jd([a,b],0);case 3:return l.Kd([a,b],0);case 4:return l.Ld([a,b],0);default:throw new ca(`concatAlongFirstAxis() received an unsupported tensor rank: ${a.rank}`)}}function ls(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ca(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return l.uf(e,t)}function ds(e,t=0,n=1,r,o){return l.Me(e,t,n,r,o)}function hs(a,b,e,t){if(a.rank<2||b.rank<2)throw new la(`dot requires both inputs to be rank >= 2 but got x shape = ${a.shape} and y shape = ${b.shape}`);if(b.rank>=3){if(a.shape.slice(-1)[0]!==b.shape.slice(-2)[0])throw new la(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${a.shape} and  y shape = ${b.shape}`)}if(2===a.rank&&2===b.rank){const n=!1,r=!1;return l.fe.matMul({a:a,b:b,transposeA:n,transposeB:r,bias:t?ms(a.rank,t,"channelsLast"):null,activation:e})}{const n=a.shape.slice(),r=n.pop();a=l.Re(a,[-1,r]);const o=b.shape.slice(),c=o.pop(),d=o.pop(),h=[...o,c],f=Array.from({length:b.rank},((e,i)=>0===i?b.rank-2:i<=b.rank-2?i-1:i));b=l.Re(l.wf(b,f),[d,-1]);const m=[...n,...h],y=!1,x=!1;return l.Re(l.fe.matMul({a:a,b:b,transposeA:y,transposeB:x,bias:t?ms(a.rank,t,"channelsLast"):null,activation:e}),m)}}function ps(e,t,n){return Object(l.tf)((()=>(t=Array.isArray(t)?Object(l.qf)(t,"int32"):l.Ed(t,"int32"),l.ge(e,t,n))))}function fs(e){return l.Ce(e,e)}function ms(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ca(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?l.Re(t,[1,r[0],1,1,1]):l.Re(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?l.Re(t,[1,1,1,1,r[0]]):l.Re(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?l.Re(t,[1,r[0],1,1]):l.Re(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?l.Re(t,[1,1,1,r[0]]):l.Re(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?l.Re(t,[1,r[0],1]):l.Re(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?l.Re(t,[1,1,r[0]]):l.Re(t,[1].concat(r))}else if(e<3)return t;throw new ca(`Unsupported input rank by biasAdd: ${t.rank}`)}function bs(e,t,n){return Object(l.tf)((()=>(null==n&&(n="channelsLast"),Wa(n),l.qd(e,ms(e.rank,t,n)))))}function gs(e,t,n,r){return Object(l.tf)((()=>l.Vd(e,t,n,r)))}function ys(e,t,n=!1){return n?e():t()}const xs=["fanIn","fanOut","fanAvg"],vs=["normal","uniform","truncatedNormal"];class ws extends l.We.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Os extends ws{apply(e,t){return Object(l.Ff)(e,t)}}Os.className="Zeros",l.We.registerClass(Os);class ks extends ws{apply(e,t){return Object(l.He)(e,t)}}ks.className="Ones",l.We.registerClass(ks);class Is extends ws{constructor(e){if(super(),"object"!=typeof e)throw new ca(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ca(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(l.tf)((()=>Object(l.Ce)(Object(l.Te)(this.value),Object(l.He)(e,t))))}getConfig(){return{value:this.value}}}Is.className="Constant",l.We.registerClass(Is);class Ss extends ws{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(l.Ne)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ss.className="RandomUniform",l.We.registerClass(Ss);class Ns extends ws{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new la(`randomNormal does not support dType ${t}.`);return ds(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ns.className="RandomNormal",l.We.registerClass(Ns);class Ts extends ws{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new la(`truncatedNormal does not support dType ${t}.`);return Object(l.xf)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ts.className="TruncatedNormal",l.We.registerClass(Ts);class Cs extends ws{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(l.tf)((()=>{if(2!==e.length||e[0]!==e[1])throw new ca("Identity matrix initializer can only be used for 2D square matrices.");return Object(l.Ce)(this.gain,Object(l.ce)(e[0]))}))}getConfig(){return{gain:this.gain}}}Cs.className="Identity",l.We.registerClass(Cs);class As extends ws{constructor(e){if(super(),e.scale<0)throw new ca(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Ta(xs,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Ta(vs,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Wa(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Za(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Za(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Za(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],o=n[1];let c=this.scale;if("fanIn"===this.mode?c/=Math.max(1,r):"fanOut"===this.mode?c/=Math.max(1,o):c/=Math.max(1,(r+o)/2),"normal"===this.distribution){const n=Math.sqrt(c);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new la(`${this.getClassName()} does not support dType ${t}.`);return Object(l.xf)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*c);return Object(l.Ne)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}As.className="VarianceScaling",l.We.registerClass(As);class js extends As{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return As.className}}js.className="GlorotUniform",l.We.registerClass(js);class $s extends As{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return As.className}}$s.className="GlorotNormal",l.We.registerClass($s);class Es extends As{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return As.className}}Es.className="HeNormal",l.We.registerClass(Es);class Rs extends As{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return As.className}}Rs.className="HeUniform",l.We.registerClass(Rs);class Fs extends As{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return As.className}}Fs.className="LeCunNormal",l.We.registerClass(Fs);class Ds extends As{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return As.className}}Ds.className="LeCunNormal",l.We.registerClass(Ds);class _s extends ws{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new la("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(l.tf)((()=>{if(e.length<2)throw new la("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const a=ds(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let q=l.oe.gramSchmidt(a);return e[0]>e[1]&&(q=Object(l.wf)(q)),Object(l.Ce)(this.gain,q)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}_s.className="Orthogonal",l.We.registerClass(_s);const Ms={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ls(e,t={}){return ka(e,l.We.SerializationMap.getMap().classNameMap,t,"initializer")}function zs(e){return wa(e)}function Ps(e){if("string"==typeof e){const t=e in Ms?Ms[e]:e;if("GlorotNormal"===t)return new $s;if("GlorotUniform"===t)return new js;if("HeNormal"===t)return new Es;if("HeUniform"===t)return new Rs;if("LeCunNormal"===t)return new Fs;if("LeCunUniform"===t)return new Ds;{const e={};return e.className=t,e.config={},Ls(e)}}return e instanceof ws?e:Ls(e)}function Bs(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ws(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Us(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ca(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Vs(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ca(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Gs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((a,b)=>a*b));return t}const Hs="Variable";class qs{constructor(e,t="float32",n="Variable",r=!0,o=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ra(),n=null==n?Hs:n,this.originalName=qa(n),this.name=Ka(this.originalName),this.trainable_=r,this.constraint=o,this.val=l.Bf(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ks(e){return e.map((e=>e.read()))}function Ys(e){e.forEach((e=>{e[0].write(e[1])}))}class Xs{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Zs{constructor(e,t,n,r,o,c,l){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=o,this.outputTensorIndex=l,this.id=Ra(),null!=c&&(this.originalName=qa(c),this.name=Ka(this.originalName)),this.rank=t.length}}let Js=0;class Qs{constructor(e,t){this.callArgs=t,this.id=Js++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ei=0;class ti extends l.We.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ei++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ya(e)+"_"+Da(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ua(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ca(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ba(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ba(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new oa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new oa(`Layer ${this.name} is not connected, no input to return.`);return ba(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new oa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new oa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ba(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ga(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ga(this.inputSpec);if(e.length!==t.length)throw new ca(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],o=t[n];if(null==o)continue;const c=r.rank;if(null!=o.ndim&&c!==o.ndim)throw new ca(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${c}`);if(null!=o.maxNDim&&c>o.maxNDim)throw new ca(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${c}`);if(null!=o.minNDim&&c<o.minNDim)throw new ca(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${c}.`);if(null!=o.dtype&&r.dtype!==o.dtype)throw new ca(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const e=r.shape;for(const t in o.axes){const r=Number(t),c=o.axes[t],l=r>=0?e[r]:e[e.length+r];if(null!=c&&-1===[c,null].indexOf(l))throw new ca(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${c} but got shape ${e}.`)}}if(null!=o.shape)for(let i=0;i<o.shape.length;++i){const e=o.shape[i],t=r.shape[i];if(null!=e&&null!=t&&e!==t)throw new ca(`Input ${n} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ga(e);let r=!0;for(const input of n)if(!(input instanceof Zs)){r=!1;break}let o=!0;for(const input of n)if(input instanceof Zs){o=!1;break}if(r===o)throw new ca("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ha(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ga(e))t.push(n.shape);this.build(ba(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let output=this.call(e,t);const r=ga(output),o=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),o.push(e);if(output=ba(o),null!=this.activityRegularizer)throw new la("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}{const n=function(e){e=ga(e);const t=[];for(const n of e)t.push(n.shape);return ba(t)}(e),r=this.computeOutputShape(n);let output;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),output=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Zs(o,n,this,ga(e),t,this.name,r))):new Zs(o,r,this,ga(e),t,this.name),this.addInboundNode(e,output,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new la("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,i)=>{null!=n&&null!=e[i]&&e[i]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new oa(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new oa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ua(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Gs(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ks(e?this.trainableWeights:this.weights)}setWeights(e){Object(l.tf)((()=>{const t=this.weights;if(t.length!==e.length)throw new ca(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ks(t);for(let i=0;i<r.length;++i){const o=r[i],p=t[i],c=e[i];if(!l.Af.arraysEqual(o.shape,c.shape))throw new ca(`Layer weight shape ${o.shape} not compatible with provided weight shape ${c.shape}`);n.push([p,c])}Ys(n)}))}addWeight(e,t,n,r,o,c,l,d){if(-1!==this._addedWeightNames.indexOf(e))throw new ca(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=d?d():Ps("zeros"));const h=r.apply(t,n),f=new qs(h,n,e,c,l);return h.dispose(),null!=o&&this.addLoss((()=>o.apply(f.read()))),null==c&&(c=!0),c?this._trainableWeights.push(f):this._nonTrainableWeights.push(f),f}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ga(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,mask){if(!this.supportsMasking){if(null!=mask){if(!Array.isArray(mask))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);mask.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return mask}addInboundNode(e,t,n,r,o,c,l=null){const d=ga(e);t=ga(t),n=ga(n),r=ga(r),o=Ws(o),c=Ws(c);const h=[],f=[],m=[];for(const e of d)h.push(e.sourceLayer),f.push(e.nodeIndex),m.push(e.tensorIndex);new Qs({outboundLayer:this,inboundLayers:h,nodeIndices:f,tensorIndices:m,inputTensors:d,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:o,outputShapes:c},l);for(let i=0;i<t.length;i++)t[i].sourceLayer=this,t[i].nodeIndex=this.inboundNodes.length-1,t[i].tensorIndex=i}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ni(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let i=0;i<e.inboundLayers.length;i++){const n=ni(e.inputTensors[i],e.inboundLayers[i],e.nodeIndices[i]);for(const e of n)-1===t.indexOf(e)&&t.push(e)}return t}}}class ri extends ti{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Da("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ca("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ca("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ca("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Zs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Qs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ca(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ai(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ca("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new ri({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}ri.className="InputLayer",l.We.registerClass(ri);class si{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof si)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,mask){if(null!=this.id2Value[e.id])throw new ca(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(l.Ed)(t,e.dtype)}catch(n){throw new ca(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=mask&&(this.id2Mask[e.id]=mask),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Zs){if(null==this.id2Value[e.id])throw new ca(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ca(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Zs){if(null==this.id2Value[e.id])throw new ca(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ca(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(l.Td)(this.id2Mask)}}const ii=new ha,oi=new ha;function ui(e,t,n,r){const o=null!=n&&n.training,c=Array.isArray(e),d=c?e:[e],h=d.map((e=>e.name)),f=[],m=t.names();for(const e of h)-1!==m.indexOf(e)?f.push(t.getValue(e)):f.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const y=h.join(",")+"|"+t.names().sort().join(",");let x,v=ii.get(y);if(null==v){const e=function(e,t){l.Af.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const o=di(e[0],t);n=o.sorted,r=o.recipientMap}else{const o=new Set;for(const c of e){const{sorted:e,recipientMap:l}=di(c,t);for(const t of e)o.has(t.name)||(n.push(t),o.add(t.name));for(const e in l)null==r[e]&&(r[e]=new Set),l[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ci(r)}}(d,t);v=e.sorted,x=e.recipientCounts,ii.put(y,v),oi.put(y,x)}x={},o||Object.assign(x,oi.get(y));const w=new si(t);for(let i=0;i<v.length;++i){if(null!=r){const e=Object(l.ze)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=v[i],c=e.sourceLayer;if(c instanceof ri)continue;const d=[],m=[],y=[];let O=!1;for(const input of e.inputs){const e=w.getValue(input),mask=w.getMask(input);d.push(e),m.push(mask),null!=mask&&(O=!0),o||(x[input.name]--,0!==x[input.name]||t.hasKey(input)||-1!==h.indexOf(input.name)||e.isDisposed||!0===input.sourceLayer.stateful||y.push(e))}O&&((n=n||{}).mask=m[0]);const k=ga(c.apply(d,n));let I=null;c.supportsMasking&&(I=c.computeMask(d,m));const S=hi(e),N=Array.isArray(S)?S:[S];for(let i=0;i<N.length;++i){w.hasKey(N[i])||w.add(N[i],k[i],Array.isArray(I)?I[0]:I);const e=h.indexOf(N[i].name);-1!==e&&(f[e]=k[i])}o||Object(l.Td)(y)}return w.disposeMasks(),c?f:f[0]}function ci(e){const t={};for(const n in e)t[n]=e[n].size;return t}function di(e,t){const n=new Set,r=[],o={};for(const e of t.names())n.add(e);const c=[],l=[];for(c.push(e);c.length>0;){const e=c[c.length-1];if(n.has(e.name)){c.pop();continue}const t=l[l.length-1]===c.length-1;if(0===e.inputs.length||t)c.pop(),r.push(e),n.add(e.name),t&&l.pop();else{l.push(c.length-1);for(const input of e.inputs)null==o[input.name]&&(o[input.name]=new Set),o[input.name].add(e.name),n.has(input.name)||c.push(input)}}return{sorted:r,recipientMap:o}}function hi(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let i=0;i<e.sourceLayer.inboundNodes.length;++i)for(const t of e.sourceLayer.inboundNodes[i].outputTensors)if(t.id===e.id){n=i;break}t=e.sourceLayer.getOutputAt(n)}return t}function pi(e,t){return Object(l.tf)((()=>l.if(l.mf(l.Ce(e,e),t,!0))))}Object(l.Yd)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=ii&&ii.setMaxEntries(e),null!=oi&&oi.setMaxEntries(e)}));class fi extends l.We.Serializable{getConfig(){return{}}}class mi extends fi{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(l.tf)((()=>{const t=pi(e,this.axis),n=l.Fd(t,0,this.maxValue);return l.Ce(e,l.Ud(n,l.qd(ns(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}mi.className="MaxNorm",l.We.registerClass(mi);class bi extends fi{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(l.tf)((()=>l.Ud(e,l.qd(ns(),pi(e,this.axis)))))}getConfig(){return{axis:this.axis}}}bi.className="UnitNorm",l.We.registerClass(bi);class gi extends fi{apply(e){return l.Qe(e)}}gi.className="NonNeg",l.We.registerClass(gi);class yi extends fi{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(l.tf)((()=>{const t=pi(e,this.axis),n=l.qd(l.Ce(this.rate,l.Fd(t,this.minValue,this.maxValue)),l.Ce(1-this.rate,t));return l.Ce(e,l.Ud(n,l.qd(ns(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}yi.className="MinMaxNorm",l.We.registerClass(yi);const xi={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function vi(e){return wa(e)}function wi(e,t={}){return ka(e,l.We.SerializationMap.getMap().classNameMap,t,"constraint")}function Oi(e){if(null==e)return null;if("string"==typeof e){return wi({className:e in xi?xi[e]:e,config:{}})}return e instanceof fi?e:wi(e)}async function ki(e){if(null==e)return;const t=[],n=[],r=[];for(const o in e){const c=e[o];if("number"!=typeof c){const e=c;t.push(e.data()),n.push(o),r.push(e)}}if(t.length>0){const o=await Promise.all(t);for(let i=0;i<o.length;++i)e[n[i]]=o[i][0];Object(l.Td)(r)}}function Ii(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Si;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Si||(Si={}));class Ni{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ti{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ci extends Ni{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const o=Object(l.tf)((()=>Object(l.qd)(this.totals[e],Object(l.Ce)(r,n))));this.totals[e]=o,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Object(l.tf)((()=>{const n=Object(l.Ce)(Object(l.Ud)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Object(l.le)(t[e])})))}}class Ai extends Ni{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const o=this.history[r];for(let i=0;i<o.length;++i)if("number"!=typeof o[i]){const c=o[i];e.push(c.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class ji extends Ni{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||l.Ee,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");l.Af.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,o=null!=n?n():l.Af.now();return(...c)=>{const d=null!=n?n():l.Af.now();return d-o<t||(o=d,r=e(...c)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await ki(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ki(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ki(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ki(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ki(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):l.Af.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ki(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ki(e),await this.trainEnd(e))}}function $i(e,t){if(null==e&&(e={}),e instanceof Ni)return[e];if(Array.isArray(e)&&e[0]instanceof Ni)return e;return ga(e).map((e=>new ji(e,t)))}class Ei{constructor(){}static registerCallbackConstructor(e,t){l.Af.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Ei.checkForDuplicate(t),null==Ei.constructors[e]&&(Ei.constructors[e]=[]),Ei.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ei.constructors){Ei.constructors[+t].forEach((t=>{if(t===e)throw new ca("Duplicate callback constructor.")}))}}static clear(){Ei.constructors={}}static createCallbacks(e){const t=[];for(const n in Ei.constructors){const r=+n;e>=r&&t.push(...Ei.constructors[r])}return t.map((e=>new e))}}function Ri(e,t,n,r,o,c,l,d,h){const f=new Ai,m=[new Ci,...Ei.createCallbacks(t)];null!=e&&m.push(...e),m.push(f);const y=new Ti(m);return y.setParams({epochs:n,initialEpoch:r,samples:o,steps:c,batchSize:l,verbose:t,doValidation:d,metrics:h}),{callbackList:y,history:f}}function Fi(e,t={},n=!1){return ka(e,l.We.SerializationMap.getMap().classNameMap,t,"layer",n)}function Di(e,t){return Object(l.tf)((()=>{"float32"!==e.dtype&&(e=l.Ed(e,"float32"));const n=l.mf(fs(e),t,!0),r=l.de(n.shape,ns()),o=l.if(l.xe(n,r));return l.Ud(e,o)}))}function _i(e,t){return Object(l.tf)((()=>l.ye(fs(l.lf(t,e)),-1)))}function Mi(e,t){return Object(l.tf)((()=>l.ye(l.pd(l.lf(t,e)),-1)))}function Li(e,t){return Object(l.tf)((()=>{const n=l.lf(e,t),r=l.Fd(l.pd(e),ns(),Number.MAX_VALUE),o=l.pd(l.Ud(n,r));return l.Ce(100,l.ye(o,-1))}))}function zi(e,t){return Object(l.tf)((()=>{const n=l.Fd(t,ns(),Number.MAX_VALUE),r=l.pe(l.qd(1,n)),o=l.Fd(e,ns(),Number.MAX_VALUE),c=l.pe(l.qd(1,o));return l.ye(fs(l.lf(r,c)),-1)}))}function Pi(e,output,t=!1){return Object(l.tf)((()=>{if(t)output=l.ff(output);else{const e=l.mf(output,output.shape.length-1,!0);output=l.Ud(output,e)}return output=l.Fd(output,ns(),1-ns()),l.De(l.mf(l.Ce(l.Ed(e,"float32"),l.pe(output)),output.shape.length-1))}))}function Bi(e,output,t=!1){return Object(l.tf)((()=>{const n=l.Ed(l.ee(function(e){const t=[Za(e.shape)];return l.Re(e,t)}(e)),"int32"),r=(output=l.Fd(output,ns(),1-ns())).shape;return Pi(l.Re(l.Ge(n,r[r.length-1]),r),output,t)}))}function Wi(e,t){return Object(l.tf)((()=>{let n;return n=l.Fd(t,ns(),1-ns()),n=l.pe(l.Ud(n,l.lf(1,n))),l.ye(function(e,t){if(!l.Af.arraysEqual(e.shape,t.shape))throw new ca(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(l.tf)((()=>{const n=l.Qe(t),r=l.De(l.pd(t));return l.qd(l.lf(n,l.Ce(t,e)),l.qe(l.ae(r)))}))}(e,n),-1)}))}function Ui(e,t){return Object(l.tf)((()=>{const n=l.Fd(e,ns(),1),r=l.Fd(t,ns(),1);return l.mf(l.Ce(e,l.pe(l.Ud(n,r))),-1)}))}function Vi(e,t){return Object(l.tf)((()=>{const n=Di(e,-1),r=Di(t,-1),o=l.Ce(n,r);return l.De(l.mf(o,-1))}))}Ei.constructors={};const Gi={meanSquaredError:_i,meanAbsoluteError:Mi,meanAbsolutePercentageError:Li,meanSquaredLogarithmicError:zi,squaredHinge:function(e,t){return Object(l.tf)((()=>{const n=l.xe(0,l.lf(1,l.Ce(e,t)));return l.ye(fs(n),-1)}))},hinge:function(e,t){return Object(l.tf)((()=>{const n=l.xe(0,l.lf(1,l.Ce(e,t)));return l.ye(n,-1)}))},categoricalHinge:function(e,t){return Object(l.tf)((()=>{const n=l.mf(l.Ce(e,t),-1),r=l.ue(l.Ce(l.lf(1,e),t),-1);return l.xe(0,l.qd(1,l.lf(r,n)))}))},logcosh:function(e,t){return Object(l.tf)((()=>{const n=Math.log(2),r=l.lf(t,e),o=l.lf(l.qd(r,l.gf(l.Ce(-2,r))),n);return l.ye(o,-1)}))},categoricalCrossentropy:Pi,sparseCategoricalCrossentropy:Bi,binaryCrossentropy:Wi,kullbackLeiblerDivergence:Ui,poisson:function(e,t){return Object(l.tf)((()=>{const n=l.pe(l.qd(ns(),t));return l.ye(l.lf(t,l.Ce(e,n)),-1)}))},cosineProximity:Vi};function Hi(e){if("string"==typeof e){if(e in Gi)return Gi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ca(t)}return e}function qi(e,t){return Object(l.tf)((()=>{const n=l.Ce(.5,l.Ie(t)),r=rs(l.he(t,n),e.dtype);return l.ye(l.Zd(e,r),-1)}))}function Ki(e,t){return Object(l.tf)((()=>rs(l.Zd(l.td(e,-1),l.td(t,-1)),"float32")))}function Yi(e,t){return Object(l.tf)((()=>l.Ed(l.mf(l.se(l.Zd(e,1),l.Zd(t,1))),"float32")))}function Xi(e,t){return Object(l.tf)((()=>{const n=Yi(e,t),r=function(e,t){return Object(l.tf)((()=>l.Ed(l.mf(l.se(l.Zd(e,0),l.Zd(t,1))),"float32")))}(e,t),o=l.qd(n,r);return l.Ed(l.Ef(l.he(o,0),l.Ud(n,o),0),"float32")}))}function Zi(e,t){return Wi(e,t)}function Ji(e,t){return e.rank===t.rank&&(e=l.jf(e,[e.rank-1])),(t=l.td(t,-1)).dtype!==e.dtype&&(t=l.Ed(t,e.dtype)),l.Ed(l.Zd(e,t),"float32")}const Qi=Pi,eo=Bi,to={binaryAccuracy:qi,categoricalAccuracy:Ki,precision:Xi,categoricalCrossentropy:Qi,sparseCategoricalCrossentropy:eo,mse:_i,MSE:_i,mae:Mi,MAE:Mi,mape:Li,MAPE:Li,cosine:Vi};function no(e){if("string"==typeof e&&e in to)return to[e];if("string"!=typeof e&&null!=e)return e;throw new ca(`Unknown metric ${e}`)}function ro(e){if(fa(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Gi))if(Gi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(to))if(to[n]===e){t=n;break}return void 0!==t?t:e.name}}const ao=1048576;function so(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!io(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>ao&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function io(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!io(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!io(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function oo(e,t,n,r=console.log){const o=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const o of n.inboundNodes)if(-1!==r.indexOf(o)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),c=["Layer (type)","Input Shape","Output shape","Param #"];let l;if(o?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((p=>Math.floor(t*p)))),!o){c.push("Receives inputs"),l=[];for(const t in e.nodesByDepth)l.push(...e.nodesByDepth[t])}r("_".repeat(t)),uo(c,n,r),r("=".repeat(t));const d=e.layers;for(let i=0;i<d.length;++i)o?co(d[i],n,r):lo(d[i],n,l,r),r((i===d.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const h=function(e){let t;t=null!=e.collectedTrainableWeights?Gs(e.collectedTrainableWeights):Gs(e.trainableWeights);return t}(e),f=Gs(e.nonTrainableWeights);r(`Total params: ${h+f}`),r(`Trainable params: ${h}`),r(`Non-trainable params: ${f}`),r("_".repeat(t))}function uo(e,t,n=console.log){let line="";for(let i=0;i<e.length;++i)i>0&&(line=line.slice(0,line.length-1)+" "),line+=e[i],line=line.slice(0,t[i]),line+=" ".repeat(t[i]-line.length);n(line)}function co(e,t,n){let r,o;try{o=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){o="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}uo([`${e.name} (${e.getClassName()})`,o,r,e.countParams().toString()],t,n)}function lo(e,t,n,r){let o,c;try{c=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){c="multiple"}try{o=JSON.stringify(e.outputShape)}catch(e){o="multiple"}const l=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let i=0;i<t.inboundLayers.length;++i){const e=t.inboundLayers[i].name,n=t.nodeIndices[i],r=t.tensorIndices[i];l.push(`${e}[${n}][${r}]`)}const d=e.name,h=e.getClassName(),f=0===l.length?"":l[0];uo([`${d} (${h})`,c,o,e.countParams().toString(),f],t,r);for(let i=1;i<l.length;++i)uo(["","","","",l[i]],t,r)}function ho(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function po(e,t){if(null===e)return null;if("string"==typeof e)return xa(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];ho(t,i,r)?n.push(r):n.push(po(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=xa(n);t[e]=po(r,e)}}return t}}function fo(e,t){if(null==e)return null;if("string"==typeof e)return ya(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];ho(t,i,r)?n.push(r):n.push(fo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],o=ya(n);t[o]="name"!==n&&"className"!==n||"string"!=typeof r?fo(r,n):r}return t}}class mo extends ti{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Da(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Sa(this.inputs).length!==this.inputs.length)throw new ca(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Sa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;fa(0===n,"input layer has >1 nodes"),fa(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i];if(!(t instanceof ri))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${i} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},o={},c={},l=[],d=(e,t,n,r,o,h)=>{null!=r&&null!=o&&null!=h||(r=e.sourceLayer,o=e.nodeIndex,h=e.tensorIndex);const f=r.inboundNodes[o];if(-1!==n.indexOf(f))throw new ua(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(f))return;this.containerNodes.add(mo.nodeKey(r,o)),r.id in c||(c[r.id]=Object.keys(c).length),-1===n.indexOf(f)&&n.push(f);const m=f.inboundLayers.length;for(let i=0;i<m;i++){const e=f.inputTensors[i],r=f.inboundLayers[i],o=f.nodeIndices[i],c=f.tensorIndices[i];d(e,t,n,r,o,c)}for(t.push(f);n.indexOf(f)>=0;)n.splice(n.indexOf(f),1);l.push(f)},h=[],f=[];for(const e of this.outputs)d(e,h,f);const m=l.slice().reverse();for(const e of m){n[e.id]=e,e.id in t||(t[e.id]=0);let c=t[e.id];const l=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];c=Math.max(c,l),r[e.outboundLayer.id]=c,o[e.outboundLayer.id]=e.outboundLayer,t[e.id]=c;for(let i=0;i<e.inboundLayers.length;i++){const r=e.inboundLayers[i],o=e.nodeIndices[i],l=r.inboundNodes[o],d=null==t[l.id]?0:t[l.id];t[l.id]=Math.max(c+1,d),n[l.id]=l}}const y={};for(const e in t){const r=t[e];r in y||(y[r]=[]),y[r].push(n[e])}const x={};for(const e in r){const t=r[e];t in x||(x[t]=[]),x[t].push(o[e])}let v=Object.keys(x).map((e=>parseInt(e,10))).sort(Ia);this.layers=[];for(const e of v){const t=x[e];t.sort(((a,b)=>{const e=c[a.id],t=c[b.id];return e<t?-1:e>t?1:0}));for(const e of t)e instanceof mo&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=x,v=Object.keys(y).map((e=>parseInt(e,10))).sort(Ia);const w=this.inputs.slice(),O=[];for(const e of v)for(const t of y[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===w.indexOf(n))throw new ua(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${O}`);for(const e of t.outputTensors)w.push(e);O.push(e.name)}}this.nodesByDepth=y;const k=this.layers.map((e=>e.name));for(const e of k){const t=k.filter((t=>t===e)).length;if(1!==t)throw new ua(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(k))}this.outboundNodes=[],this.inboundNodes=[],new Qs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ca("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ca(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const o=[];for(const r in e){let c=r;if(null==n[r]){const e=r.split("/");c=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[c])o.push([n[c],e[r]]);else if(t)throw new ca(`Provided weight data has no target variable: ${r}`);delete n[c]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ca(`${e.length} of ${r} weights are not set: ${e}`)}Ys(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.18.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=fo(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(l.tf)((()=>{e=ga(e);const n=new si;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],e[i]);return ui(this.outputs,n,t)}))}computeMask(e,mask){return Object(l.tf)((()=>{let t;return e=ga(e),t=null==mask?pa(null,e.length):ga(mask),this.runInternalGraph(e,t)[1]}))}computeOutputShape(e){const t=Ws(e);if(t.length!==this.inputLayers.length)throw new ca(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ia);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const o=e.inboundLayers[t],c=e.nodeIndices[t],l=e.tensorIndices[t],d=n[`${o.name}_${c}_${l}`];r.push(d)}const o=Ws(t.computeOutputShape(ba(r))),c=t.inboundNodes.indexOf(e);for(let e=0;e<o.length;e++){n[`${t.name}_${c}_${e}`]=o[e]}}}const o=[],c=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;c.push(r)}for(let i=0;i<c.length;i++){const e=c[i];fa(e in n),o.push(n[e])}return ba(o)}runInternalGraph(e,t){null==t&&(t=pa(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],o=e[i],mask=t[i];n[r.id]=[o,mask]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ia);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,o=e.outputTensors,c=new Array;for(const e of r)e.id in n&&c.push(n[e.id]);if(c.length===r.length){let r,l,d,h,f={};if(null!=e.callArgs&&(f=e.callArgs),1===c.length){const[e,n]=c[0];null==f.mask&&(f.mask=n),d=ga(t.call(e,f)),h=ga(t.computeMask(e,n)),r=[e],l=[n]}else r=c.map((e=>e[0])),l=c.map((e=>e[1])),null==f.mask&&(f.mask=l),d=ga(t.call(r,f)),h=ga(t.computeMask(r,l));if(t.activityRegularizer)throw new la("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let i=0;i<o.length;++i){const e=o[i],t=d[i],mask=h[i];n[e.id]=[t,mask]}}}}const o=[],c=[],l=[];for(const e of this.outputs){fa(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,mask]=n[e.id];l.push(t.shape),o.push(t),c.push(mask)}return[o,c,l]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof mo?1:0;for(let r=0;r<e.inboundNodes.length;r++){const o=mo.nodeKey(e,r);this.containerNodes.has(o)&&(t[o]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ca(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ca("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ca(`No such layer: ${e}`)}calculateLosses(){return Object(l.tf)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=mo.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),o=e.getConfig(),c=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],o=mo.nodeKey(e,n);let l={};if(this.containerNodes.has(o)){if(r.callArgs)try{JSON.stringify(r.callArgs),l=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),l={}}if(r.inboundLayers.length>0){const e=[];for(let i=0;i<r.inboundLayers.length;i++){const n=r.inboundLayers[i],o=r.nodeIndices[i],c=r.tensorIndices[i];let d=t[mo.nodeKey(n,o)];null==d&&(d=0),e.push([n.name,d,c,l])}c.push(e)}}}const l={};l.name=e.name,l.className=r,l.config=o,l.inboundNodes=c,n.push(l)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],o=mo.nodeKey(e,n);if(!this.containerNodes.has(o))continue;let c=t[o];null==c&&(c=0);const l=this.inputLayersTensorIndices[i];r.push([e.name,c,l])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=mo.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let c=t[r];null==c&&(c=0);const l=this.outputLayersTensorIndices[i];o.push([e.name,c,l])}return e.outputLayers=o,e}static fromConfig(e,t,n={},r=!1){const o={},c={};function l(e,t){e.name in c?c[e.name].push(t):c[e.name]=[t]}function d(e,t){const n=[];let r;for(const c of t){const d=c[0],h=c[1],f=c[2];if(r=null==c[3]?{}:c[3],!(d in o))return void l(e,t);const m=o[d];if(m.inboundNodes.length<=h)return void l(e,t);const y=m.inboundNodes[h];n.push(y.outputTensors[f])}n.length>0&&e.apply(ba(n),r)}function h(e){const n=e.name,c=Fi(e,null!=t.customObjects?t.customObjects:{});c.setFastWeightInitDuringBuild(r),o[n]=c;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ca(`Corrupted configuration, expected array for nodeData: ${e}`);l(c,e)}))}const f=t.name,m=t.layers;for(const e of m)h(e);for(;!Na(c);)for(const e of m){const t=o[e.name];if(t.name in c){const e=c[t.name];delete c[t.name];for(const n of e)d(t,n)}}const y=[],x=[],v=t.inputLayers;for(const e of v){const t=e[0],n=e[1],r=e[2];fa(t in o);const c=o[t].inboundNodes[n].outputTensors;y.push(c[r])}const w=t.outputLayers;for(const e of w){const t=e[0],n=e[1],r=e[2];fa(t in o);const c=o[t].inboundNodes[n].outputTensors;x.push(c[r])}return new e({inputs:y,outputs:x,name:f})}get stateful(){if(this._stateful)throw new ca("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(l.tf)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function bo(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const output=[];return t.forEach((t=>{t in e?output.push(e[t]):output.push(null)})),output}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function go(e,t){return bo(e,t,"classWeight")}async function yo(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(l.tf)((()=>{if(1===e.shape.length)return Object(l.Gd)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return Object(l.td)(e,t)}if(1===e.shape[1])return Object(l.Re)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Object(l.Td)(t);const o=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);o.push(n[e])})),Object(l.qf)(o,"float32")}return null}function xo(e,t){return Object(l.Ce)(e,t)}function vo(e,t){let n,r;const o=t;n=o.xs,r=o.ys,l.Af.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const c=wo("input",e.inputNames,n),d=wo("output",e.outputNames,r),h=c[0].shape[0];l.Af.assert(c.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${c.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),l.Af.assert(d.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${d.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<c.length;t++)l.Af.assert(c[t].shape[0]===h,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${c[t].shape[0]}; expected  ${h} based on input ${e.inputNames[0]}.`));for(let t=0;t<d.length;t++)l.Af.assert(d[t].shape[0]===h,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${d[t].shape[0]}; expected  ${h} based on input ${e.inputNames[0]}.`));return{xs:c,ys:d}}function wo(e,t,n){if(n instanceof l.ed)return[n];if(Array.isArray(n))return l.Af.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const o of t){if(null==n[o])throw new ca(`The feature data generated by the dataset lacks the required ${e} key '${o}'.`);r.push(n[o])}return r}}async function Oo(e,t,n){const r=null!=n.batchesPerEpoch;if(l.Af.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),l.Af.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),l.Af.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),l.Af.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),l.Af.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const o=null!=n.validationData;let c,d;if(o)if(ko(n.validationData))l.Af.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(data){if(3===data.length)throw new la("Validation with sample weights is not implemented yet.");return{xs:data[0],ys:data[1]}}(n.validationData);c=e.xs,d=e.ys}const h=e.makeTrainFunction(),f=e.getDedupedMetricsNames();let m;m=o?f.slice().concat(f.map((e=>"val_"+e))):f.slice();const y=$i(n.callbacks,n.yieldEvery),x=null==n.verbose?1:n.verbose,{callbackList:v,history:w}=Ri(y,x,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,o,m);v.setModel(e),e.history=w,await v.onTrainBegin(),e.stopTraining_=!1;let O=null==n.initialEpoch?0:n.initialEpoch,k=await t.iterator();for(;O<n.epochs;){const m={};await v.onEpochBegin(O);let y=0,x=0;for(r||(k=await t.iterator());!r||y<n.batchesPerEpoch;){const t=await k.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:o}=vo(e,t.value),c={};c.batch=x,c.size=r[0].shape[0],await v.onBatchBegin(x,c);const d=[];if(null!=n.classWeight){const t=go(n.classWeight,e.outputNames);for(let i=0;i<t.length;++i)d.push(await yo(o[i],null,t[i]))}const ins=r.concat(o).concat(d),m=h(ins);l.Td(ins);for(let i=0;i<f.length;++i){const label=f[i],e=m[i];c[label]=e,l.le(e)}await v.onBatchEnd(x,c),Ii(c),x++,y++}if(r?y>=n.batchesPerEpoch:t.done){if(o){let t;t=ko(n.validationData)?ga(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ga(e.evaluate(c,d,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let i=0;i<e.metricsNames.length;++i)m[`val_${e.metricsNames[i]}`]=t[i]}break}if(e.stopTraining_)break}if(await v.onEpochEnd(O,m),O++,e.stopTraining_)break}return await v.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function ko(e){return"function"==typeof e.iterator}function Io(e){l.Af.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function So(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ss(e,t,n-t))):ss(e,t,n-t)}function No(e,t){return l.tf((()=>null==e?null:Array.isArray(e)?e.map((e=>No(e,t))):ps(e,"int32"===t.dtype?t:l.Ed(t,"int32"))))}function To(e,t){const output=[];let n=0,r=null;for(;n<e;)r=n+t,r>=e&&(r=e),output.push([n,r]),n=r;return output}async function Co(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let o,c,d,h,f,m,y,x,v;e.isTraining=!0;try{const w=null==r.batchSize?32:r.batchSize;Io(w);const O=!1,k=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,O,w);o=k[0],c=k[1],v=k[2];let I,S=!1;if(null!=r.validationData&&r.validationData.length>0){if(S=!0,2!==r.validationData.length)throw 3===r.validationData.length?new la("validationData including sample weights is not supported yet."):new ca(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);f=r.validationData[0],m=r.validationData[1];const t=!0,n=await e.standardizeUserData(f,m,null,null,t,w);y=n[0],x=n[1],I=y.concat(x)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){S=!0;const e=Math.floor(o[0].shape[0]*(1-r.validationSplit)),t=o[0].shape[0];y=So(o,e,t),d=o,o=So(o,0,e),x=So(c,e,t),h=c,c=So(c,0,e),I=y.concat(x)}else null!=r.validationSteps&&(S=!0);const ins=o.concat(c).concat(v);e.checkTrainableWeightsConsistency();const N=e.makeTrainFunction(),T=e.getDedupedMetricsNames();let C,A;S?(e.makeTestFunction(),C=e.testFunction,A=T.slice().concat(T.map((e=>"val_"+e)))):(C=null,I=[],A=T.slice());const j=$i(r.callbacks,r.yieldEvery),$=await async function(e,t,ins,n,r,o,c,d,h,f,m,y,x,v,w){null==r&&(r=32),null==o&&(o=1),null==m&&(m=!0),null==x&&(x=0);let O=!1;if(null!=h&&null!=f&&(O=!0),null!=w&&(O=!0,null==v))throw new ca("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const k=e.checkNumSamples(ins,r,v,"steps_per_epoch");let I;null!=k&&(I=es(0,k)),null==c&&(c=1);const{callbackList:S,history:N}=Ri(d,c,o,x,k,v,r,O,y);S.setModel(e),e.history=N,await S.onTrainBegin(),e.stopTraining_=!1;for(let c=x;c<o;++c){await S.onEpochBegin(c);const o={};if(null!=v)throw new la("stepsPerEpoch mode is not implemented yet.");{if("batch"===m)throw new la("batch shuffling is not implemneted yet");m&&l.Af.shuffle(I);const c=Object(l.qf)(I),d=To(k,r);for(let m=0;m<d.length;++m){const y={};if(await S.onBatchBegin(m,y),l.tf((()=>{const x=d[m][0],v=d[m][1],w=ss(c,x,v-x);y.batch=m,y.size=v-x;const k=No(ins,w),I=t(k);for(let i=0;i<n.length;++i){const label=n[i],e=I[i];y[label]=e,l.le(e)}if(m===d.length-1&&O){const t=e.testLoop(h,f,r);for(let i=0;i<n.length;++i){const label=n[i],e=t[i];l.le(e),o["val_"+label]=e}}})),await S.onBatchEnd(m,y),Ii(y),e.stopTraining_)break}c.dispose()}if(await S.onEpochEnd(c,o),e.stopTraining_)break}return await S.onTrainEnd(),await e.history.syncData(),e.history}(e,N,ins,T,w,r.epochs,r.verbose,j,C,I,r.shuffle,A,r.initialEpoch,null,null);return $}finally{e.isTraining=!1,jo(o,t),jo(c,n),jo(d,t),jo(h,n),jo(y,f),jo(x,m),null!=v&&l.Td(v)}}function Ao(e){const t=[];e instanceof l.ed&&(e=[e]);for(let i=0;i<e.length;++i){const n=e[i];if(1===n.rank)t.push(as(n,1));else{if(0===n.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function jo(e,t){if(null==e)return;const n=[];if(t instanceof l.ed)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof l.ed)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const o=e[t];-1===n.indexOf(o.id)&&r.push(o)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function $o(e){return Array.isArray(e)}function Eo(e){return!function(e){return e instanceof l.ed}(e)&&!$o(e)}function Ro(data,e,t,n=!0,r=""){if(null==e||0===e.length){if(null!=data){let e=!1;if($o(data)&&data.length>0)e=!0;else if(Eo(data)){for(const t in data)if(data.hasOwnProperty(t)){e=!0;break}}else e=!0;if(e)throw new ca(`Error when checking model ${r} expected no data, but got ${data}`)}return[]}if(null==data)return e.map((e=>null));let o;if(Eo(data)){o=[];for(const t of e){if(null==data[t])throw new ca(`No data provided for "${t}". Need data for each key in: ${e}`);o.push(data[t])}}else if($o(data)){if(data.length!==e.length)throw new ca(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${data}`);o=data}else{if(e.length>1)throw new ca(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${data.shape}`);o=[data]}if(o=Ao(o),null!=t)for(let i=0;i<e.length;++i){if(null==t[i])continue;const c=o[i];if(c.shape.length!==t[i].length)throw new ca(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${c.shape}`);for(let e=0;e<t[i].length;++e){if(0===e&&!n)continue;const o=c.shape[e],l=t[i][e];if(null!=l&&l>=0&&o!==l)throw new ca(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${c.shape[0]} examples, each with shape [${c.shape.slice(1,c.shape.length)}] (tensor shape [${c.shape}])`)}}return o}function Fo(data,e,t,n=!0,r=""){let o;if(Array.isArray(data)){if(data.length!==e.length)throw new ca(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${data.length} Tensors(s).`);o=data}else{if(e.length>1)throw new ca(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(data.shape)}.`);o=[data]}if(null!=t)for(let i=0;i<e.length;++i){if(null==t[i])continue;const c=o[i];if(c.shape.length!==t[i].length)throw new ca(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let o=0;o<t[i].length;++o){if(0===o&&!n)continue;const l=c.shape[o],d=t[i][o];if(null!=d&&d!==l)throw new ca(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}class Do extends mo{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ca("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");oo(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>l.vf.adagrad(.01),Adadelta:()=>l.vf.adadelta(1,.95,ns()),Adam:()=>l.vf.adam(.001,.9,.999,ns()),Adamax:()=>l.vf.adamax(.002,.9,.999,ns(),0),RMSProp:()=>l.vf.rmsprop(.001,.9,0,ns()),SGD:()=>l.vf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ca(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof l.fc))throw new ca("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ca(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Hi(e)))}else{const n=Hi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ca(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Hi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ha("loss",(()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;const e=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([e,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),o=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ha("metric",(()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;(e=>{let t,n,r;for(const c of e){if("string"==typeof c&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(c)){const e=this.internalOutputShapes[i];let o;1===e[e.length-1]||this.lossFunctions[i]===Wi?-1!==["accuracy","acc"].indexOf(c)?n=qi:-1!==["crossentropy","ce"].indexOf(c)&&(n=Zi):this.lossFunctions[i]===Bi?-1!==["accuracy","acc"].indexOf(c)?n=Ji:-1!==["crossentropy","ce"].indexOf(c)&&(n=eo):-1!==["accuracy","acc"].indexOf(c)?n=Ki:-1!==["crossentropy","ce"].indexOf(c)&&(n=Qi),-1!==["accuracy","acc"].indexOf(c)?o="acc":-1!==["crossentropy","ce"].indexOf(c)&&(o="ce"),r=n,t=""+o}else{const e=no(c);r=e,t=""+ro(c)}let e;Ha(t,(()=>{e=r})),o(i,t,e)}})(r[i])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Io(r);const o=this.standardizeUserDataXY(e,t,!0,r);try{const ins=o[0].concat(o[1]);this.makeTestFunction();const c=this.testFunction;return ba(this.testLoop(c,ins,r,n.verbose,n.steps))}finally{jo(o[0],e),jo(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,o=e.testFunction;let c=[];if(n.verbose>0)throw new la("Verbose mode is not implemented yet.");l.Af.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const d="function"==typeof t.next?t:await t.iterator();let h=0,f=0;for(;!r||f<n.batches;){const t=await d.next();if(c=l.tf((()=>{if(t.value){const{xs:n,ys:r}=vo(e,t.value),d=n.concat(r),m=l.tf((()=>o(d)));if(l.Td(d),0===f)for(let i=0;i<m.length;++i)c.push(Object(l.Te)(0));const y=d[0].shape[0];for(let i=0;i<m.length;++i){const e=m[i],t=c[i];c[i]=l.tf((()=>l.qd(c[i],l.Ce(y,e)))),f>0&&l.Td(t)}l.Td(m),h+=y,++f}return c})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let i=0;i<c.length;++i){const e=c[i];c[i]=l.Ud(c[i],h),l.Td(e)}return ba(c)}(this,e,t)}checkNumSamples(ins,e,t,n="steps"){let r;if(null!=t){if(r=null,null!=e)throw new ca(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==ins)throw new ca(`Either the input data should have a defined shape, or ${n} shoud be specified.`);r=Array.isArray(ins)?ins[0].shape[0]:ins.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ca("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],o=this.retrieveSymbolicTensors(r),c=new si;if(e instanceof l.ed&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ca(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)c.add(this.inputs[i],e[i])}else for(const input of this.inputs){const t=e[input.name];if(null==t)throw new ca(`No value is provided for the model's input ${input.name}`);c.add(input,t)}const d=ui(o,c);return n?d:d[0]}retrieveSymbolicTensors(e){const t=pa(null,e.length);let n=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],c=o.map((output=>output.name));for(let i=0;i<e.length;++i){const r=c.indexOf(e[i]);if(-1!==r&&(t[i]=o[r],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,i)=>{null==t&&n.push(e[i])})),new ca(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(ins,e=32,t=!1){return l.tf((()=>{const n=this.checkNumSamples(ins);if(t)throw new la("Verbose predictLoop() is not implemented yet.");const r=To(n,e),o=this.outputs.map((output=>[]));for(let e=0;e<r.length;++e){l.tf((()=>{const t=r[e][0],n=r[e][1],o=So(ins,t,n),c=[];if(Array.isArray(o))for(let i=0;i<o.length;++i)c.push({key:this.inputs[i],value:o[i]});else c.push({key:this.inputs[0],value:o});const l=new si(c);return ui(this.outputs,l)})).forEach(((e,i)=>o[i].push(e)))}return ba(o.map((e=>l.Hd(e,0))))}))}predict(e,t={}){const n=Ao(e);Fo(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Io(r),this.predictLoop(n,r)}finally{jo(n,e)}}predictOnBatch(e){Fo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ua("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i];this.feedLossFns[i]===Bi?o.push(e.slice(0,e.length-1).concat([1])):o.push(e)}if(function(e,t,n){const r=Sa(e.map((input=>input.shape[0])));r.sort();const o=Sa(t.map((e=>e.shape[0])));if(o.sort(),r.length>1)throw new ca(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((input=>input.shape)))}`);if(o.length>1)throw new ca(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&o.length>0&&!l.Af.arraysEqual(r,o))throw new ca(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${o[0]} target sample(s).`)}(e=Ro(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ro(t,this.feedOutputNames,o,!1,"target")),function(e,t,n){const r=[_i,Wi,Pi];for(let i=0;i<e.length;++i){const o=e[i],c=t[i],l=n[i];if(null!=c){if(c===Pi&&1===o.shape[o.shape.length-1])throw new ca(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(c)){const e=o.shape.slice(1),t=l.slice(1);for(let n=0;n<e.length;++n){const r=e[n],c=t[n];if(null!=c&&r!==c)throw new ca(`A target Tensor with shape ${o.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ca(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,o=!0,c){const[l,d]=this.standardizeUserDataXY(e,t,o,c);if(null!=n)throw new Error("sample weight is not supported yet.");let h=null;if(null!=r){const e=go(r,this.outputNames);h=[];for(let i=0;i<e.length;++i)h.push(await yo(d[i],null,e[i]))}return[l,d,h]}testLoop(e,ins,t,n=0,r){return l.tf((()=>{const o=this.checkNumSamples(ins,t,r,"steps"),c=[];if(n>0)throw new la("Verbose mode is not implemented yet.");if(null!=r)throw new la("steps mode in testLoop() is not implemented yet");{const n=To(o,t),r=Object(l.qf)(es(0,o));for(let t=0;t<n.length;++t){const o=n[t][0],d=n[t][1],h=ss(r,o,d-o),f=No(ins,h),m=e(f);if(0===t)for(let i=0;i<m.length;++i)c.push(Object(l.Te)(0));for(let i=0;i<m.length;++i){const e=m[i];c[i]=l.qd(c[i],l.Ce(d-o,e))}}for(let i=0;i<c.length;++i)c[i]=l.Ud(c[i],o)}return c}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let i=0;i<e.length;++i){const label=e[i];let n=label;if(ma(e,label)>1){n+=`_${ma(e.slice(0,i),label)}`}t.push(n)}return t}makeTrainFunction(){return data=>{const e=[],t=data.slice(0,this.inputs.length),n=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=data.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],c=this.collectedTrainableWeights.map((param=>param.read()));return[this.optimizer_.minimize((()=>{const c=[];for(let i=0;i<this.inputs.length;++i)c.push({key:this.inputs[i],value:t[i]});const d=new si(c),h=ui(this.outputs,d,{training:!0});let f;for(let i=0;i<this.lossFunctions.length;++i){let t=(0,this.lossFunctions[i])(n[i],h[i]);null!=r[i]&&(t=xo(t,r[i]));const o=l.ye(t);e.push(o),f=0===i?t:l.qd(f,t)}for(let i=0;i<this.metricsTensors.length;++i){let t;if(this.outputs.length>1&&i<this.outputs.length)t=e[i];else{const e=this.metricsTensors[i][0],r=this.metricsTensors[i][1];t=l.ye(e(n[r],h[r]))}l.le(t),o.push(t)}return f=l.ye(f),this.calculateLosses().forEach((e=>{f=l.qd(f,e)})),f}),!0,c)].concat(o)}}makeTestFunction(){this.testFunction=data=>l.tf((()=>{const e=[];let t;const n=data.slice(0,this.inputs.length),r=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let i=0;i<this.inputs.length;++i)o.push({key:this.inputs[i],value:n[i]});const c=new si(o),d=ui(this.outputs,c);for(let i=0;i<this.lossFunctions.length;++i){const n=this.lossFunctions[i],o=l.ye(n(r[i],d[i]));t=0===i?o:l.qd(t,o),e.push(t)}for(let i=0;i<this.metricsTensors.length;++i){const t=this.metricsTensors[i][0],n=this.metricsTensors[i][1],o=l.ye(t(r[n],d[n]));e.push(o)}return e}))}async fit(e,t,n={}){return Co(this,e,t,n)}async fitDataset(e,t){return Oo(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],o=n[1],c=this.makeTrainFunction()(r.concat(o)),d=[];for(const e of c){const t=await e.data();d.push(t[0])}return l.Td(c),jo(n[0],e),jo(n[1],t),ba(d)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,o=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=l.ze().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-l.ze().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ya(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ya(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ya(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ya(ro(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ya(ro(e))));{const e={};for(const t in this.metrics)e[t]=ya(ro(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Fi(po(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=xa(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>xa(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=xa(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>xa(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=xa(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=l.ke.getSaveHandlers(e);if(0===t.length)throw new ca(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ca(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ca("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await l.ke.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.18.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:o}=await l.ke.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...o),n.data=l.ke.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;so(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){so(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Do.className="Model",l.We.registerClass(Do);class _o extends Do{}async function Mo(e,t){if(null==t&&(t={}),"string"==typeof e){const n=l.ke.getLoadHandlers(e,t);if(0===n.length)n.push(l.ke.browserHTTPRequest(e,t));else if(n.length>1)throw new ca(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new ca("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let o=r.modelTopology;null!=o.model_config&&(o=o.model_config);const c=null==n.strict||n.strict,d=null!=r.weightData&&null!=r.weightSpecs&&c,h=Fi(po(o),t,d),f=r.trainingConfig;null!=f&&h.loadTrainingConfig(f);null!=r.userDefinedMetadata&&h.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new ca("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=l.ke.decodeWeights(e,t),r={},o=[];return t.forEach((e=>{"optimizer"===e.group?o.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:o}}(r.weightData,r.weightSpecs);h.loadWeights(e,c),null!=h.optimizer&&t.length>0&&await h.optimizer.setWeights(t),Object(l.Td)(e),Object(l.Td)(t.map((e=>e.tensor)))}return h}(e,void 0,t)}_o.className="Functional",l.We.registerClass(_o);class Lo extends Do{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Da("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ca(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Lo||e instanceof Do;let n;if(t){if(n=e,1!==n.outputs.length)throw new ca("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ca("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ca("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=ai({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ca(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ca("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ni(this.outputs[0])}this.inboundNodes=[],new Qs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Vs(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Do({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ua("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ua("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ua("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ua("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let o,c={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ca("Legacy serialization format not supported yet.");o=t}else l.Af.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),o=t.layers,delete t.layers,c=t;const d=new e(c);if(!(d instanceof Lo))throw new la(`Sequential.fromConfig called on non-Sequential input: ${d}`);for(const e of o){const t=Fi(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),d.add(t)}return d}set stopTraining(e){if(null==this.model)throw new ca("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ca("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function zo(e){return new Lo(e)}function Po(e,t){return null==t&&(t={}),Mo(e,t)}function Bo(e){return ai(e)}Lo.className="Sequential",l.We.registerClass(Lo);class Wo extends l.We.Serializable{getConfig(){return{}}}class Uo extends Wo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new la(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return l.Wd(e)}(e,t)}}Uo.className="elu",l.We.registerClass(Uo);class Vo extends Wo{apply(e){return l.Ue(e)}}Vo.className="selu",l.We.registerClass(Vo);class Go extends Wo{apply(e){return l.Qe(e)}}Go.className="relu",l.We.registerClass(Go);class Ho extends Wo{apply(e){return Object(l.tf)((()=>l.Ae(6,l.Qe(e))))}}Ho.className="relu6",l.We.registerClass(Ho);class qo extends Wo{apply(e){return e}}qo.className="linear",l.We.registerClass(qo);class Ko extends Wo{apply(e){return l.Ye(e)}}Ko.className="sigmoid",l.We.registerClass(Ko);class Yo extends Wo{apply(e){return function(e){return Object(l.tf)((()=>{const t=l.qd(.5,l.Ce(.2,e));return l.Fd(t,0,1)}))}(e)}}Yo.className="hardSigmoid",l.We.registerClass(Yo);class Xo extends Wo{apply(e){return l.gf(e)}}Xo.className="softplus",l.We.registerClass(Xo);class Zo extends Wo{apply(e){return function(e){return Object(l.tf)((()=>l.Ud(e,l.qd(l.pd(e),1))))}(e)}}Zo.className="softsign",l.We.registerClass(Zo);class Jo extends Wo{apply(e){return l.of(e)}}Jo.className="tanh",l.We.registerClass(Jo);class Qo extends Wo{apply(e,t=-1){return l.ff(e,t)}}Qo.className="softmax",l.We.registerClass(Qo);class eu extends Wo{apply(e,t=-1){return l.re(e,t)}}eu.className="logSoftmax",l.We.registerClass(eu);class tu extends Wo{apply(e,t=1){return Object(l.tf)((()=>l.Ce(l.Ye(l.Ce(e,t)),e)))}}tu.className="swish",l.We.registerClass(tu);class nu extends Wo{apply(e){return Object(l.tf)((()=>l.Ce(e,l.of(l.gf(e)))))}}function ru(e){return e.getClassName()}function au(e,t={}){return ka(e,l.We.SerializationMap.getMap().classNameMap,t,"activation")}function su(e){if(null==e){const e={className:"linear",config:{}};return au(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},au(t)}return e instanceof Wo?e:au(e)}function iu(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}nu.className="mish",l.We.registerClass(nu);class ou extends l.We.Serializable{}class uu extends ou{constructor(e){super(),iu(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(l.tf)((()=>{let t=Object(l.Ff)([1]);return this.hasL1&&(t=Object(l.qd)(t,Object(l.mf)(l.Ce(this.l1,Object(l.pd)(e))))),this.hasL2&&(t=Object(l.qd)(t,Object(l.mf)(l.Ce(this.l2,fs(e))))),l.Re(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}uu.className="L1L2",l.We.registerClass(uu);const cu={l1l2:"L1L2"};function lu(e){return wa(e)}function du(e,t={}){return ka(e,l.We.SerializationMap.getMap().classNameMap,t,"regularizer")}function hu(e){if(null==e)return null;if("string"==typeof e){return du({className:e in cu?cu[e]:e,config:{}})}return e instanceof ou?e:du(e)}class pu extends ti{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Us(e);let output=Object(l.Qe)(e);return null!=this.maxValue&&(output=Object(l.Fd)(output,0,this.maxValue)),output}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}pu.className="ReLU",l.We.registerClass(pu);class fu extends ti{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Us(e);return Object(l.ne)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}fu.className="LeakyReLU",l.We.registerClass(fu);class mu extends ti{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ps(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=hu(e.alphaRegularizer),this.alphaConstraint=Oi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ca(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Vs(e)).slice(1);if(null!=this.sharedAxes)for(const i of this.sharedAxes)t[i-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let i=1;i<e.length;++i)n[i]=e[i];this.inputSpec=[new Xs({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Us(e),Object(l.Le)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:zs(this.alphaInitializer),alphaRegularizer:lu(this.alphaRegularizer),alphaConstraint:vi(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}mu.className="PReLU",l.We.registerClass(mu);class bu extends ti{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new la(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Us(e);return Object(l.Wd)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bu.className="ELU",l.We.registerClass(bu);class gu extends ti{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Us(e);return Object(l.Ce)(n,Object(l.Ed)(Object(l.he)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}gu.className="ThresholdedReLU",l.We.registerClass(gu);class yu extends ti{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Qo).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Us(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function xu(e,t,n){if("number"==typeof e)return pa(e,t);if(e.length!==t)throw new ca(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let i=0;i<t;++i){const o=e[i];if((r=o)!==parseInt(r.toString(),10))throw new ca(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${o}`)}return e;var r}function vu(e,t,n,r,o=1){if(null==e)return e;let c;return c="same"===n?e:e-(t+(t-1)*(o-1))+1,Math.floor((c+r-1)/r)}function wu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Qa([n-t,0]);else{if("same"!==r)throw new ca(`Unsupport padding mode: ${r}.`);e*=t}return e}function Ou(e,t){return Object(l.tf)((()=>(Wa(t),"channelsFirst"===t?l.wf(e,[0,2,3,1]):e)))}function ku(e,t){return Object(l.tf)((()=>(Wa(t),"channelsFirst"===t?l.wf(e,[0,2,3,4,1]):e)))}function Iu(e,t,n,r=1,o="valid",c,d=1){return Object(l.tf)((()=>{if(null==c&&(c="channelsLast"),Wa(c),3!==e.shape.length)throw new ca(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ca(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ca(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===c&&(e=l.wf(e,[0,2,1])),"causal"===o)throw new la("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let h=l.Md(e,t,r,"same"===o?"same":"valid","NWC",d);return null!=n&&(h=bs(h,n)),h}))}function Su(e,t,n,r=[1,1],o="valid",c,d,h=null){return Object(l.tf)((()=>{if(null==c&&(c="channelsLast"),Wa(c),3!==e.rank&&4!==e.rank)throw new ca(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ca(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let f=Ou(e,c);if("causal"===o)throw new la("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return f=l.fe.conv2d({x:f,filter:t,strides:r,pad:"same"===o?"same":"valid",dilations:d,dataFormat:"NHWC",bias:n,activation:h}),"channelsFirst"===c&&(f=l.wf(f,[0,3,1,2])),f}))}function Nu(e,t,n,r=[1,1,1],o="valid",c,d){return Object(l.tf)((()=>{if(null==c&&(c="channelsLast"),Wa(c),4!==e.rank&&5!==e.rank)throw new ca(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ca(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let h=ku(e,c);if("causal"===o)throw new la("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return h=l.Pd(h,t,r,"same"===o?"same":"valid","NDHWC",d),null!=n&&(h=bs(h,n)),"channelsFirst"===c&&(h=l.wf(h,[0,4,1,2,3])),h}))}yu.className="Softmax",l.We.registerClass(yu);class Tu extends ti{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Tu.verifyArgs(t),this.rank=e,Aa(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new la(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xu(t.kernelSize,e,"kernelSize"),this.strides=xu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ua(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wa(this.dataFormat),this.activation=su(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ps(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Oi(t.biasConstraint),this.biasRegularizer=hu(t.biasRegularizer),this.activityRegularizer=hu(t.activityRegularizer),this.dilationRate=xu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ca(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ca(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ca(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(fa("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ca(e.kernelSize,"number",1,3))throw new ca(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ru(this.activation),useBias:this.useBias,biasInitializer:zs(this.biasInitializer),biasRegularizer:lu(this.biasRegularizer),activityRegularizer:lu(this.activityRegularizer),biasConstraint:vi(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cu extends Tu{constructor(e,t){super(e,t),this.kernel=null,Cu.verifyArgs(t),this.filters=t.filters,Aa(this.filters,"filters"),this.kernelInitializer=Ps(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Oi(t.kernelConstraint),this.kernelRegularizer=hu(t.kernelRegularizer)}build(e){e=Vs(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ca(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(l.tf)((()=>{let t;e=Us(e);const n=null==this.bias?null:this.bias.read(),r=$a(this.activation.getClassName());if(null!=r&&2===this.rank)t=Su(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=Iu(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Su(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new la("convolutions greater than 3D are not implemented yet.");t=Nu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Vs(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<n.length;++i){const e=vu(n[i],this.kernelSize[i],this.padding,this.strides[i],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[i]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:zs(this.kernelInitializer),kernelRegularizer:lu(this.kernelRegularizer),kernelConstraint:vi(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ca(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Au extends Cu{constructor(e){super(2,e),Au.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ca(e.kernelSize,"number",1,2))throw new ca(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Au.className="Conv2D",l.We.registerClass(Au);class ju extends Cu{constructor(e){super(3,e),ju.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ca(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ju.className="Conv3D",l.We.registerClass(ju);class $u extends Au{constructor(e){if(super(e),this.inputSpec=[new Xs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ca(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Vs(e)).length)throw new ca("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ca("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xs({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return l.tf((()=>{let input=Us(e);if(4!==input.shape.length)throw new ca(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${input.shape.length}`);const t=input.shape,n=t[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const c=t[r],d=t[o],h=this.kernelSize[0],f=this.kernelSize[1],m=this.strides[0],y=this.strides[1],x=[n,wu(c,m,h,this.padding),wu(d,y,f,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=l.wf(input,[0,2,3,1]));let v=l.Od(input,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=l.wf(v,[0,3,1,2])),null!=this.bias&&(v=bs(v,this.bias.read(),this.dataFormat)),null!=this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){const t=(e=Vs(e)).slice();let n,r,o;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3):(n=3,r=1,o=2);const c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1];return t[n]=this.filters,t[r]=wu(t[r],d,c,this.padding),t[o]=wu(t[o],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}$u.className="Conv2DTranspose",l.We.registerClass($u);class Eu extends ju{constructor(e){if(super(e),this.inputSpec=[new Xs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ca(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Vs(e)).length)throw new ca("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ca("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xs({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return l.tf((()=>{let input=Us(e);if(5!==input.shape.length)throw new ca(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${input.shape.length}`);const t=input.shape,n=t[0];let r,o,c;"channelsFirst"===this.dataFormat?(c=2,r=3,o=4):(c=1,r=2,o=3);const d=t[c],h=t[r],f=t[o],m=this.kernelSize[0],y=this.kernelSize[1],x=this.kernelSize[2],v=this.strides[0],w=this.strides[1],O=this.strides[2],k=[n,wu(d,v,m,this.padding),wu(h,w,y,this.padding),wu(f,O,x,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=l.wf(input,[0,2,3,4,1]));let I=l.Qd(input,this.kernel.read(),k,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(I=l.wf(I,[0,4,1,2,3])),null!==this.bias&&(I=bs(I,this.bias.read(),this.dataFormat)),null!==this.activation&&(I=this.activation.apply(I)),I}))}computeOutputShape(e){const t=(e=Vs(e)).slice();let n,r,o,c;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3,c=4):(n=4,r=1,o=2,c=3);const l=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],y=this.strides[2];return t[n]=this.filters,t[r]=wu(t[r],f,l,this.padding),t[o]=wu(t[o],m,d,this.padding),t[c]=wu(t[c],y,h,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Eu.className="Conv3DTranspose",l.We.registerClass(Eu);class Ru extends Cu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ca("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ca("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ca(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ps(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=hu(t.depthwiseRegularizer),this.depthwiseConstraint=Oi(t.depthwiseConstraint),this.pointwiseInitializer=Ps(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=hu(t.pointwiseRegularizer),this.pointwiseConstraint=Oi(t.pointwiseConstraint)}build(e){if((e=Vs(e)).length<this.rank+2)throw new ca(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ca(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(n*this.depthMultiplier,this.filters);const c=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,c,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,c,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,c,this.biasConstraint):this.bias=null,this.inputSpec=[new Xs({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(l.tf)((()=>{let output;if(e=Us(e),1===this.rank)throw new la("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=l.wf(e,[0,2,3,1])),output=l.Ve(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(output=bs(output,this.bias.read(),this.dataFormat)),null!=this.activation&&(output=this.activation.apply(output)),"channelsFirst"===this.dataFormat&&(output=l.wf(output,[0,3,1,2])),output}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=zs(this.depthwiseInitializer),e.pointwiseInitializer=zs(this.pointwiseInitializer),e.depthwiseRegularizer=lu(this.depthwiseRegularizer),e.pointwiseRegularizer=lu(this.pointwiseRegularizer),e.depthwiseConstraint=vi(this.depthwiseConstraint),e.pointwiseConstraint=vi(this.pointwiseConstraint),e}}Ru.className="SeparableConv";class Fu extends Ru{constructor(e){super(2,e)}}Fu.className="SeparableConv2D",l.We.registerClass(Fu);class Du extends Cu{constructor(e){super(1,e),Du.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ca(e.kernelSize,"number",1,1))throw new ca(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Du.className="Conv1D",l.We.registerClass(Du);class _u extends ti{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(l.tf)((()=>{if(e=Us(e),"channelsLast"===this.dataFormat){const t=os(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return os(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=os(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return os(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}_u.className="Cropping2D",l.We.registerClass(_u);class Mu extends ti{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Ta(Ma,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return l.tf((()=>{let input=Us(e);const t=input.shape;if("channelsFirst"===this.dataFormat){input=l.wf(input,[0,2,3,1]);const e=this.size[0]*t[2],n=this.size[1]*t[3],r="nearest"===this.interpolation?l.je.resizeNearestNeighbor(input,[e,n]):l.je.resizeBilinear(input,[e,n]);return l.wf(r,[0,3,1,2])}{const e=this.size[0]*t[1],n=this.size[1]*t[2];return"nearest"===this.interpolation?l.je.resizeNearestNeighbor(input,[e,n]):l.je.resizeBilinear(input,[e,n])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Mu.className="UpSampling2D",l.We.registerClass(Mu);class Lu extends Tu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ps(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Oi(e.depthwiseConstraint),this.depthwiseRegularizer=hu(e.depthwiseRegularizer)}build(e){if((e=Vs(e)).length<4)throw new ca(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ca(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(l.tf)((()=>{let t=function(e,t,n=[1,1],r="valid",o,c){return Object(l.tf)((()=>{null==o&&(o="channelsLast"),Wa(o);let d=Ou(e,o);if(4!==e.rank)throw new ca(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ca(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return d=l.Rd(d,t,n,"same"===r?"same":"valid","NHWC",c),"channelsFirst"===o&&(d=l.wf(d,[0,3,1,2])),d}))}(e=Us(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=bs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Vs(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=vu(t,this.kernelSize[0],this.padding,this.strides[0]),c=vu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,o,c]:[e[0],o,c,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=zs(this.depthwiseInitializer),e.depthwiseRegularizer=lu(this.depthwiseRegularizer),e.depthwiseConstraint=vi(this.depthwiseRegularizer),e}}function zu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ca("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function o(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=o(t),constants:n=o(n)}}function Pu(e,t,n,r=!1,mask,o,c=!1,d=!1){return l.tf((()=>{const h=t.shape.length;if(h<3)throw new ca(`Input should be at least 3D, but is ${h}D.`);const f=[1,0].concat(es(2,h));if(t=l.wf(t,f),null!=o)throw new la("The rnn() functoin of the deeplearn.js backend does not support constants yet.");c&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=mask&&((mask=l.Ed(l.Ed(mask,"bool"),"float32")).rank===h-1&&(mask=l.be(mask,-1)),mask=l.wf(mask,f)),r&&(t=l.Se(t,0),null!=mask&&(mask=l.Se(mask,0)));const m=[];let y,x=n;const v=t.shape[0],w=l.yf(t);let O,k;null!=mask&&(O=l.yf(mask));for(let t=0;t<v;++t){const n=w[t],r=l.tf((()=>e(n,x)));if(null==mask)y=r[0],x=r[1];else{const e=l.tf((()=>{const e=O[t],n=l.lf(l.Ie(e),e);return{output:l.qd(l.Ce(r[0],e),l.Ce(x[0],n)),newStates:x.map(((t,i)=>l.qd(l.Ce(r[1][i],e),l.Ce(t,n))))}}));y=e.output,x=e.newStates}d&&m.push(y)}if(d){const e=1;k=l.kf(m,e)}return[y,k,x]}))}Lu.className="DepthwiseConv2D",l.We.registerClass(Lu);class Bu extends ti{constructor(e){let t;if(super(e),null==e.cell)throw new ca("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Yu({cells:e.cell}):e.cell,null==t.stateSize)throw new ca("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Xs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return es(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Bs(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,mask){return l.tf((()=>{Array.isArray(mask)&&(mask=mask[0]);const e=this.returnSequences?mask:null;if(this.returnState){const t=this.states.map((s=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,output=[];for(let i=0;i<e;++i)output.push(null);return output}return this.states_}set states(s){this.states_=s}build(e){if(null!=this.numConstants)throw new la("Constants support is not implemented in RNN yet.");Bs(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Xs({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let o;if(this.cell.build(r),o=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!l.Af.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),o))throw new ca(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map((e=>new Xs({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(l.tf)((()=>{if(!this.stateful)throw new oa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ca("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>l.Ff([n,e]))):this.states_=[l.Ff([n,this.cell.stateSize])];else if(null==e)l.Td(this.states_),null!=this.keptStates&&(l.Td(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>l.Ff([n,e]))):this.states_[0]=l.Ff([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ca(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):l.Td(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,c=[n,o];if(!l.Af.arraysEqual(r.shape,c))throw new ca(`State ${t} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>l.le(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const o=zu(e,n,r,this.numConstants);e=o.inputs,n=o.initialState,r=o.constants;let c=[],l=[];if(null!=n){t.initialState=n,c=c.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Xs({shape:e.shape}));l=l.concat(this.stateSpec)}null!=r&&(t.constants=r,c=c.concat(r),this.numConstants=r.length);if(c[0]instanceof Zs){const n=[e].concat(c),r=this.inputSpec.concat(l),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,t);return this.inputSpec=o,output}return super.apply(e,t)}call(e,t){return Object(l.tf)((()=>{const mask=null==t?null:t.mask,n=null==t?null:t.training;let r=null==t?null:t.initialState;e=Us(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new ca(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:n},l=Pu(((e,t)=>{const n=this.cell.call([e].concat(t),c);return[n[0],n.slice(1)]}),e,r,this.goBackwards,mask,null,this.unroll,this.returnSequences),d=l[0],h=l[1],f=l[2];this.stateful&&this.resetStates(f,n);const output=this.returnSequences?h:d;return this.returnState?[output].concat(f):output}))}getInitialState(e){return Object(l.tf)((()=>{let t=l.Ff(e.shape);return t=l.mf(t,[1,2]),t=as(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ls(t,[1,e]):t)):this.cell.stateSize>1?[ls(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Bu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Fi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Bu.className="RNN",l.We.registerClass(Bu);class Wu extends ti{}class Uu extends Wu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Aa(this.units,"units"),this.activation=su(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ps(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ps(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ps(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hu(e.kernelRegularizer),this.recurrentRegularizer=hu(e.recurrentRegularizer),this.biasRegularizer=hu(e.biasRegularizer),this.kernelConstraint=Oi(e.kernelConstraint),this.recurrentConstraint=Oi(e.recurrentConstraint),this.biasConstraint=Oi(e.biasConstraint),this.dropout=Ja([1,Qa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ja([1,Qa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Vs(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(l.tf)((()=>{if(2!==e.length)throw new ca(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>l.Ie(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>l.Ie(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,d=this.recurrentDropoutMask;o=hs(null!=c?l.Ce(e,c):e,this.kernel.read()),null!=this.bias&&(o=bs(o,this.bias.read())),null!=d&&(n=l.Ce(n,d));let output=l.qd(o,hs(n,this.recurrentKernel.read()));return null!=this.activation&&(output=this.activation.apply(output)),[output,output]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ru(this.activation),useBias:this.useBias,kernelInitializer:zs(this.kernelInitializer),recurrentInitializer:zs(this.recurrentInitializer),biasInitializer:zs(this.biasInitializer),kernelRegularizer:lu(this.kernelRegularizer),recurrentRegularizer:lu(this.recurrentRegularizer),biasRegularizer:lu(this.biasRegularizer),activityRegularizer:lu(this.activityRegularizer),kernelConstraint:vi(this.kernelConstraint),recurrentConstraint:vi(this.recurrentConstraint),biasConstraint:vi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Uu.className="SimpleRNNCell",l.We.registerClass(Uu);class Vu extends Bu{constructor(e){e.cell=new Uu(e),super(e)}call(e,t){return Object(l.tf)((()=>{null!=this.cell.dropoutMask&&(l.Td(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.Td(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Vu.className="SimpleRNN",l.We.registerClass(Vu);class Gu extends Wu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ca("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Aa(this.units,"units"),this.activation=su(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=su(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ps(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ps(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ps(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hu(e.kernelRegularizer),this.recurrentRegularizer=hu(e.recurrentRegularizer),this.biasRegularizer=hu(e.biasRegularizer),this.kernelConstraint=Oi(e.kernelConstraint),this.recurrentConstraint=Oi(e.recurrentConstraint),this.biasConstraint=Oi(e.biasConstraint),this.dropout=Ja([1,Qa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ja([1,Qa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Vs(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(l.tf)((()=>{if(2!==e.length)throw new ca(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>l.Ie(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>l.Ie(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,c=this.recurrentDropoutMask;let d,h,f;0<this.dropout&&this.dropout<1&&(e=l.Ce(e,o[0]));let m=hs(e,this.kernel.read());this.useBias&&(m=bs(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=l.Ce(r,c[0]));const y=this.recurrentKernel.read(),[x,v]=l.hf(y,[2*this.units,this.units],y.rank-1),w=hs(r,x),[O,k,I]=l.hf(m,3,m.rank-1),[S,N]=l.hf(w,2,w.rank-1);d=this.recurrentActivation.apply(l.qd(O,S)),h=this.recurrentActivation.apply(l.qd(k,N));const T=hs(l.Ce(h,r),v);f=this.activation.apply(l.qd(I,T));const C=l.qd(l.Ce(d,r),l.Ce(l.qd(1,l.De(d)),f));return[C,C]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ru(this.activation),recurrentActivation:ru(this.recurrentActivation),useBias:this.useBias,kernelInitializer:zs(this.kernelInitializer),recurrentInitializer:zs(this.recurrentInitializer),biasInitializer:zs(this.biasInitializer),kernelRegularizer:lu(this.kernelRegularizer),recurrentRegularizer:lu(this.recurrentRegularizer),biasRegularizer:lu(this.biasRegularizer),activityRegularizer:lu(this.activityRegularizer),kernelConstraint:vi(this.kernelConstraint),recurrentConstraint:vi(this.recurrentConstraint),biasConstraint:vi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Gu.className="GRUCell",l.We.registerClass(Gu);class Hu extends Bu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Gu(e),super(e)}call(e,t){return Object(l.tf)((()=>{null!=this.cell.dropoutMask&&(l.Td(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.Td(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Hu.className="GRU",l.We.registerClass(Hu);class qu extends Wu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Aa(this.units,"units"),this.activation=su(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=su(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ps(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ps(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ps(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=hu(e.kernelRegularizer),this.recurrentRegularizer=hu(e.recurrentRegularizer),this.biasRegularizer=hu(e.biasRegularizer),this.kernelConstraint=Oi(e.kernelConstraint),this.recurrentConstraint=Oi(e.recurrentConstraint),this.biasConstraint=Oi(e.biasConstraint),this.dropout=Ja([1,Qa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ja([1,Qa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Vs(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ws{apply(t,r){const o=e.apply([n]),c=(new ks).apply([n]),l=e.apply([2*n]);return cs(cs(o,c),l)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(l.tf)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new ca(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>l.Ie(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>l.Ie(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,d=this.recurrentDropoutMask;let i,h,f,m;0<this.dropout&&this.dropout<1&&(e=l.Ce(e,c[0]));let y=hs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=l.Ce(r,d[0])),y=l.qd(y,hs(r,this.recurrentKernel.read())),this.useBias&&(y=bs(y,this.bias.read()));const[x,v,w,O]=l.hf(y,4,y.rank-1);i=this.recurrentActivation.apply(x),h=this.recurrentActivation.apply(v),f=l.qd(l.Ce(h,o),l.Ce(i,this.activation.apply(w))),m=this.recurrentActivation.apply(O);const k=l.Ce(m,this.activation.apply(f));return[k,k,f]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ru(this.activation),recurrentActivation:ru(this.recurrentActivation),useBias:this.useBias,kernelInitializer:zs(this.kernelInitializer),recurrentInitializer:zs(this.recurrentInitializer),biasInitializer:zs(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lu(this.kernelRegularizer),recurrentRegularizer:lu(this.recurrentRegularizer),biasRegularizer:lu(this.biasRegularizer),activityRegularizer:lu(this.activityRegularizer),kernelConstraint:vi(this.kernelConstraint),recurrentConstraint:vi(this.recurrentConstraint),biasConstraint:vi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}qu.className="LSTMCell",l.We.registerClass(qu);class Ku extends Bu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qu(e),super(e)}call(e,t){return Object(l.tf)((()=>{null!=this.cell.dropoutMask&&(l.Td(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.Td(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ku.className="LSTM",l.We.registerClass(Ku);class Yu extends Wu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(l.tf)((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const o=[];let c;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];n=r[i],c=0===i?[e[0]].concat(n):[c[0]].concat(n),c=l.call(c,t),o.push(c.slice(1))}n=[];for(const e of o.slice().reverse())n.push(...e);return[c[0]].concat(n)}))}build(e){let t;Bs(e)&&(e=e[0]),this.cells.forEach(((n,i)=>{Ha(`RNNCell_${i}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Fi(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ks(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,o=e.splice(r);for(let i=0;i<n.weights.length;++i)t.push([n.weights[i],o[i]])}Ys(t)}}function Xu(e){const{ones:t,rate:n,training:r=!1,count:o=1,dropoutFunc:c}=e,d=()=>null!=c?c(t(),n):gs(t(),n),h=()=>ys(d,t,r);if(!o||o<=1)return l.le(h().clone());return Array(o).fill(void 0).map(h).map((e=>l.le(e.clone())))}Yu.className="StackedRNNCells",l.We.registerClass(Yu);var Zu=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};class Ju extends Bu{constructor(e){if(e.unroll)throw new la("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new la("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Xs({ndim:5})]}call(e,t){return l.tf((()=>{if(null!=this.cell.dropoutMask&&(l.Td(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.Td(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ca("ConvRNN2D cell does not support constants");const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return l.tf((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),o=[r[0],...r.slice(2)],c=l.Ff(o);return Array.isArray(t)?Array(t.length).fill(c):[c]}))}resetStates(e,t=!1){l.tf((()=>{if(!this.stateful)throw new oa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),o=[r[0],...r.slice(2)];if(null==n[0])throw new ca("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>l.Ff(o))):this.states_=[l.Ff(o)];else if(null==e)l.Td(this.states_),null!=this.keptStates&&(l.Td(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>l.Ff(o))):this.states_[0]=l.Ff(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ca(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):l.Td(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=o;if(!l.Af.arraysEqual(n.shape,r))throw new ca(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>l.le(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:o,strides:c,dilationRate:l}=this.cell,d="channelsFirst"===t,h=e[d?3:2],f=e[d?4:3],m=vu(h,r[0],o,c[0],l[0]),y=vu(f,r[1],o,c[1],l[1]);return[...e.slice(0,2),...d?[n,m,y]:[m,y,n]]}}Ju.className="ConvRNN2D";class Qu extends qu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:o,dataFormat:c,dilationRate:l}=e;super(Object.assign({},e,{units:t})),this.filters=t,Aa(this.filters,"filters"),this.kernelSize=xu(n,2,"kernelSize"),this.kernelSize.forEach((e=>Aa(e,"kernelSize"))),this.strides=xu(r||1,2,"strides"),this.strides.forEach((e=>Aa(e,"strides"))),this.padding=o||"valid",Ua(this.padding),this.dataFormat=c||"channelsLast",Wa(this.dataFormat),this.dilationRate=xu(l||1,2,"dilationRate"),this.dilationRate.forEach((e=>Aa(e,"dilationRate")))}build(e){var t;e=Vs(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ca(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],o=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const c=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",c,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ws{apply(e,t){return us([n.apply([r]),l.He([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return l.tf((()=>{if(3!==e.length)throw new ca(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],o=e[1],c=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>l.Ie(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.dropoutMask,h=(e,mask,t)=>mask&&mask[t]?l.Ce(mask[t],e):e;let f=h(r,d,0),m=h(r,d,1),y=h(r,d,2),x=h(r,d,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>l.Ie(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const v=this.recurrentDropoutMask;let w=h(o,v,0),O=h(o,v,1),k=h(o,v,2),I=h(o,v,3);const[S,N,T,C]=l.hf(this.kernel.read(),4,3),[A,j,$,E]=this.useBias?l.hf(this.bias.read(),4):[null,null,null,null];f=this.inputConv(f,S,A,this.padding),m=this.inputConv(m,N,j,this.padding),y=this.inputConv(y,T,$,this.padding),x=this.inputConv(x,C,E,this.padding);const[R,F,D,_]=l.hf(this.recurrentKernel.read(),4,3);w=this.recurrentConv(w,R),O=this.recurrentConv(O,F),k=this.recurrentConv(k,D),I=this.recurrentConv(I,_);const i=this.recurrentActivation.apply(l.qd(f,w)),M=this.recurrentActivation.apply(l.qd(m,O)),L=l.qd(l.Ce(M,c),l.Ce(i,this.activation.apply(l.qd(y,k)))),z=l.Ce(this.recurrentActivation.apply(l.qd(x,I)),this.activation.apply(L));return[z,z,L]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Zu(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,b,n){const r=l.Nd(e,t,this.strides,n||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return b?bs(r,b,this.dataFormat):r}recurrentConv(e,t){return l.Nd(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Qu.className="ConvLSTM2DCell",l.We.registerClass(Qu);class ec extends Ju{constructor(e){const t=new Qu(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ec.className="ConvLSTM2D",l.We.registerClass(ec);class tc extends ti{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(input){if(null==this.noiseShape)return this.noiseShape;const e=input.shape,t=[];for(let i=0;i<this.noiseShape.length;++i)t.push(null==this.noiseShape[i]?e[i]:this.noiseShape[i]);return t}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,n=this.getNoiseShape(input);return ys((()=>gs(input,this.rate,n,this.seed)),(()=>input),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}tc.className="Dropout",l.We.registerClass(tc);class nc extends tc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(input){const e=input.shape;return[e[0],1,e[2]]}}nc.className="SpatialDropout1D",l.We.registerClass(nc);class rc extends ti{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Aa(this.units,"units"),this.activation=su(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ps(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ps(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Oi(e.kernelConstraint),this.biasConstraint=Oi(e.biasConstraint),this.kernelRegularizer=hu(e.kernelRegularizer),this.biasRegularizer=hu(e.biasRegularizer),this.activityRegularizer=hu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Vs(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Vs(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e),n=$a(this.activation.getClassName());let output;return null!=n?output=hs(input,this.kernel.read(),n,this.bias?this.bias.read():null):(output=hs(input,this.kernel.read()),null!=this.bias&&(output=bs(output,this.bias.read())),null!=this.activation&&(output=this.activation.apply(output))),output}))}getConfig(){const e={units:this.units,activation:ru(this.activation),useBias:this.useBias,kernelInitializer:zs(this.kernelInitializer),biasInitializer:zs(this.biasInitializer),kernelRegularizer:lu(this.kernelRegularizer),biasRegularizer:lu(this.biasRegularizer),activityRegularizer:lu(this.activityRegularizer),kernelConstraint:vi(this.kernelConstraint),biasConstraint:vi(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rc.className="Dense",l.We.registerClass(rc);class ac extends ti{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Vs(e);for(const t of e.slice(1))if(null==t)throw new ca(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Za(e,1)]}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);let input=Us(e);if("channelsFirst"===this.dataFormat&&input.rank>1){const e=[0];for(let i=2;i<input.rank;++i)e.push(i);e.push(1),input=Object(l.wf)(input,e)}return function(e){if(e.rank<=1)throw new ca(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Za(e.shape,1)];return l.Re(e,t)}(input)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ac.className="Flatten",l.We.registerClass(ac);class sc extends ti{constructor(e){super(e),this.supportsMasking=!0,this.activation=su(e.activation)}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e);return this.activation.apply(input)}))}getConfig(){const e={activation:ru(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}sc.className="Activation",l.We.registerClass(sc);class ic extends ti{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(l.tf)((()=>{return e=Us(e),t=e,n=this.n,Object(l.tf)((()=>{if(2!==t.shape.length)throw new ca(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ls(as(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ic.className="RepeatVector",l.We.registerClass(ic);class oc extends ti{constructor(e){super(e),this.targetShape=e.targetShape;for(let i=0;i<this.targetShape.length;++i)this.isUnknown(this.targetShape[i])&&(this.targetShape[i]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let o=1,c=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==c)throw new ca("Can only specifiy one unknown dimension.");c=i}else o*=e}const l=Za(e);if(null!==c){if(0===o||l%o!=0)throw new ca(n);r[c]=l/o}else if(l!==o)throw new ca(n);return r}computeOutputShape(e){let t=!1;for(let i=0;i<e.length;++i)if(this.isUnknown(e[i])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e),n=input.shape,r=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return Object(l.Re)(input,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}oc.className="Reshape",l.We.registerClass(oc);class uc extends ti{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=es(1,e.dims.length+1);if(!l.Af.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Xs({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Vs(e)).slice();return this.dims.forEach(((n,i)=>{t[i+1]=e[n]})),t}call(e,t){return Object(l.wf)(Us(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}uc.className="Permute",l.We.registerClass(uc);class cc extends ti{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,mask){const input=Us(e);return Object(l.sd)(Object(l.Fe)(input,this.maskValue),-1)}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e),n=Object(l.sd)(Object(l.Fe)(input,this.maskValue),-1,!0);return Object(l.Ce)(input,Object(l.Ed)(n,input.dtype))}))}}cc.className="Masking",l.We.registerClass(cc);class lc extends ti{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ga(e.inputLength))}this.inputDim=e.inputDim,Aa(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Aa(this.outputDim,"outputDim"),this.embeddingsInitializer=Ps(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=hu(e.embeddingsRegularizer),this.activityRegularizer=hu(e.activityRegularizer),this.embeddingsConstraint=Oi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,mask){return Object(l.tf)((()=>this.maskZero?(e=Us(e),Object(l.Fe)(e,Object(l.Gf)(e))):null))}computeOutputShape(e){if(e=Vs(e),null==this.inputLength)return[...e,this.outputDim];const t=ga(this.inputLength);if(t.length!==e.length-1)throw new ca(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let i=0;for(let n=0;n<t.length;++n){const r=t[n],o=e[n+1];if(null!=r&&null!=o&&r!==o)throw new ca(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[i]=o),i++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);let input=Us(e);"int32"!==input.dtype&&(input=rs(input,"int32"));const output=ps(this.embeddings.read(),Object(l.Re)(input,[input.size]));return Object(l.Re)(output,Vs(this.computeOutputShape(input.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:zs(this.embeddingsInitializer),embeddingsRegularizer:lu(this.embeddingsRegularizer),activityRegularizer:lu(this.activityRegularizer),embeddingsConstraint:vi(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}lc.className="Embedding",l.We.registerClass(lc);class dc extends ti{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new la}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],o=t[r];if(null==i||null==o||i<0||o<0)n.push(null);else if(1===i)n.push(o);else if(1===o)n.push(i);else{if(i!==o)throw new ca("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(i)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Vs(e)]),e.length<2)throw new ca(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Sa(t),t.length>1)throw new ca(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const t=null==e[i]?null:e[i].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Sa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(l.tf)((()=>{if(this.reshapeRequired){const t=[],n=e.map((input=>input.rank));if(-1===n.indexOf(null)){const r=Qa(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=as(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,o=e[0],c=e.slice(1).concat([o]);let d=l.Re(r,[o].concat(Za(e.slice(1))));d=l.wf(d,[1,0]),d=l.Re(d,c),t.push(d),n=!0}else if(e>1){const o=es(1,e).concat([0]);t.push(l.wf(r,o)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const o=r.rank;if(n)if(null==o){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=l.Re(l.wf(l.Re(r,[-1,t]),[1,0]),n)}else if(o>1){const e=[o-1].concat(es(0,o-1));r=l.wf(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const n=null==e[i]?null:e[i].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Sa(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,mask){return l.tf((()=>{if(null==mask)return null;if(!Array.isArray(mask))throw new ca("`mask` should be an Array");if(!Array.isArray(e))throw new ca("`inputs` should be an Array");if(mask.length!==e.length)throw new ca(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${mask.length})`);if(mask.every((e=>null==e)))return null;let output=(mask=mask.map((e=>null==e?e:l.be(e,0))))[0];for(let i=1;i<mask.length-1;++i)output=l.se(output,mask[i]);return output}))}}class hc extends dc{constructor(e){super(e)}mergeFunction(e){return Object(l.tf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=l.qd(output,e[i]);return output}))}}hc.className="Add",l.We.registerClass(hc);class pc extends dc{constructor(e){super(e)}mergeFunction(e){return Object(l.tf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=l.Ce(output,e[i]);return output}))}}pc.className="Multiply",l.We.registerClass(pc);class fc extends dc{constructor(e){super(e)}mergeFunction(e){return Object(l.tf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=l.qd(output,e[i]);return l.Ce(1/e.length,output)}))}}fc.className="Average",l.We.registerClass(fc);class mc extends dc{constructor(e){super(e)}mergeFunction(e){return Object(l.tf)((()=>{let output=e[0];for(let i=1;i<e.length;++i)output=l.xe(output,e[i]);return output}))}}mc.className="Maximum",l.We.registerClass(mc);class bc extends dc{constructor(e){super(e)}mergeFunction(e){return Object(l.tf)((()=>{let output=e[0];for(let i=1;i<e.length;++i)output=l.Ae(output,e[i]);return output}))}}bc.className="Minimum",l.We.registerClass(bc);class gc extends dc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ca("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let i=0;i<e.length;++i){const t=e[i].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(l.Af.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new ca("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(l.tf)((()=>us(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ca("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,mask){if(null==mask)return null;if(!Array.isArray(mask))throw new ca("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ca("`inputs` should be an array for Concatenate");if(mask.length!==e.length)throw new ca(`Mismatch in the length of mask (${mask.length}) and the legnth of inputs (${e.length})`);return l.tf((()=>{let t=!0;if(mask.forEach((e=>{null==e||(t=!1)})),t)return null;const n=[];for(let i=0;i<e.length;++i)null==mask[i]?n.push(l.Ed(l.Ie(e[i]),"bool")):mask[i].rank<e[i].rank?n.push(l.be(mask[i],-1)):n.push(mask[i]);const r=l.Hd(n,this.axis);return l.rd(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yc(e,t){for(;e<0;)e+=t;return e}gc.className="Concatenate",l.We.registerClass(gc);class xc extends dc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){l.Af.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new la("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ca(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ca(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,i)=>yc(t,e[i].shape.length))):[yc(this.axes,n.shape.length),yc(this.axes,r.shape.length)],this.normalize&&(n=Di(n,t[0]),r=Di(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new la("batchDot is not implemented for tensors of 4D or higher rank yet");if(l.Af.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),l.Af.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new la("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,o=t.shape.length;null==n&&(n=[r-1,o-2]);const c=n;return l.tf((()=>{let n,d;if(r>o){n=r-o;const e=[];for(let i=0;i<n;++i)e.push(1);t=l.Re(t,t.shape.concat(e))}else if(o>r){n=o-r;const t=[];for(let i=0;i<n;++i)t.push(1);e=l.Re(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)d=c[0]===c[1]?l.mf(l.Ce(e,t),c[0]):l.mf(l.Ce(l.wf(e,[1,0]),t),c[1]);else{const n=c[0]!==e.shape.length-1,r=c[1]===t.shape.length-1;d=l.te(e,t,n,r)}if(n>0){let e;e=r>o?r+o-3:r-1;const t=[];for(let i=e;i<e+n;++i)t.push(i);d=l.jf(d,t)}return 1===d.shape.length&&(d=l.be(d,1)),d}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yc(this.axes,e.length),yc(this.axes,t.length)],n}computeOutputShape(e){l.Af.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new la("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const o=t.concat(n);return 1===o.length&&o.push(1),o}computeMask(e,mask){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}xc.className="Dot",l.We.registerClass(xc);class vc extends ti{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e);return ys((()=>Object(l.qd)(ds(input.shape,0,this.stddev),input)),(()=>input),t.training||!1)}))}}vc.className="GaussianNoise",l.We.registerClass(vc);class wc extends ti{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t);const input=Us(e);if(this.rate>0&&this.rate<1){return ys((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Object(l.Ce)(input,ds(input.shape,1,e))}),(()=>input),t.training||!1)}return input}))}}wc.className="GaussianDropout",l.We.registerClass(wc);class Oc extends ti{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Us(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(l.tf)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ys((()=>{const input=Us(e),t=-1.7580993408473766;let r=Object(l.ie)(Object(l.Ne)(n),this.rate);r=rs(r,"float32");const a=((1-this.rate)*(1+this.rate*t**2))**-.5,b=-a*t*this.rate,o=Object(l.qd)(Object(l.Ce)(input,r),Object(l.Ce)(Object(l.qd)(r,-1),t));return Object(l.qd)(Object(l.Ce)(o,a),b)}),(()=>Us(e)),t.training||!1)}return e}))}}function kc(e,t,n,r,o,c=.001){let d;if(2===e.rank)d=l.yd(e,t,n,r,o,c);else if(3===e.rank)d=l.zd(e,t,n,r,o,c);else{if(4!==e.rank)throw new la(`batchNormalization is not implemented for array of rank ${e.rank} yet`);d=l.Ad(e,t,n,r,o,c)}return d}function Ic(e,t,n,r,o=.001){return l.Af.arraysEqual(r.slice().sort(),es(0,e.rank-1))?function(e,t,n,r,o=.001){return Object(l.tf)((()=>{const c=l.Be(e,r),d=c.mean,h=c.variance;return[kc(e,d,h,n,t,o),d,h]}))}(e,t,n,r,o):function(e,t,n,r,o=.001){return Object(l.tf)((()=>{const c=l.Be(e,r),d=c.mean,h=c.variance,f=[];for(const t of es(0,e.rank))-1!==r.indexOf(t)?f.push(1):f.push(e.shape[t]);const m=Object(l.Re)(d,f),y=Object(l.Re)(h,f),x=null==t?null:Object(l.Re)(t,f),v=null==n?null:Object(l.Re)(n,f);return[kc(e,m,y,v,x,o),d,h]}))}(e,t,n,r,o)}Oc.className="AlphaDropout",l.We.registerClass(Oc);class Sc extends ti{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ps(e.betaInitializer||"zeros"),this.gammaInitializer=Ps(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ps(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ps(e.movingVarianceInitializer||"ones"),this.betaConstraint=Oi(e.betaConstraint),this.gammaConstraint=Oi(e.gammaConstraint),this.betaRegularizer=hu(e.betaRegularizer),this.gammaRegularizer=hu(e.gammaRegularizer)}build(e){e=Vs(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ca(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Xs({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(l.tf)((()=>{const n=null!=t.training&&t.training,input=Us(e),r=input.shape,o=r.length,c=es(0,o),d=this.axis>=0?this.axis:this.axis+o;c.splice(d,1);const h=pa(1,o);h[d]=r[d];const f=c.slice();f.sort();const m=!l.Af.arraysEqual(f,es(0,o).slice(0,o-1));if(!n)return(()=>{if(m){const e=Object(l.Re)(this.movingMean.read(),h),t=Object(l.Re)(this.movingVariance.read(),h),n=this.center?Object(l.Re)(this.beta.read(),h):null,r=this.scale?Object(l.Re)(this.gamma.read(),h):null;return kc(input,e,t,n,r,this.epsilon)}return kc(input,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,x,v]=Ic(input,this.gamma.read(),this.beta.read(),c,this.epsilon),w=(e,t,n)=>{l.tf((()=>{const r=1-n,o=e.read(),c=l.Ce(l.lf(o,t),r);e.write(l.lf(o,c))}))};return(()=>{w(this.movingMean,x,this.momentum),w(this.movingVariance,v,this.momentum)})(),y}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:zs(this.betaInitializer),gammaInitializer:zs(this.gammaInitializer),movingMeanInitializer:zs(this.movingMeanInitializer),movingVarianceInitializer:zs(this.movingVarianceInitializer),betaRegularizer:lu(this.betaRegularizer),gammaRegularizer:lu(this.gammaRegularizer),betaConstraint:vi(this.betaConstraint),gammaConstraint:vi(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sc.className="BatchNormalization",l.We.registerClass(Sc);class Nc extends ti{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ps(e.betaInitializer||"zeros"),this.gammaInitializer=Ps(e.gammaInitializer||"ones"),this.betaRegularizer=hu(e.betaRegularizer),this.gammaRegularizer=hu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Vs(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Sa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const input=Us(e),n=input.shape,r=n.length;return Object(l.tf)((()=>{let{mean:e,variance:t}=Object(l.Be)(input,this.axis,!0);const o=pa(1,r);for(const e of this.axis)o[e]=n[e];const c=e=>null!=e&&e.shape.length!==r?l.Re(e,o):e;let d=this.scale?c(this.gamma.read()):null,h=this.center?c(this.beta.read()):null;const f=[],m=[];for(let i=0;i<r;++i)-1!==this.axis.indexOf(i)?(f.push(n[i]),m.push(1)):(f.push(1),m.push(n[i]));return e=l.uf(e,f),t=l.uf(t,f),null!=d&&(d=l.uf(d,m)),null!=h&&(h=l.uf(h,m)),kc(input,e,t,h,d,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:zs(this.betaInitializer),gammaInitializer:zs(this.gammaInitializer),betaRegularizer:lu(this.betaRegularizer),gammaRegularizer:lu(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Nc.className="LayerNormalization",l.We.registerClass(Nc);class Tc extends ti{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ca(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ca(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ca(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Xs({ndim:4})]}computeOutputShape(e){let t,n;return e=Vs(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(l.tf)((()=>{return t=Us(e),n=this.padding,r=this.dataFormat,Object(l.tf)((()=>{if(4!==t.rank)throw new ca(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ca("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ca(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let pattern;return pattern="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],l.Je(t,pattern)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Cc(e,t,n,r,o,c){return Object(l.tf)((()=>{let d;Wa(o),Va(c),Ua(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==c&&(c="max"),e=Ou(e,o);const h="same"===r?"same":"valid";return d="max"===c?l.ve(e,t,n,h):l.ud(e,t,n,h),"channelsFirst"===o&&(d=l.wf(d,[0,3,1,2])),d}))}function Ac(e,t,n,r,o,c){return Object(l.tf)((()=>{let d;Wa(o),Va(c),Ua(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==c&&(c="max"),e=ku(e,o);const h="same"===r?"same":"valid";return d="max"===c?l.we(e,t,n,h):l.vd(e,t,n,h),"channelsFirst"===o&&(d=l.wf(d,[0,4,1,2,3])),d}))}Tc.className="ZeroPadding2D",l.We.registerClass(Tc);class jc extends ti{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ca(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Aa(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ca(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Aa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ua(this.padding),this.inputSpec=[new Xs({ndim:3})]}computeOutputShape(e){const t=vu((e=Vs(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(l.tf)((()=>{this.invokeCallHook(e,t),e=as(Us(e),2);const output=this.poolingFunction(Us(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return l.jf(output,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class $c extends jc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),Cc(e,t,n,r,o,"max")}}$c.className="MaxPooling1D",l.We.registerClass($c);class Ec extends jc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),Cc(e,t,n,r,o,"avg")}}Ec.className="AveragePooling1D",l.We.registerClass(Ec);class Rc extends ti{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ca(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Aa(this.poolSize,"poolSize"),Aa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),Ua(this.padding),this.inputSpec=[new Xs({ndim:4})]}computeOutputShape(e){e=Vs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=vu(t,this.poolSize[0],this.padding,this.strides[0]),n=vu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(l.tf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Us(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fc extends Rc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),Cc(e,t,n,r,o,"max")}}Fc.className="MaxPooling2D",l.We.registerClass(Fc);class Dc extends Rc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),Cc(e,t,n,r,o,"avg")}}Dc.className="AveragePooling2D",l.We.registerClass(Dc);class _c extends ti{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ca(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Aa(this.poolSize,"poolSize"),Aa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),Ua(this.padding),this.inputSpec=[new Xs({ndim:5})]}computeOutputShape(e){e=Vs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=vu(t,this.poolSize[0],this.padding,this.strides[0]),n=vu(n,this.poolSize[1],this.padding,this.strides[1]),r=vu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(l.tf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Us(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mc extends _c{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),Ac(e,t,n,r,o,"max")}}Mc.className="MaxPooling3D",l.We.registerClass(Mc);class Lc extends _c{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),Ac(e,t,n,r,o,"avg")}}Lc.className="AveragePooling3D",l.We.registerClass(Lc);class zc extends ti{constructor(e){super(e),this.inputSpec=[new Xs({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new la}}class Pc extends zc{constructor(e){super(e||{})}call(e,t){return Object(l.tf)((()=>{const input=Us(e);return l.ye(input,1)}))}}Pc.className="GlobalAveragePooling1D",l.We.registerClass(Pc);class Bc extends zc{constructor(e){super(e||{})}call(e,t){return Object(l.tf)((()=>{const input=Us(e);return l.ue(input,1)}))}}Bc.className="GlobalMaxPooling1D",l.We.registerClass(Bc);class Wc extends ti{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),this.inputSpec=[new Xs({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new la}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Uc extends Wc{call(e,t){return Object(l.tf)((()=>{const input=Us(e);return"channelsLast"===this.dataFormat?l.ye(input,[1,2]):l.ye(input,[2,3])}))}}Uc.className="GlobalAveragePooling2D",l.We.registerClass(Uc);class Vc extends Wc{call(e,t){return Object(l.tf)((()=>{const input=Us(e);return"channelsLast"===this.dataFormat?l.ue(input,[1,2]):l.ue(input,[2,3])}))}}Vc.className="GlobalMaxPooling2D",l.We.registerClass(Vc);class Gc extends ti{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Fi(t.layer,n);delete t.layer;const o={layer:r};return Object.assign(o,t),new e(o)}}class Hc extends Gc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Vs(e)).length<3)throw new ca(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Vs(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(l.tf)((()=>Pu(((e,n)=>[Us(this.layer.call(e,t)),[]]),e=Us(e),[],!1,null,null,!1,!0)[1]))}}Hc.className="TimeDistributed",l.We.registerClass(Hc);class qc extends Gc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Fi(n),t.goBackwards=!0!==t.goBackwards;const r={};var o;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Fi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,o=this.mergeMode,Ta(Pa,"BidirectionalMergeMode",o),e.weights)throw new la("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,o=this.forwardLayer.computeOutputShape(e);return Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),this.returnState?(r=o.slice(1),t=o[0]):t=o[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ba(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const o=zu(e,n,r,this.numConstants);if(e=o.inputs,n=o.initialState,r=o.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const c=[],l=[];if(null!=n){const e=n.length;if(e%2>0)throw new ca("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,c.push(...n);const r=n.map((e=>new Xs({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),l.push(...r)}if(null!=r)throw new la("Support for constants in Bidirectional layers is not implemented yet.");const d=c[0]instanceof Zs;for(const e of c)if(e instanceof Zs!==d)throw new ca("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(d){const n=[e].concat(c),r=this.inputSpec.concat(l),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,t);return this.inputSpec=o,output}return super.apply(e,t)}call(e,t){return Object(l.tf)((()=>{const n=t.initialState;let r,o,c,output;if(null==n)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const c=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:c})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}return this.returnState&&(Array.isArray(r)&&(c=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=l.Se(o,1)),"concat"===this.mergeMode?output=us([r,o]):"sum"===this.mergeMode?output=l.qd(r,o):"ave"===this.mergeMode?output=l.Ce(.5,l.qd(r,o)):"mul"===this.mergeMode?output=l.Ce(r,o):null==this.mergeMode&&(output=[r,o]),this.returnState?null==this.mergeMode?output.concat(c):[output].concat(c):output}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ha(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ha(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,mask){let t;if(Array.isArray(mask)&&(mask=mask[0]),t=this.returnSequences?null==this.mergeMode?[mask,mask]:mask:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(t)?t.concat(e).concat(e):[t].concat(e).concat(e)}return t}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Fi(t.layer);if(delete t.layer,null!=t.numConstants)throw new la("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Kc(e){return new ri(e)}function Yc(e){return new bu(e)}function Xc(e){return new pu(e)}function Zc(e){return new fu(e)}function Jc(e){return new mu(e)}function Qc(e){return new yu(e)}function el(e){return new gu(e)}function tl(e){return new Du(e)}function nl(e){return new Au(e)}function rl(e){return new $u(e)}function al(e){return new ju(e)}function sl(e){return new Eu(e)}function il(e){return new Fu(e)}function cl(e){return new _u(e)}function ll(e){return new Mu(e)}function hl(e){return new Lu(e)}function pl(e){return new sc(e)}function fl(e){return new rc(e)}function ml(e){return new tc(e)}function bl(e){return new nc(e)}function gl(e){return new ac(e)}function yl(e){return new ic(e)}function xl(e){return new oc(e)}function vl(e){return new uc(e)}function wl(e){return new lc(e)}function Ol(e){return new hc(e)}function kl(e){return new fc(e)}function Il(e){return new gc(e)}function Sl(e){return new mc(e)}function Nl(e){return new bc(e)}function Tl(e){return new pc(e)}function Cl(e){return new xc(e)}function Al(e){return new Sc(e)}function jl(e){return new Nc(e)}function $l(e){return new Tc(e)}function El(e){return new Ec(e)}function Rl(e){return El(e)}function Fl(e){return El(e)}function Dl(e){return new Dc(e)}function _l(e){return Dl(e)}function Ml(e){return Dl(e)}function Ll(e){return new Lc(e)}function zl(e){return Ll(e)}function Pl(e){return Ll(e)}function Bl(e){return new Pc(e)}function Wl(e){return new Uc(e)}function Ul(e){return new Bc(e)}function Vl(e){return new Vc(e)}function Gl(e){return new $c(e)}function Hl(e){return new Fc(e)}function ql(e){return new Mc(e)}function Kl(e){return new Hu(e)}function Yl(e){return new Gu(e)}function Xl(e){return new Ku(e)}function Zl(e){return new qu(e)}function Jl(e){return new Vu(e)}function Ql(e){return new Uu(e)}function ed(e){return new ec(e)}function nd(e){return new Qu(e)}function rd(e){return new Bu(e)}function ad(e){return new Yu(e)}function sd(e){return new qc(e)}function id(e){return new Hc(e)}qc.className="Bidirectional",l.We.registerClass(qc);const od=Ul,ud=Vl,cd=Gl,ld=Hl;function hd(e){return new vc(e)}function pd(e){return new wc(e)}function fd(e){return new Oc(e)}function md(e){return new cc(e)}function bd(e){return new uu(e)}function gd(e){return iu(t=e),new uu({l1:null!=t?t.l1:null,l2:0});var t}function yd(e){return iu(t=e),new uu({l2:null!=t?t.l2:null,l1:0});var t}Object(l.Yd)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));n(750),n(490);n(585),n(751);n(518),n(578),n(577);n(477),n(719),n(752),n(717),n(722);n(572),n(753),n(754),n(648),n(615),n(727);n(755),n(756);n(757),n(758);n(534);n(759);n(834);n(653),n(760);n(761),n(762);n(763);var xd=n(609),vd=n(564),wd=n(678);class Od{constructor(){this.size=null}batch(e,t=!0){const base=this;let n;return l.Af.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),kd((async()=>(await base.iterator()).columnMajorBatch(e,t,Id)),n)}concatenate(e){const base=this;let t;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,kd((async()=>(await base.iterator()).concatenate(await e.iterator())),t)}filter(e){const base=this;let t;return t=this.size===1/0?1/0:null,kd((async()=>(await base.iterator()).filter((t=>l.tf((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const base=this;return kd((async()=>(await base.iterator()).map((t=>l.tf((()=>e(t)))))),this.size)}mapAsync(e){const base=this;return kd((async()=>(await base.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const base=this;return kd((async()=>(await base.iterator()).prefetch(e)),this.size)}repeat(e){const base=this;let t;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,kd((async()=>{const t=Object(vd.e)((async()=>({value:await base.iterator(),done:!1})));return Object(vd.d)(t.take(e))}),t)}skip(e){const base=this;let t;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,kd((async()=>(await base.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const base=this,r=xd.alea(t||l.Af.now().toString());return kd((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await base.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const base=this;let t;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,kd((async()=>(await base.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function kd(e,t=null){return new class extends Od{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Id(e){if(null===e)return null;const t=e[0];if(Object(wd.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof l.ed?l.kf(e):l.pf(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Od.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");vd.a;vd.a;var Sd=n(891);Sd.a;function Nd(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&l.Af.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Td=l.me.whereImpl;class Cd extends l.yb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new l.N(this,Object(l.Xd)())}nextDataId(){return Cd.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(l.Yd)().get("IS_NODE")&&l.xd.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&l.Af.isString(n[0])){const o=n.map((e=>l.Af.encodeString(e)));r=this.write(o,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return l.xd.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const data=this.readSync(e.dataId);if("string"===e.dtype)try{const t=data.map((e=>l.Af.decodeString(e)));return Object(l.Dd)(e.shape,e.dtype,t)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(l.Dd)(e.shape,e.dtype,data)}makeOutput(e,t,n){return Object(l.Xd)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=l.Af.now();e();return{kernelMs:l.Af.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Nd([e],"where");const t=this.readSync(e.dataId);return Td(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Cd.nextDataId=0;function Ad(e,t,n){return({inputs:r,attrs:o,backend:c})=>{const{x:d}=r;if(Nd(d,e),"string"===d.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const h=c,f=h.data.get(d.dataId).values,m=l.Af.sizeFromShape(d.shape),y=n||d.dtype,x=l.Af.getArrayFromDType(y,m);for(let i=0;i<m;++i)x[i]=t(f[i],o);return h.makeTensorInfo(d.shape,y,x)}}function jd(e,t,n){return({inputs:r,attrs:o,backend:c})=>{const{x:l}=r;if(Nd(l,e),"string"===l.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const d=c,h=d.data.get(l.dataId).values,f=n||l.dtype,m=t(h,f,o);return d.makeTensorInfo(l.shape,f,m)}}Object(l.Oe)("cpu",(()=>new Cd),1);const $d=Ad(l.Y,(e=>e>=0?e:Math.exp(e)-1)),Ed={kernelName:l.Y,backendName:"cpu",kernelFunc:$d};function Rd(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Fd={kernelName:l.tb,backendName:"cpu",kernelFunc:Rd};function Dd(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{alpha:c}=r;Nd([o],"leakyRelu");const d=l.Af.sizeFromShape(o.shape),h=n.data.get(o.dataId).values,f=l.Af.getTypedArrayFromDType("float32",d);for(let i=0;i<h.length;i++)f[i]=h[i]<0?c*h[i]:h[i];return n.makeTensorInfo(o.shape,"float32",f)}const _d={kernelName:l.Bb,backendName:"cpu",kernelFunc:Dd};function Md(e){return(t,n,r,o,c)=>{const d=l.xd.assertAndGetBroadcastShape(t,n),h=d.length,f=l.Af.computeStrides(d),m=l.Af.sizeFromShape(d),y=l.Af.getTypedArrayFromDType(c,m),x=t.length,v=n.length,w=l.Af.computeStrides(t),O=l.Af.computeStrides(n),k=l.xd.getBroadcastDims(t,d),I=l.xd.getBroadcastDims(n,d);if(k.length+I.length===0)for(let i=0;i<y.length;++i)y[i]=e(r[i%r.length],o[i%o.length]);else for(let i=0;i<y.length;++i){const t=l.Af.indexToLoc(i,h,f),n=t.slice(-x);k.forEach((e=>n[e]=0));const c=l.Af.locToIndex(n,x,w),d=t.slice(-v);I.forEach((e=>d[e]=0));const m=l.Af.locToIndex(d,v,O);y[i]=e(r[c],o[m])}return[y,d]}}const Ld=Md(((e,t)=>e<0?t*e:e));function zd(e){const{inputs:t,backend:n}=e,{x:r,alpha:o}=t;Nd([r,o],"prelu");const c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[d,h]=Ld(r.shape,o.shape,c,l,"float32");return n.makeTensorInfo(h,"float32",d)}const Pd={kernelName:l.jc,backendName:"cpu",kernelFunc:zd},Bd=Ad(l.pc,(e=>Math.max(0,e))),Wd={kernelName:l.pc,backendName:"cpu",kernelFunc:Bd},Ud=Ad(l.qc,(e=>Math.min(Math.max(0,e),6))),Vd={kernelName:l.qc,backendName:"cpu",kernelFunc:Ud};function Gd(e){return(t,n,r)=>{const o=l.Af.getTypedArrayFromDType(n,t.length);for(let i=0;i<t.length;++i)o[i]=e(t[i],r);return o}}const Hd=Gd((e=>1/(1+Math.exp(-e)))),qd=Ad(l.Ec,(e=>1/(1+Math.exp(-e)))),Kd={kernelName:l.Ec,backendName:"cpu",kernelFunc:qd};function Yd(e,t,n,r,o){if("linear"===n)return Rd({inputs:{x:t},backend:e});if("relu"===n)return Bd({inputs:{x:t},backend:e});if("elu"===n)return $d({inputs:{x:t},backend:e});if("relu6"===n)return Ud({inputs:{x:t},backend:e});if("prelu"===n)return zd({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Dd({inputs:{x:t},backend:e,attrs:{alpha:o}});if("sigmoid"===n)return qd({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Xd(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,d=n.makeTensorInfo(r.shape,"complex64");return n.data.get(d.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",c),imag:n.makeTensorInfo(o.shape,"float32",l)},d}const Zd={kernelName:l.z,backendName:"cpu",kernelFunc:Xd};function Jd(e,t,n="float32"){if("complex64"===n){return Xd({inputs:{real:Jd(e,t,"float32"),imag:Jd(e,t,"float32")},backend:e})}const r=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Qd(e){const{inputs:t,backend:n}=e,{input:input}=t,r=n.data.get(input.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const eh={kernelName:l.mc,backendName:"cpu",kernelFunc:Qd};function nh(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{dtype:c}=r;if("complex64"===c){if("complex64"===o.dtype)return Rd({inputs:{x:o},backend:n});const e=Jd(n,o.shape,o.dtype),t=nh({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),r=Xd({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===o.dtype){const e=Qd({inputs:{input:o},backend:n}),t=nh({inputs:{x:e},backend:n,attrs:{dtype:c}});return n.disposeIntermediateTensorInfo(e),t}if(!l.Af.hasEncodingLoss(o.dtype,c)){const e=Rd({inputs:{x:o},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:c}}if("int32"===c){const e=n.data.get(o.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(o.shape,"int32",t)}if("bool"===c){const e=n.data.get(o.dataId).values,t=l.Af.toTypedArray([0],o.dtype),[r,c]=Md(((a,b)=>a!==b?1:0))(o.shape,[],e,t,"bool");return n.makeTensorInfo(c,"bool",r)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${c}`)}const rh={kernelName:l.w,backendName:"cpu",kernelFunc:nh};function ah(e,t,n,r){return null==n?({inputs:n,backend:o})=>{const{a:a,b:b}=n,c=o;Nd([a,b],e);const d=c.data.get(a.dataId).values,h=c.data.get(b.dataId).values,f="string"===a.dtype?l.xd.fromUint8ToStringArray(d):d,m="string"===a.dtype?l.xd.fromUint8ToStringArray(h):h,y=r||a.dtype,[x,v]=t(a.shape,b.shape,f,m,y);return c.makeTensorInfo(v,y,x)}:({inputs:e,backend:o})=>{const{a:a,b:b}=e,c=o;if("complex64"===a.dtype||"complex64"===b.dtype){const e=nh({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(o.dataId).values,h=nh({inputs:{x:b},backend:c,attrs:{dtype:"complex64"}}),f=c.data.get(h.dataId),m=f.complexTensorInfos.real,y=f.complexTensorInfos.imag,x=c.data.get(m.dataId).values,v=c.data.get(y.dataId).values,[w,O,k]=n(a.shape,b.shape,l,d,x,v),I=c.makeTensorInfo(k,"float32",w),S=c.makeTensorInfo(k,"float32",O),N=Xd({inputs:{real:I,imag:S},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(I),c.disposeIntermediateTensorInfo(S),N}{const e=c.data.get(a.dataId).values,n=c.data.get(b.dataId).values,o=r||a.dtype,[l,d]=t(a.shape,b.shape,e,n,o);return c.makeTensorInfo(d,o,l)}}}function sh(e){return(t,n,r,o,c,d)=>{const h=l.xd.assertAndGetBroadcastShape(t,n),f=l.Af.sizeFromShape(h),m=h.length,y=l.Af.computeStrides(h),x=l.Af.getTypedArrayFromDType("float32",f),v=l.Af.getTypedArrayFromDType("float32",f),w=l.xd.getBroadcastDims(t,h),O=l.xd.getBroadcastDims(n,h),k=l.xd.mergeRealAndImagArrays(r,o),I=l.xd.mergeRealAndImagArrays(c,d),S=t.length,N=l.Af.computeStrides(t),T=n.length,C=l.Af.computeStrides(n);if(w.length+O.length===0)for(let i=0;i<x.length;i++){const t=i%k.length,n=i%I.length,r=e(k[2*t],k[2*t+1],I[2*n],I[2*n+1]);x[i]=r.real,v[i]=r.imag}else for(let i=0;i<x.length;i++){const t=l.Af.indexToLoc(i,m,y),n=t.slice(-S);w.forEach((e=>n[e]=0));const r=l.Af.locToIndex(n,S,N),o=t.slice(-T);O.forEach((e=>o[e]=0));const c=l.Af.locToIndex(o,T,C),d=e(k[2*r],k[2*r+1],I[2*c],I[2*c+1]);x[i]=d.real,v[i]=d.imag}return[x,v,h]}}const ih=Md(((a,b)=>a+b)),oh=sh(((e,t,n,r)=>({real:e+n,imag:t+r}))),uh=ah(l.d,ih,oh),ch={kernelName:l.d,backendName:"cpu",kernelFunc:uh};function lh(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{shape:c}=r,d=l.Af.sizeFromShape(o.shape),h=l.Af.inferFromImplicitShape(c,d),f=l.Af.sizeFromShape(h);l.Af.assert(d===f,(()=>`The new shape (${h}) has ${f} elements and the old shape (${o.shape}) has ${d} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(o.dataId);const m=n.data.get(o.dataId);if(null!=m.complexTensorInfos){const e=m.complexTensorInfos.real,t=m.complexTensorInfos.imag;e.shape=h,t.shape=h}return{dataId:o.dataId,shape:h,dtype:o.dtype}}const dh={kernelName:l.rc,backendName:"cpu",kernelFunc:lh};function hh(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b}=t,{transposeA:o,transposeB:c}=r;Nd([a,b],"matMul");const d=a.shape.length,h=b.shape.length,f=o?a.shape[d-2]:a.shape[d-1],m=c?b.shape[h-1]:b.shape[h-2],y=o?a.shape[d-1]:a.shape[d-2],x=c?b.shape[h-2]:b.shape[h-1],v=a.shape.slice(0,-2),w=b.shape.slice(0,-2),O=l.Af.sizeFromShape(v),k=l.Af.sizeFromShape(w),I=l.Bd.assertAndGetBroadcastShape(a.shape.slice(0,-2),b.shape.slice(0,-2)).concat([y,x]);l.Af.assert(f===m,(()=>`Error in matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${a.shape} and ${b.shape} and transposeA=${o} and transposeB=${c} must match.`));const S=c?[k,x,m]:[k,m,x],N=lh({inputs:{x:a},backend:n,attrs:{shape:o?[O,f,y]:[O,y,f]}}),T=lh({inputs:{x:b},backend:n,attrs:{shape:S}}),C=o?N.shape[1]:N.shape[2],A=o?N.shape[2]:N.shape[1],j=c?T.shape[1]:T.shape[2],$=Math.max(O,k),E=n.data.get(N.dataId).values,R=n.data.get(T.dataId).values,F=l.Af.computeStrides(N.shape),D=l.Af.computeStrides(T.shape),[_,M,L]=o?[F[0],1,F[1]]:[F[0],F[1],1],[z,P,B]=c?[1,D[1],D[0]]:[D[1],1,D[0]],W=A*j,U=Object(l.Dd)([$,A,j],N.dtype),V=U.values,G=n.blockSize;for(let e=0;e<$;e++)for(let t=0;t<A;t+=G)for(let n=0;n<j;n+=G)for(let r=0;r<C;r+=G){const o=Math.min(t+G,A),c=Math.min(n+G,j),l=Math.min(r+G,C);for(let i=t;i<o;i++)for(let t=n;t<c;t++){let n=0;for(let o=r;o<l;o++){const r=Math.min(e,O-1)*_,c=Math.min(e,k-1)*B;n+=E[r+i*M+o*L]*R[o*z+t*P+c]}V[e*W+(i*j+t)]+=n}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(T),n.makeTensorInfo(I,U.dtype,U.values)}const ph={kernelName:l.s,backendName:"cpu",kernelFunc:hh};const fh={kernelName:l.od,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b,bias:o,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:f}=r;let m,y,x;const v=[];m=hh({inputs:{a:a,b:b},attrs:{transposeA:l,transposeB:d},backend:n}),o&&(y=uh({inputs:{a:m,b:o},backend:n}),v.push(m),m=y),h&&(x=Yd(n,m,h,c,f),v.push(m),m=x);for(const i of v)n.disposeIntermediateTensorInfo(i);return m}};function mh(e){const t=new Float32Array(e.length);for(let i=0;i<e.length;++i)t[i]=Math.abs(e[i]);return t}const bh={kernelName:l.a,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Nd(t,"abs");let r=new Float32Array(l.Af.sizeFromShape(t.shape));return r=mh(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},gh=Ad(l.b,(e=>Math.acos(e))),yh={kernelName:l.b,backendName:"cpu",kernelFunc:gh},xh=Ad(l.c,(e=>Math.acosh(e))),vh={kernelName:l.c,backendName:"cpu",kernelFunc:xh};const wh={kernelName:l.e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Nd(t,"addN");const o=r.map((e=>n.data.get(e.dataId).values)),c=Object(l.Dd)(r[0].shape,r[0].dtype),d=c.values;for(let i=0;i<r.length;i++){const e=o[i];for(let t=0;t<d.length;t++)d[t]+=e[t]}return n.makeTensorInfo(c.shape,c.dtype,c.values)}};function Oh(e,t,n,r,o){const c=t.length,d=l.Af.sizeFromShape(t),h=l.Af.computeStrides(t),f=l.Af.computeStrides(o),m=l.Af.getTypedArrayFromDType(n,l.Af.sizeFromShape(o));for(let i=0;i<d;++i){const t=l.Af.indexToLoc(i,c,h),n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[r[i]];m[l.Af.locToIndex(n,c,f)]=e[i]}return m}function kh(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:c}=n;Nd(o,"transpose");const l=o.shape.length,d=new Array(l);for(let i=0;i<d.length;i++)d[i]=o.shape[c[i]];const h=Oh(r.data.get(o.dataId).values,o.shape,o.dtype,c,d);return{dataId:r.write(h,d,o.dtype),shape:d,dtype:o.dtype}}const Ih={kernelName:l.jd,backendName:"cpu",kernelFunc:kh};const Sh={kernelName:l.f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r;Nd(o,"all");const h=l.Af.parseAxisParam(c,o.shape);let f=h;const m=l.xd.getAxesPermutation(f,o.shape.length);let y=o;null!=m&&(y=kh({inputs:{x:o},backend:n,attrs:{perm:m}}),f=l.xd.getInnerMostAxes(f.length,o.shape.length)),l.xd.assertAxesAreInnerMostDims("all",f,y.shape.length);const[x,v]=l.xd.computeOutAndReduceShapes(y.shape,f),w=l.Af.sizeFromShape(v),O=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<O.length;++i){const e=i*w;let t=k[e];for(let n=0;n<w;++n){const r=k[e+n];t=t&&r}O[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,O);if(d){const e=lh({inputs:{x:I},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}};const Nh={kernelName:l.g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r;Nd(o,"any");const h=l.Af.parseAxisParam(c,o.shape);let f=h;const m=l.xd.getAxesPermutation(f,o.shape.length);let y=o;null!=m&&(y=kh({inputs:{x:o},backend:n,attrs:{perm:m}}),f=l.xd.getInnerMostAxes(f.length,o.shape.length)),l.xd.assertAxesAreInnerMostDims("any",f,y.shape.length);const[x,v]=l.xd.computeOutAndReduceShapes(y.shape,f),w=l.Af.sizeFromShape(v),O=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<O.length;++i){const e=i*w;let t=k[e];for(let n=0;n<w;++n){const r=k[e+n];t=t||r}O[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,O);if(d){const e=lh({inputs:{x:I},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}};const Th={kernelName:l.h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c}=r;Nd(o,"argMax");let d=l.Af.parseAxisParam(c,o.shape);const h=l.xd.getAxesPermutation(d,o.shape.length);let f=o;const m=[];null!=h&&(f=kh({inputs:{x:o},backend:n,attrs:{perm:h}}),m.push(f),d=l.xd.getInnerMostAxes(d.length,f.shape.length)),d=[d[0]],l.xd.assertAxesAreInnerMostDims("argMax",d,f.shape.length);const[y,x]=l.xd.computeOutAndReduceShapes(f.shape,d),v=l.Af.sizeFromShape(y),w=l.Af.makeZerosTypedArray(v,"int32"),O=l.Af.sizeFromShape(x),k=n.data.get(f.dataId).values;for(let i=0;i<w.length;++i){const e=i*O;let t=k[e],n=0;for(let r=0;r<O;++r){const o=k[e+r];o>t&&(t=o,n=r)}w[i]=n}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,"int32",w)}};const Ch={kernelName:l.i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c}=r;Nd(o,"argMin");let d=l.Af.parseAxisParam(c,o.shape);const h=l.xd.getAxesPermutation(d,o.shape.length);let f=o;const m=[];null!=h&&(f=kh({inputs:{x:o},backend:n,attrs:{perm:h}}),m.push(f),d=l.xd.getInnerMostAxes(d.length,f.shape.length)),d=[d[0]],l.xd.assertAxesAreInnerMostDims("argMin",d,f.shape.length);const[y,x]=l.xd.computeOutAndReduceShapes(f.shape,d),v=l.Af.sizeFromShape(y),w=l.Af.makeZerosTypedArray(v,"int32"),O=l.Af.sizeFromShape(x),k=n.data.get(f.dataId).values;for(let i=0;i<w.length;++i){const e=i*O;let t=k[e],n=0;for(let r=0;r<O;++r){const o=k[e+r];o<t&&(t=o,n=r)}w[i]=n}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,"int32",w)}},Ah=Ad(l.j,(e=>Math.asin(e))),jh={kernelName:l.j,backendName:"cpu",kernelFunc:Ah},$h=Ad(l.k,(e=>Math.asinh(e))),Eh={kernelName:l.k,backendName:"cpu",kernelFunc:$h},Rh=Ad(l.l,(e=>Math.atan(e))),Fh={kernelName:l.l,backendName:"cpu",kernelFunc:Rh},Dh=Md(((e,t)=>Math.atan2(e,t))),_h=ah(l.m,Dh),Mh={kernelName:l.m,backendName:"cpu",kernelFunc:_h},Lh=Ad(l.n,(e=>Math.atanh(e))),zh={kernelName:l.n,backendName:"cpu",kernelFunc:Lh};function Ph(e,t,n,r,o,c){const d=o.strideHeight,h=o.strideWidth,f=o.dilationHeight,m=o.dilationWidth,y=o.effectiveFilterHeight,x=o.effectiveFilterWidth,v=o.padInfo.top,w=o.padInfo.left,O="max"===c?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(l.Dd)(o.outShape,n),k=output.values,I=o.outShape[1]*o.outShape[2]*o.outShape[3],S=o.outShape[2]*o.outShape[3],N=o.outShape[3];for(let b=0;b<o.batchSize;++b){const t=b*I,n=b*r[0];for(let l=0;l<o.inChannels;++l)for(let I=0;I<o.outHeight;++I){const T=I*d-v,C=Math.max(0,T),A=Math.min(o.inHeight,y+T),j=t+I*S;for(let t=0;t<o.outWidth;++t){const d=t*h-w,y=Math.max(0,d),v=Math.min(o.inWidth,x+d);let I=O,S=0,T=0;for(let t=C;t<A;t+=f){const o=n+t*r[1];for(let t=y;t<v;t+=m){const n=e[o+t*r[2]+l];"max"===c&&n>I?I=n:"avg"===c&&(S+=n,T++)}if(isNaN(I))break}k[j+t*N+l]="avg"===c?S/T:I}}}return output}function Bh(e,t,n,r,o=!1,c=!1){const d=Object(l.Dd)(r.outShape,"int32"),h=r.strideHeight,f=r.strideWidth,m=r.dilationHeight,y=r.dilationWidth,x=r.effectiveFilterHeight,v=r.effectiveFilterWidth,w=r.padInfo.top,O=r.padInfo.left,k=Object(l.Dd)(t,n,e);for(let b=0;b<r.batchSize;++b)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*h-w;let l=n;for(;l<0;)l+=m;const I=Math.min(r.inHeight,x+n);for(let h=0;h<r.outWidth;++h){const x=h*f-O;let w=x;for(;w<0;)w+=y;const S=Math.min(r.inWidth,v+x);let N=Number.NEGATIVE_INFINITY,T=-1;for(let t=l;t<I;t+=m){const l=t-n;for(let n=w;n<S;n+=y){const d=n-x,h=k.get(b,t,n,e);h>N&&(N=h,T=o?c?((b*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:l*v+d)}}d.set(T,b,t,h,e)}}return d}function Wh(e,t,n,r,o,c){const d=o.strideDepth,h=o.strideHeight,f=o.strideWidth,m=o.dilationDepth,y=o.dilationHeight,x=o.dilationWidth,v=o.effectiveFilterDepth,w=o.effectiveFilterHeight,O=o.effectiveFilterWidth,k=o.padInfo.front,I=o.padInfo.top,S=o.padInfo.left,N="max"===c?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(l.Dd)(o.outShape,n),T=output.values,C=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[2]*o.outShape[3]*o.outShape[4],j=o.outShape[3]*o.outShape[4],$=o.outShape[4];for(let t=0;t<o.batchSize;++t){const n=t*C,l=t*r[0];for(let t=0;t<o.inChannels;++t)for(let C=0;C<o.outDepth;++C){const E=C*d-k;let R=E;for(;R<0;)R+=m;const F=Math.min(o.inDepth,v+E),D=n+C*A;for(let n=0;n<o.outHeight;++n){const d=n*h-I;let v=d;for(;v<0;)v+=y;const k=Math.min(o.inHeight,w+d),C=D+n*j;for(let n=0;n<o.outWidth;++n){const d=n*f-S;let h=d;for(;h<0;)h+=x;const w=Math.min(o.inWidth,O+d),I=C+n*$;let A=N,j=0,E=0;for(let n=R;n<F;n+=m){const o=l+n*r[1];for(let n=v;n<k;n+=y){const l=o+n*r[2];for(let n=h;n<w;n+=x){const o=e[l+n*r[3]+t];if("max"===c&&o>A?A=o:"avg"===c&&(j+=o,E++),isNaN(A))break}if(isNaN(A))break}if(isNaN(A))break}T[I+t]="avg"===c?j/E:A}}}}return output}const Uh={kernelName:l.o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t;Nd(o,"avgPool");const{filterSize:c,strides:d,pad:h,dimRoundingMode:f}=r;l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=l.xd.computePool2DInfo(o.shape,c,d,1,h,f);let y;if(1===m.filterWidth&&1===m.filterHeight&&l.Af.arraysEqual(m.inShape,m.outShape))y=Rd({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=l.Af.computeStrides(o.shape),r=Ph(e,o.shape,o.dtype,t,m,"avg");y=n.makeTensorInfo(m.outShape,o.dtype,r.values)}return y}};const Vh={kernelName:l.p,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{filterSize:c,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r;Nd(o,"avgPool3d");const y=l.xd.computePool3DInfo(o.shape,c,d,1,h,f,m),x=Wh(n.data.get(o.dataId).values,o.shape,o.dtype,l.Af.computeStrides(o.shape),y,"avg");return n.makeTensorInfo(x.shape,"float32",x.values)}};const Gh={kernelName:l.q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input}=t,{filterSize:c,strides:d,pad:h,dimRoundingMode:f}=r;Nd([o,input],"avgPool3DGrad");const m=l.xd.computePool3DInfo(input.shape,c,d,1,h,f),y=m.strideDepth,x=m.strideHeight,v=m.strideWidth,w=m.filterDepth,O=m.filterHeight,k=m.filterWidth,I=m.dilationDepth,S=m.dilationHeight,N=m.dilationWidth,T=m.effectiveFilterDepth,C=m.effectiveFilterHeight,A=m.effectiveFilterWidth,j=T-1-m.padInfo.front,$=A-1-m.padInfo.left,E=C-1-m.padInfo.top,R=Object(l.Dd)(input.shape,"float32"),F=1/(w*O*k),D=n.bufferSync(o);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let n=0;n<m.inDepth;++n)for(let r=0;r<m.inHeight;++r)for(let o=0;o<m.inWidth;++o){const c=n-j,l=r-E,d=o-$;let h=0;for(let n=0;n<T;n+=I){const r=(c+n)/y;if(!(r<0||r>=m.outDepth||Math.floor(r)!==r))for(let n=0;n<C;n+=S){const o=(l+n)/x;if(!(o<0||o>=m.outHeight||Math.floor(o)!==o))for(let n=0;n<A;n+=N){const c=(d+n)/v;if(c<0||c>=m.outWidth||Math.floor(c)!==c)continue;h+=D.get(e,r,o,c,t)}}}R.set(h*F,e,n,r,o,t)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}};const Hh={kernelName:l.r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input}=t,c=input;Nd([o,input],"avgPoolGrad");const{filterSize:d,strides:h,pad:f}=r,m=l.xd.computePool2DInfo(c.shape,d,h,1,f),y=m.strideHeight,x=m.strideWidth,v=m.filterHeight,w=m.filterWidth,O=m.dilationHeight,k=m.dilationWidth,I=m.effectiveFilterHeight,S=m.effectiveFilterWidth,N=S-1-m.padInfo.left,T=I-1-m.padInfo.top,C=Object(l.Dd)(c.shape,"float32"),A=1/(v*w),j=n.data.get(o.dataId).values,$=Object(l.Dd)(o.shape,"float32",j);for(let b=0;b<m.batchSize;++b)for(let e=0;e<m.inChannels;++e)for(let t=0;t<m.inHeight;++t)for(let n=0;n<m.inWidth;++n){const r=t-T,o=n-N;let c=0;for(let t=0;t<I;t+=O){const n=(r+t)/y;if(!(n<0||n>=m.outHeight||Math.floor(n)!==n))for(let t=0;t<S;t+=k){const r=(o+t)/x;if(r<0||r>=m.outWidth||Math.floor(r)!==r)continue;c+=$.get(b,n,r,e)}}C.set(c*A,b,t,n,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const qh={kernelName:l.lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,scale:c,offset:d,mean:h,variance:f}=t;l.Af.assert(h.shape.length===f.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),l.Af.assert(null==d||h.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),l.Af.assert(null==c||h.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Nd([o,h,f,c,d],"batchNorm");let{varianceEpsilon:m}=r;null==m&&(m=.001);const y=n.data.get(o.dataId).values,x=n.data.get(h.dataId).values,v=n.data.get(f.dataId).values,w=c?n.data.get(c.dataId).values:new Float32Array([1]),O=d?n.data.get(d.dataId).values:new Float32Array([0]),k=new Float32Array(y.length),I=O.length,S=w.length,N=v.length,T=x.length;let C=0,A=0,j=0,$=0;for(let i=0;i<y.length;++i)k[i]=O[C++]+(y[i]-x[A++])*w[j++]/Math.sqrt(v[$++]+m),C>=I&&(C=0),A>=T&&(A=0),j>=S&&(j=0),$>=N&&($=0);return n.makeTensorInfo(o.shape,o.dtype,k)}};function Kh(e,t,n,r,o){const c=l.ef.isSliceContinous(r,t,n),d=l.Af.sizeFromShape(n),h=l.Af.computeStrides(r);if(c){const n=l.ef.computeFlatOffset(t,h);return"string"===o?e.slice(n,n+d):e.subarray(n,n+d)}const f="string"===o?l.xd.fromUint8ToStringArray(e):e,m=Object(l.Dd)(r,o,f),y=Object(l.Dd)(n,o);for(let i=0;i<y.size;++i){const e=y.indexToLoc(i),n=e.map(((e,n)=>e+t[n]));y.set(m.get(...n),...e)}return"string"===o?l.xd.fromStringArrayToUint8(y.values):y.values}function Yh(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{begin:c,size:d}=r;Nd(o,"slice");const[h,f]=l.ef.parseSliceParams(o,c,d);l.ef.assertParamsValid(o,h,f);const m=Kh(n.data.get(o.dataId).values,h,f,o.shape,o.dtype);return n.makeTensorInfo(f,o.dtype,m)}const Xh={kernelName:l.Ic,backendName:"cpu",kernelFunc:Yh};const Zh={kernelName:l.t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockShape:c,crops:d}=r;Nd([o],"batchToSpaceND");const h=c.reduce(((a,b)=>a*b)),f=l.xd.getReshaped(o.shape,c,h),m=l.xd.getPermuted(f.length,c.length),y=l.xd.getReshapedPermuted(o.shape,c,h),x=l.xd.getSliceBeginCoords(d,c.length),v=l.xd.getSliceSize(y,d,c.length),w=lh({inputs:{x:o},backend:n,attrs:{shape:f}}),O=kh({inputs:{x:w},backend:n,attrs:{perm:m}}),k=lh({inputs:{x:O},backend:n,attrs:{shape:y}}),I=Yh({inputs:{x:k},backend:n,attrs:{begin:x,size:v}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),I}};function Jh(e,t,n,r,o){const c=l.Af.sizeFromShape(r),d=l.Af.makeZerosTypedArray(o,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=o||(d[n]+=c>0?t[i]:1)}return d}function Qh(e,t,n,r=!1){const o=e.shape[0],c=e.shape[1],d=Object(l.Dd)([o,n],t.dtype);for(let i=0;i<o;i++)for(let o=0;o<c;o++){const c=e.get(i,o);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(r?d.set(1,i,c):t.size>0?d.set(d.get(i,c)+t.get(i,o),i,c):d.set(d.get(i,c)+1,i,c))}return d}const ep={kernelName:l.u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l}=r,d=Jh(n.data.get(o.dataId).values,n.data.get(c.dataId).values,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,d)}};const tp={kernelName:l.v,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:o}=t,c=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,h=l.xd.assertAndGetBroadcastShape(Array.from(c),Array.from(d));return n.makeTensorInfo([h.length],"int32",Int32Array.from(h))}},np=Gd((e=>Math.ceil(e))),ap=jd(l.x,np),sp={kernelName:l.x,backendName:"cpu",kernelFunc:ap},ip=Ad(l.y,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),op={kernelName:l.y,backendName:"cpu",kernelFunc:ip},up={kernelName:l.A,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(l.Af.sizeFromShape(t.shape)),o=n.data.get(t.dataId),c=o.complexTensorInfos.real,d=o.complexTensorInfos.imag,h=n.data.get(c.dataId).values,f=n.data.get(d.dataId).values;for(let i=0;i<h.length;i++){const e=h[i],t=f[i];r[i]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function cp(e,t,n,r){const o=l.Af.getArrayFromDType(n,l.Af.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((input=>{const e=l.Af.sizeFromShape(input.shape);o.set(input.vals,t),t+=e}))}else{let r=0;e.forEach((input=>{const e="string"===n?l.xd.fromUint8ToStringArray(input.vals):input.vals;let c=0;for(let n=0;n<input.shape[0];++n){const l=n*t[1]+r;for(let col=0;col<input.shape[1];++col)o[l+col]=e[c++]}r+=input.shape[1]}))}return o}function lp(e){const{inputs:t,backend:n}=e,{input:input}=t,r=n.data.get(input.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const dp={kernelName:l.ub,backendName:"cpu",kernelFunc:lp};function hp(e){const{inputs:t,backend:n,attrs:r}=e,{axis:o}=r,c=l.Af.parseAxisParam(o,t[0].shape)[0];let d=l.xd.computeOutShape(t.map((e=>e.shape)),c);if(0===l.Af.sizeFromShape(d))return n.makeTensorInfo(d,t[0].dtype,[]);const h=t.filter((e=>l.Af.sizeFromShape(e.shape)>0));if(1===h.length)return Rd({inputs:{x:h[0]},backend:n});const f=h.map((e=>e.shape));if(l.xd.assertParamsConsistent(f,c),"complex64"===h[0].dtype){const e=h.map((e=>Qd({inputs:{input:e},backend:n}))),t=h.map((e=>lp({inputs:{input:e},backend:n}))),r=hp({inputs:e,backend:n,attrs:{axis:c}}),o=hp({inputs:t,backend:n,attrs:{axis:c}}),l=Xd({inputs:{real:r,imag:o},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((i=>n.disposeIntermediateTensorInfo(i))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),l}const m=h.map((e=>{const t=l.Af.sizeFromShape(e.shape.slice(c));return lh({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),y=m.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));d=l.xd.computeOutShape(m.map((e=>e.shape)),1);const x=1===m[0].shape[0],v=cp(y,d,t[0].dtype,x),w=l.xd.computeOutShape(h.map((e=>e.shape)),c),O=n.makeTensorInfo(w,t[0].dtype,v);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),O}const pp={kernelName:l.B,backendName:"cpu",kernelFunc:hp};function fp(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dataFormat:h,dilations:f,dimRoundingMode:m}=r;Nd([o,filter],"conv2d");const y=l.xd.convertConv2DDataFormat(h),x=l.xd.computeConv2DInfo(o.shape,filter.shape,c,f,d,m,!1,y),v=x.filterHeight,w=x.filterWidth,O=x.dilationHeight,k=x.dilationWidth,I=x.padInfo.left,S=x.padInfo.top,N="channelsLast"===x.dataFormat,T=new l.fd(x.outShape,o.dtype),C=l.Af.computeStrides(o.shape),A=l.Af.computeStrides(filter.shape),j=C[0],$=N?C[1]:C[2],E=N?C[2]:1,R=N?1:C[1],F=T.strides[0],D=N?T.strides[1]:T.strides[2],_=N?T.strides[2]:1,M=N?1:T.strides[1],L=n.data.get(o.dataId).values,z=n.data.get(filter.dataId).values,P=T.values;for(let b=0;b<x.batchSize;++b){const e=b*j,t=b*F;for(let n=0;n<x.outHeight;++n){const r=t+n*D,o=n*x.strideHeight-S;for(let t=0;t<v;++t){const n=o+t*O;if(n<0||n>=x.inHeight)continue;const c=t*A[0],l=e+n*$;for(let e=0;e<x.outWidth;++e){const t=r+e*_,n=e*x.strideWidth-I;for(let e=0;e<w;++e){const r=n+e*k;if(r<0||r>=x.inWidth)continue;const o=l+r*E;let d=c+e*A[1];for(let e=0;e<x.inChannels;++e){const n=L[o+e*R];for(let e=0;e<x.outChannels;++e)P[t+e*M]+=n*z[d+e];d+=x.outChannels}}}}}}return n.makeTensorInfo(T.shape,T.dtype,P)}const mp={kernelName:l.C,backendName:"cpu",kernelFunc:fp};const bp={kernelName:l.D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,dy:c}=t,{strides:d,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:y}=r;Nd([o,c],"conv2dBackpropFilter");const x=l.xd.convertConv2DDataFormat(f),v=l.xd.computeConv2DInfo(o.shape,y,d,1,h,m,!1,x),{strideHeight:w,strideWidth:O,filterHeight:k,filterWidth:I}=v,S="channelsLast"===v.dataFormat,N=new l.fd(v.filterShape,"float32"),T=v.padInfo.left,C=v.padInfo.top,A=n.data.get(o.dataId).values,j=n.data.get(c.dataId).values,$=new l.fd(o.shape,o.dtype,A),E=new l.fd(c.shape,c.dtype,j);for(let e=0;e<k;++e){const t=Math.max(0,Math.ceil((C-e)/w)),n=Math.min(v.outHeight,(v.inHeight+C-e)/w);for(let r=0;r<I;++r){const o=Math.max(0,Math.ceil((T-r)/O)),c=Math.min(v.outWidth,(v.inWidth+T-r)/O);for(let l=0;l<v.inChannels;++l)for(let d=0;d<v.outChannels;++d){let h=0;for(let b=0;b<v.batchSize;++b)for(let f=t;f<n;++f){const t=e+f*w-C;for(let e=o;e<c;++e){const n=r+e*O-T;h+=S?$.get(b,t,n,l)*E.get(b,f,e,d):$.get(b,l,t,n)*E.get(b,d,f,e)}}N.set(h,e,r,l,d)}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const gp={kernelName:l.E,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,filter:filter}=t,{inputShape:c,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r;Nd([o,filter],"conv2dBackpropInput");const y=l.Af.computeStrides(filter.shape),x=l.Af.computeStrides(o.shape);let v=l.xd.convertConv2DDataFormat(f);const w=l.xd.computeConv2DInfo(c,filter.shape,d,1,h,m,!1,v),O=new l.fd(w.inShape,"float32"),k=O.values,I=n.data.get(o.dataId).values,S=n.data.get(filter.dataId).values,[N,T,C]=y,{batchSize:A,filterHeight:j,filterWidth:$,inChannels:E,inHeight:R,inWidth:F,outChannels:D,outHeight:_,outWidth:M,strideHeight:L,strideWidth:z}=w;v=w.dataFormat;const P=j-1-w.padInfo.top,B=$-1-w.padInfo.left,W="channelsLast"===v,U=O.strides[0],V=W?O.strides[1]:O.strides[2],G=W?O.strides[2]:1,H=W?1:O.strides[1],K=x[0],Y=W?x[1]:x[2],X=W?x[2]:1,Z=W?1:x[1];for(let b=0;b<A;++b)for(let e=0;e<E;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/L)),o=Math.min(_,(j+n)/L);for(let c=0;c<F;++c){const l=c-B,d=Math.max(0,Math.ceil(l/z)),h=Math.min(M,($+l)/z);let f=0;for(let t=r;t<o;++t){const r=t*L-n;for(let n=d;n<h;++n){const o=K*b+Y*t+X*n,c=N*(j-1-r)+T*($-1-(n*z-l))+C*e;for(let e=0;e<D;++e){f+=I[o+Z*e]*S[c+e]}}}k[U*b+V*t+G*c+H*e]=f}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const yp={kernelName:l.F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dilations:h}=r;Nd([o,filter],"conv3d");const f=l.xd.computeConv3DInfo(o.shape,filter.shape,c,h,d),{filterDepth:m,filterHeight:y,filterWidth:x,dilationDepth:v,dilationHeight:w,dilationWidth:O,padInfo:k}=f,I=k.front,S=k.left,N=k.top,T=new l.fd(f.outShape,o.dtype),C=n.data.get(o.dataId).values,A=n.data.get(filter.dataId).values,j=T.values,$=l.Af.computeStrides(o.shape),E=l.Af.computeStrides(filter.shape);for(let b=0;b<f.batchSize;++b){const e=b*$[0],t=b*T.strides[0];for(let n=0;n<f.outDepth;++n){const r=t+n*T.strides[1],o=n*f.strideDepth-I;for(let t=0;t<m;++t){const n=o+t*v;if(n<0||n>=f.inDepth)continue;const c=t*E[0],l=e+n*$[1];for(let e=0;e<f.outHeight;++e){const t=r+e*T.strides[2],n=e*f.strideHeight-N;for(let e=0;e<y;++e){const r=n+e*w;if(r<0||r>=f.inHeight)continue;const o=c+e*E[1],d=l+r*$[2];for(let e=0;e<f.outWidth;++e){const n=t+e*f.outChannels,r=e*f.strideWidth-S;for(let e=0;e<x;++e){const t=r+e*O;if(t<0||t>=f.inWidth)continue;const c=o+e*E[2],l=d+t*f.inChannels;let h=c;for(let e=0;e<f.inChannels;++e){const t=C[l+e];for(let e=0;e<f.outChannels;++e)j[n+e]+=t*A[h+e];h+=f.outChannels}}}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const xp={kernelName:l.G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,dy:c}=t,{strides:d,pad:h,filterShape:f}=r;Nd([o,c],"conv3dBackpropFilterV2");const m=l.Af.computeStrides(o.shape),y=l.Af.computeStrides(c.shape),x=l.xd.computeConv3DInfo(o.shape,f,d,1,h),v=x.strideDepth,w=x.strideHeight,O=x.strideWidth,k=x.filterDepth,I=x.filterHeight,S=x.filterWidth,N=new l.fd(x.filterShape,"float32"),T=N.values,[C,A,j,$]=N.strides,E=n.data.get(c.dataId).values,[R,F,D,_]=y,M=n.data.get(o.dataId).values,[L,z,P,B]=m,W=x.padInfo.front,U=x.padInfo.left,V=x.padInfo.top;for(let e=0;e<k;++e){const t=Math.max(0,Math.ceil((W-e)/v)),n=Math.min(x.outDepth,(x.inDepth+W-e)/v),r=e*C;for(let o=0;o<I;++o){const c=Math.max(0,Math.ceil((V-o)/w)),l=Math.min(x.outHeight,(x.inHeight+V-o)/w),d=o*A+r;for(let r=0;r<S;++r){const h=Math.max(0,Math.ceil((U-r)/O)),f=Math.min(x.outWidth,(x.inWidth+U-r)/O),m=r*j+d;for(let d=0;d<x.inChannels;++d){const y=d*$+m;for(let m=0;m<x.outChannels;++m){let k=0;for(let b=0;b<x.batchSize;++b){const y=b*L,x=b*R;for(let I=t;I<n;++I){const t=(e+I*v-W)*z+y,n=I*F+x;for(let e=c;e<l;++e){const c=(o+e*w-V)*P+t,l=e*D+n;for(let e=h;e<f;++e){const t=e*_+l;k+=M[(r+e*O-U)*B+c+d]*E[t+m]}}}}T[y+m]=k}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const vp={kernelName:l.H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,filter:filter}=t,{pad:c,strides:d,inputShape:h}=r;Nd([o],"conv3dBackpropInputV2");const f=l.Af.computeStrides(o.shape),m=l.Af.computeStrides(filter.shape),y=l.xd.computeConv3DInfo(h,filter.shape,d,1,c),x=new l.fd(y.inShape,"float32"),v=x.values,[w,O,k,I]=x.strides,S=n.data.get(o.dataId).values,[N,T,C,A]=f,j=n.data.get(filter.dataId).values,[$,E,R,F]=m,{batchSize:D,filterDepth:_,filterHeight:M,filterWidth:L,inChannels:z,inDepth:P,inHeight:B,inWidth:W,outChannels:U,outDepth:V,outHeight:G,outWidth:H,strideDepth:K,strideHeight:Y,strideWidth:X}=y,Z=_-1-y.padInfo.front,J=M-1-y.padInfo.top,Q=L-1-y.padInfo.left;for(let b=0;b<D;++b)for(let e=0;e<z;++e)for(let t=0;t<P;++t){const n=t-Z,r=Math.max(0,Math.ceil(n/K)),o=Math.min(V,(_+n)/K);for(let c=0;c<B;++c){const l=c-J,d=Math.max(0,Math.ceil(l/Y)),h=Math.min(G,(M+l)/Y);for(let f=0;f<W;++f){const m=f-Q,y=Math.max(0,Math.ceil(m/X)),x=Math.min(H,(L+m)/X);let D=0;for(let t=r;t<o;++t){const r=t*K-n;for(let n=d;n<h;++n){const o=n*Y-l;for(let c=y;c<x;++c){const l=N*b+T*t+C*n+A*c,d=$*(_-1-r)+E*(M-1-o)+R*(L-1-(c*X-m))+F*e;for(let e=0;e<U;++e){D+=S[l+e]*j[d+e]}}}}v[w*b+O*t+k*c+I*f+e]=D}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},wp=Ad(l.I,(e=>Math.cos(e))),Op={kernelName:l.I,backendName:"cpu",kernelFunc:wp},kp=Ad(l.J,(e=>Math.cosh(e))),Ip={kernelName:l.J,backendName:"cpu",kernelFunc:kp};const Sp={kernelName:l.K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:image,boxes:o,boxInd:c}=t,{cropSize:d,method:h,extrapolationValue:f}=r,[m,y,x,v]=image.shape,w=o.shape[0],[O,k]=d,output=Object(l.Dd)([w,O,k,v],"float32"),I=n.data.get(o.dataId).values,S=n.data.get(c.dataId).values,N=n.data.get(image.dataId).values,T=l.Af.computeStrides(image.shape),C=l.Af.computeStrides(output.shape);for(let b=0;b<w;b++){const e=4*b,t=I[e],n=I[e+1],r=I[e+2],o=I[e+3],c=S[b];if(c>=m)continue;const l=O>1?(r-t)*(y-1)/(O-1):0,d=k>1?(o-n)*(x-1)/(k-1):0;for(let e=0;e<O;e++){const m=O>1?t*(y-1)+e*l:.5*(t+r)*(y-1);if(m<0||m>y-1)for(let t=0;t<k;t++)for(let n=0;n<v;n++){const r=n+t*C[2]+e*C[1]+b*C[0];output.values[r]=f}else if("bilinear"===h){const t=Math.floor(m),r=Math.ceil(m),l=m-t;for(let h=0;h<k;h++){const m=k>1?n*(x-1)+h*d:.5*(n+o)*(x-1);if(m<0||m>x-1){for(let t=0;t<v;t++){const n=t+h*C[2]+e*C[1]+b*C[0];output.values[n]=f}continue}const y=Math.floor(m),w=Math.ceil(m),O=m-y;for(let n=0;n<v;n++){let o=n+y*T[2]+t*T[1]+c*T[0];const d=N[o];o=n+w*T[2]+t*T[1]+c*T[0];const f=N[o];o=n+y*T[2]+r*T[1]+c*T[0];const m=N[o];o=n+w*T[2]+r*T[1]+c*T[0];const x=d+(f-d)*O,v=m+(N[o]-m)*O;o=n+h*C[2]+e*C[1]+b*C[0],output.values[o]=x+(v-x)*l}}}else for(let t=0;t<k;++t){const r=k>1?n*(x-1)+t*d:.5*(n+o)*(x-1);if(r<0||r>x-1){for(let n=0;n<v;n++){const r=n+t*C[2]+e*C[1]+b*C[0];output.values[r]=f}continue}const l=Math.round(r),h=Math.round(m);for(let n=0;n<v;n++){const r=n+l*T[2]+h*T[1]+c*T[0],o=n+t*C[2]+e*C[1]+b*C[0];output.values[o]=N[r]}}}}return n.makeTensorInfo(output.shape,output.dtype,output.values)}};const Np={kernelName:l.L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,exclusive:d,reverse:h}=r;Nd(o,"cumprod");const f=l.xd.getAxesPermutation([c],o.shape.length);let m=o;null!=f&&(m=kh({inputs:{x:o},backend:n,attrs:{perm:f}}));const y=l.xd.getInnerMostAxes(1,o.shape.length)[0];if(y!==m.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${m.shape.length-1} but got axis=${y}`);const x=Object(l.zf)(m.dtype,"int32"),v=l.Af.makeOnesTypedArray(l.Af.sizeFromShape(m.shape),x),w=n.data.get(m.dataId).values,O=m.shape[m.shape.length-1],k=h?(i,e)=>i+O-e-1:(i,e)=>i+e;for(let i=0;i<w.length;i+=O)for(let e=0;e<O;e++){const t=k(i,e);if(0===e)v[t]=d?1:w[t];else{const n=k(i,e-1);v[t]=d?w[n]*v[n]:w[t]*v[n]}}const I=n.makeTensorInfo(m.shape,x,v);if(null!=f){const e=kh({inputs:{x:I},backend:n,attrs:{perm:l.xd.getUndoAxesPermutation(f)}});return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(m),e}return I}};const Tp={kernelName:l.M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,exclusive:d,reverse:h}=r;Nd(o,"cumsum");const f=l.xd.getAxesPermutation([c],o.shape.length);let m=o;null!=f&&(m=kh({inputs:{x:o},backend:n,attrs:{perm:f}}));const y=l.xd.getInnerMostAxes(1,o.shape.length)[0];if(y!==m.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${m.shape.length-1} but got axis=${y}`);const x=Object(l.zf)(m.dtype,"int32"),v=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(m.shape),x),w=n.data.get(m.dataId).values,O=m.shape[m.shape.length-1],k=h?(i,e)=>i+O-e-1:(i,e)=>i+e;for(let i=0;i<w.length;i+=O)for(let e=0;e<O;e++){const t=k(i,e);if(0===e)v[t]=d?0:w[t];else{const n=k(i,e-1);v[t]=d?w[n]+v[n]:w[t]+v[n]}}const I=n.makeTensorInfo(m.shape,x,v);if(null!=f){const e=kh({inputs:{x:I},backend:n,attrs:{perm:l.xd.getUndoAxesPermutation(f)}});return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(m),e}return I}};const Cp={kernelName:l.O,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l,binaryOutput:d}=r;if(1===o.shape.length){const e=Jh(n.data.get(o.dataId).values,n.data.get(c.dataId).values,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,e)}if(2===o.shape.length){const e=Qh(n.bufferSync(o),n.bufferSync(c),l,d);return n.makeTensorInfo(e.shape,c.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};const Ap={kernelName:l.P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockSize:c,dataFormat:d}=r;l.Af.assert("NHWC"===d,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${d}`));const h=o.shape[0],f=o.shape[1],m=o.shape[2],y=o.shape[3],x=f*c,v=m*c,w=y/(c*c),O=n.data.get(o.dataId).values,k=new Float32Array(h*x*v*w);let I=0;for(let b=0;b<h;++b)for(let e=0;e<x;++e){const t=Math.floor(e/c),n=e%c;for(let e=0;e<v;++e){const r=Math.floor(e/c),o=(n*c+e%c)*w;for(let e=0;e<w;++e){const n=e+o+y*(r+m*(t+f*b));k[I++]=O[n]}}}return n.makeTensorInfo([h,x,v,w],o.dtype,k)}};function jp(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dilations:h,dimRoundingMode:f}=r;Nd([o,filter],"depthwiseConv2DNative");const m=l.Af.computeStrides(o.shape),y=l.Af.computeStrides(filter.shape);let x=h;null==x&&(x=[1,1]),l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(c,x),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${x}'`));const v=l.xd.computeConv2DInfo(o.shape,filter.shape,c,x,d,f,!0),{filterHeight:w,filterWidth:O,dilationHeight:k,dilationWidth:I,padInfo:S}=v,N=S.left,T=S.top,C=v.outChannels/v.inChannels,A=new l.fd(v.outShape,o.dtype),j=n.data.get(o.dataId).values,$=n.data.get(filter.dataId).values,E=A.values;for(let b=0;b<v.batchSize;++b){const e=b*m[0],t=b*A.strides[0];for(let n=0;n<v.outHeight;++n){const r=t+n*A.strides[1],o=n*v.strideHeight-T;for(let t=0;t<w;++t){const n=o+t*k;if(n<0||n>=v.inHeight)continue;const c=t*y[0],l=e+n*m[1];for(let e=0;e<v.outWidth;++e){const t=r+e*A.strides[2],n=e*v.strideWidth-N;for(let e=0;e<O;++e){const r=n+e*I;if(r<0||r>=v.inWidth)continue;const o=c+e*y[1],d=l+r*v.inChannels;let h=t,f=o;for(let e=0;e<v.inChannels;++e){const t=j[d+e];for(let q=0;q<C;++q)E[h+q]+=t*$[f+q];h+=C,f+=C}}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}const $p={kernelName:l.Q,backendName:"cpu",kernelFunc:jp};const Ep={kernelName:l.R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,dy:c}=t,{strides:d,dilations:h,pad:f,dimRoundingMode:m,filterShape:y}=r;Nd([o,c],"depthwiseConv2dNativeBackpropFilter");const x=l.xd.computeConv2DInfo(o.shape,y,d,h,f,m,!0),{strideHeight:v,strideWidth:w,filterHeight:O,filterWidth:k}=x,I=new l.fd(x.filterShape,"float32"),S=x.padInfo.left,N=x.padInfo.top,T=x.outChannels/x.inChannels,C=n.data.get(o.dataId).values,A=new l.fd(o.shape,o.dtype,C),j=n.data.get(c.dataId).values,$=new l.fd(c.shape,c.dtype,j);for(let e=0;e<O;++e){const t=Math.max(0,Math.ceil((N-e)/v)),n=Math.min(x.outHeight,(x.inHeight+N-e)/v);for(let r=0;r<k;++r){const o=Math.max(0,Math.ceil((S-r)/w)),c=Math.min(x.outWidth,(x.inWidth+S-r)/w);for(let l=0;l<x.outChannels;++l){const d=Math.trunc(l/T),h=l%T;let f=0;for(let b=0;b<x.batchSize;++b)for(let h=t;h<n;++h){const t=e+h*v-N;for(let e=o;e<c;++e){const n=r+e*w-S;f+=A.get(b,t,n,d)*$.get(b,h,e,l)}}I.set(f,e,r,d,h)}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Rp={kernelName:l.S,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,filter:filter}=t,{strides:c,dilations:d,pad:h,dimRoundingMode:f,inputShape:m}=r;Nd([o,filter],"depthwiseConv2DNativeBackpropInput");const y=l.Af.computeStrides(o.shape),x=l.Af.computeStrides(filter.shape),v=l.xd.computeConv2DInfo(m,filter.shape,c,d,h,f,!0),w=new l.fd(v.inShape,"float32"),O=w.values,[k,I,S]=w.strides,N=n.data.get(o.dataId).values,[T,C,A]=y,j=n.data.get(filter.dataId).values,[$,E,R]=x,{batchSize:F,filterHeight:D,filterWidth:_,inChannels:M,inHeight:L,inWidth:z,outChannels:P,outHeight:B,outWidth:W,strideHeight:U,strideWidth:V}=v,G=D-1-v.padInfo.top,H=_-1-v.padInfo.left,K=P/M;for(let b=0;b<F;++b)for(let e=0;e<M;++e)for(let t=0;t<L;++t){const n=t-G,r=Math.max(0,Math.ceil(n/U)),o=Math.min(B,(D+n)/U);for(let c=0;c<z;++c){const l=c-H,d=Math.max(0,Math.ceil(l/V)),h=Math.min(W,(_+l)/V);let f=0;for(let t=r;t<o;++t){const r=t*U-n;for(let n=d;n<h;++n){const o=T*b+C*t+A*n,c=$*(D-1-r)+E*(_-1-(n*V-l))+R*e;for(let t=0;t<K;++t){f+=N[o+(e*K+t)]*j[c+t]}}}O[k*b+I*t+S*c+e]=f}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Fp={kernelName:l.T,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,o=l.Af.sizeFromShape(r.shape),c=n.data.get(r.dataId).values,d=Object(l.Dd)([o,o],r.dtype),h=d.values;for(let i=0;i<c.length;i++)h[i*o+i]=c[i];const f=[...r.shape,...r.shape];return n.makeTensorInfo(f,d.dtype,d.values)}},Dp={kernelName:l.U,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter}=e,{strides:o,pad:c,dilations:d}=n,h=t,f=h.data.get(r.dataId).values,m=r.shape.length,y=h.data.get(filter.dataId).values,x=filter.shape.length,{batchSize:v,inHeight:w,inWidth:O,inChannels:k,outHeight:I,outWidth:S,padInfo:N,strideHeight:T,strideWidth:C,filterHeight:A,filterWidth:j,dilationHeight:$,dilationWidth:E,outShape:R}=l.xd.computeDilation2DInfo(r.shape,filter.shape,o,c,"NHWC",d),F=l.Af.sizeFromShape(R),D=R.length,_=l.Af.getArrayFromDType(r.dtype,F);for(let b=0;b<v;++b)for(let e=0;e<I;++e){const t=e*T-N.top;for(let n=0;n<S;++n){const o=n*C-N.left;for(let c=0;c<k;++c){let d=Number.MIN_SAFE_INTEGER;for(let e=0;e<A;++e){const n=t+e*$;if(n>=0&&n<w)for(let t=0;t<j;++t){const h=o+t*E;if(h>=0&&h<O){const o=l.Af.locToIndex([b,n,h,c],m,l.Af.computeStrides(r.shape)),v=l.Af.locToIndex([e,t,c],x,l.Af.computeStrides(filter.shape)),w=f[o]+y[v];w>d&&(d=w)}}}_[l.Af.locToIndex([b,e,n,c],D,l.Af.computeStrides(R))]=d}}}return{dataId:h.write(l.Af.toTypedArray(_,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},_p={kernelName:l.V,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter,dy:o}=e,{strides:c,pad:d,dilations:h}=n,f=t,m=l.Af.toNestedArray(r.shape,f.data.get(r.dataId).values),y=l.Af.toNestedArray(filter.shape,f.data.get(filter.dataId).values),{batchSize:x,inHeight:v,inWidth:w,inChannels:O,outHeight:k,outWidth:I,padInfo:S,strideHeight:N,strideWidth:T,filterHeight:C,filterWidth:A,dilationHeight:j,dilationWidth:$,outShape:E}=l.xd.computeDilation2DInfo(r.shape,filter.shape,c,d,"NHWC",h);l.Af.assert(o.rank===E.length,(()=>`Error in ${l.V}, dy must have the same rank as output ${E.length}, but got ${o.rank}`));const R=l.Af.toNestedArray(E,f.data.get(o.dataId).values),F=l.Af.makeZerosNestedTypedArray(filter.shape,filter.dtype);for(let b=0;b<x;++b)for(let e=0;e<k;++e){const t=e*N-S.top;for(let n=0;n<I;++n){const r=n*T-S.left;for(let o=0;o<O;++o){let c=Number.MIN_SAFE_INTEGER,l=0,d=0;for(let e=0;e<C;++e){const n=t+e*j;if(n>=0&&n<v)for(let t=0;t<A;++t){const h=r+t*$;if(h>=0&&h<w){const r=m[b][n][h][o]+y[e][t][o];r>c&&(c=r,l=e,d=t)}}}F[l][d][o]+=R[b][e][n][o]}}}return{dataId:f.write(l.Af.toTypedArray(F,r.dtype),filter.shape,filter.dtype),shape:filter.shape,dtype:filter.dtype}}},Mp={kernelName:l.W,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter,dy:o}=e,{strides:c,pad:d,dilations:h}=n,f=t,m=l.Af.toNestedArray(r.shape,f.data.get(r.dataId).values),y=l.Af.toNestedArray(filter.shape,f.data.get(filter.dataId).values),{batchSize:x,inHeight:v,inWidth:w,inChannels:O,outHeight:k,outWidth:I,padInfo:S,strideHeight:N,strideWidth:T,filterHeight:C,filterWidth:A,dilationHeight:j,dilationWidth:$,outShape:E}=l.xd.computeDilation2DInfo(r.shape,filter.shape,c,d,"NHWC",h);l.Af.assert(o.rank===E.length,(()=>`Error in ${l.W}, dy must have the same rank as output ${E.length}, but got ${o.rank}`));const R=l.Af.toNestedArray(E,f.data.get(o.dataId).values),F=l.Af.makeZerosNestedTypedArray(r.shape,r.dtype);for(let b=0;b<x;++b)for(let e=0;e<k;++e){const t=e*N-S.top;for(let n=0;n<I;++n){const r=n*T-S.left;for(let o=0;o<O;++o){let c=Number.MIN_SAFE_INTEGER,l=t<0?0:t,d=r<0?0:r;for(let e=0;e<C;++e){const n=t+e*j;if(n>=0&&n<v)for(let t=0;t<A;++t){const h=r+t*$;if(h>=0&&h<w){const r=m[b][n][h][o]+y[e][t][o];r>c&&(c=r,l=n,d=h)}}}F[b][l][d][o]+=R[b][e][n][o]}}}return{dataId:f.write(l.Af.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Lp=Md(((e,t)=>e*t)),zp=sh(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Pp=ah(l.Xb,Lp,zp),Bp={kernelName:l.Xb,backendName:"cpu",kernelFunc:Pp};function Wp(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r;let h;Nd(o,"sum"),h="bool"===o.dtype?nh({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):Rd({inputs:{x:o},backend:n});const f=h.shape.length,m=l.Af.parseAxisParam(c,h.shape),y=l.xd.getAxesPermutation(m,f);let x=m,v=h;null!=y&&(v=kh({inputs:{x:h},backend:n,attrs:{perm:y}}),x=l.xd.getInnerMostAxes(x.length,f)),l.xd.assertAxesAreInnerMostDims("sum",x,v.shape.length);const[w,O]=l.xd.computeOutAndReduceShapes(v.shape,x);let k=Jd(n,w,l.xd.upcastType(v.dtype,"int32"));const I=l.Af.sizeFromShape(O),S=n.data.get(k.dataId).values,N=n.data.get(v.dataId).values;for(let i=0;i<S.length;++i){const e=i*I;let t=0;for(let n=0;n<I;++n)t+=N[e+n];S[i]=t}if(d){const e=k;k=lh({inputs:{x:k},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(k.shape,m)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(h),null!=y&&n.disposeIntermediateTensorInfo(v),k}const Up={kernelName:l.bd,backendName:"cpu",kernelFunc:Wp};const Vp={kernelName:l.X,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:o}=r,c=t,{allDims:d,summedDims:h,idDims:f}=l.xd.decodeEinsumEquation(o,c.length);l.xd.checkEinsumDimSizes(d.length,f,c);const{path:path,steps:m}=l.xd.getEinsumComputePath(h,f),y=m.length;let x=null,v=d.length;const w=[];for(let i=0;i<y;++i){for(const e of m[i]){const{permutationIndices:t,expandDims:r}=l.xd.getEinsumPermutation(v,f[e]);let o;l.xd.isIdentityPermutation(t)?o=c[e]:(o=kh({inputs:{x:c[e]},backend:n,attrs:{perm:t}}),w.push(o));const d=o.shape.slice();for(let e=0;e<r.length;++e)d.splice(r[e],0,1);l.Af.arraysEqual(o.shape,d)||(o=lh({inputs:{x:o},backend:n,attrs:{shape:d}}),w.push(o)),null===x?x=o:(x=Pp({inputs:{a:o,b:x},backend:n}),w.push(x))}i<y-1&&(path[i]>=0&&(x=Wp({inputs:{x:x},backend:n,attrs:{axis:path[i]-(d.length-v),keepDims:!1}}),w.push(x)),v--)}for(const e of w)e!==x&&n.disposeIntermediateTensorInfo(e);return x}};const Gp={kernelName:l.Z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:o}=t;Nd([r,o],"eluGrad");const c=new Float32Array(l.Af.sizeFromShape(o.shape)),d=n.data.get(o.dataId).values,h=n.data.get(r.dataId).values;for(let i=0;i<d.length;++i){const e=d[i];c[i]=e>=1?h[i]:h[i]*(e+1)}return n.makeTensorInfo(o.shape,"float32",c)}},Hp=Md(((a,b)=>a===b?1:0)),qp=ah(l.ab,Hp,null,"bool"),Kp={kernelName:l.ab,backendName:"cpu",kernelFunc:qp},Yp=l.xd.ERF_P,Xp=l.xd.ERF_A1,Zp=l.xd.ERF_A2,Jp=l.xd.ERF_A3,Qp=l.xd.ERF_A4,ef=l.xd.ERF_A5,tf=Ad(l.bb,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Yp*n);return t*(1-((((ef*r+Qp)*r+Jp)*r+Zp)*r+Xp)*r*Math.exp(-n*n))})),nf={kernelName:l.bb,backendName:"cpu",kernelFunc:tf},rf=Gd((e=>Math.exp(e))),af=jd(l.cb,rf,"float32"),sf={kernelName:l.cb,backendName:"cpu",kernelFunc:af};function of(e){const{inputs:t,backend:n,attrs:r}=e,{input:input}=t,{dim:o}=r,c=input.shape.length,d=input.shape.slice();let h=o;return o<0&&(l.Af.assert(-(c+1)<=o,(()=>`Axis must be in the interval [${-(c+1)}, ${c}]`)),h=c+o+1),d.splice(h,0,1),lh({inputs:{x:input},backend:n,attrs:{shape:d}})}const uf={kernelName:l.db,backendName:"cpu",kernelFunc:of},cf=Gd((e=>Math.expm1(e))),lf=jd(l.eb,cf),df={kernelName:l.eb,backendName:"cpu",kernelFunc:lf},hf=Md(((a,b)=>a/b)),pf=ah(l.nc,hf),ff={kernelName:l.nc,backendName:"cpu",kernelFunc:pf},mf=Md(((e,t)=>e-t)),bf=sh(((e,t,n,r)=>({real:e-n,imag:t-r}))),gf=ah(l.ad,mf,bf),yf={kernelName:l.ad,backendName:"cpu",kernelFunc:gf};function xf(input,e,t){const n=input.shape,r=n[0],o=n[1],c=t.data.get(input.dataId),d=c.complexTensorInfos.real,h=c.complexTensorInfos.imag,f=[r,o],m=l.Af.sizeFromShape(f),y=l.Af.getTypedArrayFromDType("float32",m),x=l.Af.getTypedArrayFromDType("float32",m);for(let b=0;b<r;b++){const n=Yh({inputs:{x:d},backend:t,attrs:{begin:[b,0],size:[1,o]}}),i=Yh({inputs:{x:h},backend:t,attrs:{begin:[b,0],size:[1,o]}}),input=Xd({inputs:{real:n,imag:i},backend:t}),{real:r,imag:c}=vf(input,e,t),f=l.xd.mergeRealAndImagArrays(r,c);for(let e=0;e<o;e++){const t=l.xd.getComplexWithIndex(f,e);y[b*o+e]=t.real,x[b*o+e]=t.imag}t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(input)}const v=t.makeTensorInfo(f,"float32",y),w=t.makeTensorInfo(f,"float32",x),O=Xd({inputs:{real:v,imag:w},backend:t});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),O}function vf(input,e,t){const n=l.Af.sizeFromShape(input.shape),r=t.data.get(input.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,c=t.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((d=n)&d-1)){const r=wf(o,c,n,e,t),d=[input.shape[0],input.shape[1]];if(e){const e=t.makeTensorInfo(d,"float32",r.real),o=t.makeTensorInfo(d,"float32",r.imag),c=t.makeTensorInfo([],"float32",l.Af.createScalarValue(n,"float32")),h=Rd({inputs:{x:c},backend:t}),f=ff.kernelFunc({inputs:{a:e,b:c},backend:t}),m=ff.kernelFunc({inputs:{a:o,b:h},backend:t}),y=t.data.get(f.dataId).values,x=t.data.get(m.dataId).values;return t.disposeIntermediateTensorInfo(e),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),{real:y,imag:x}}return r}{const t=function(data,e,t){const n=new Float32Array(2*e);for(let r=0;r<e;r++){let o=0,c=0;for(let n=0;n<e;n++){const d=l.xd.exponent(r*n,e,t),h=l.xd.getComplexWithIndex(data,n);o+=h.real*d.real-h.imag*d.imag,c+=h.real*d.imag+h.imag*d.real}t&&(o/=e,c/=e),l.xd.assignToTypedArray(n,o,c,r)}return n}(l.xd.mergeRealAndImagArrays(o,c),n,e);return l.xd.splitRealAndImagArrays(t)}var d}function wf(e,t,n,r,o){if(1===n)return{real:e,imag:t};const data=l.xd.mergeRealAndImagArrays(e,t),c=n/2,d=l.xd.complexWithEvenIndex(data),h=d.real,f=d.imag,m=[h.length],y=o.makeTensorInfo(m,"float32",h),x=o.makeTensorInfo(m,"float32",f),v=Xd({inputs:{real:y,imag:x},backend:o}),w=l.xd.complexWithOddIndex(data),O=w.real,k=w.imag,I=[O.length],S=o.makeTensorInfo(I,"float32",O),N=o.makeTensorInfo(I,"float32",k),T=Xd({inputs:{real:S,imag:N},backend:o}),C=wf(h,f,c,r,o),A=C.real,j=C.imag,$=[A.length],E=o.makeTensorInfo($,"float32",A),R=o.makeTensorInfo($,"float32",j),F=Xd({inputs:{real:E,imag:R},backend:o}),D=wf(O,k,c,r,o),_=D.real,M=D.imag,L=[_.length],z=o.makeTensorInfo(L,"float32",_),P=o.makeTensorInfo(L,"float32",M),B=Xd({inputs:{real:z,imag:P},backend:o}),W=l.xd.exponents(n,r),U=[W.real.length],V=o.makeTensorInfo(U,"float32",W.real),G=o.makeTensorInfo(U,"float32",W.imag),H=Xd({inputs:{real:V,imag:G},backend:o}),K=Pp({inputs:{a:H,b:B},backend:o}),Y=uh({inputs:{a:F,b:K},backend:o}),X=gf({inputs:{a:F,b:K},backend:o}),Z=Qd({inputs:{input:Y},backend:o}),J=Qd({inputs:{input:X},backend:o}),Q=lp({inputs:{input:Y},backend:o}),ee=lp({inputs:{input:X},backend:o}),te=hp({inputs:[Z,J],backend:o,attrs:{axis:0}}),ne=hp({inputs:[Q,ee],backend:o,attrs:{axis:0}}),re=o.data.get(te.dataId).values,ae=o.data.get(ne.dataId).values;return o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(S),o.disposeIntermediateTensorInfo(N),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(R),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(z),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(te),o.disposeIntermediateTensorInfo(ne),{real:re,imag:ae}}const Of={kernelName:l.fb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t,r=l.Af.sizeFromShape(input.shape),o=input.shape[input.shape.length-1],c=lh({inputs:{x:input},backend:n,attrs:{shape:[r/o,o]}}),d=xf(c,!1,n),h=lh({inputs:{x:d},backend:n,attrs:{shape:input.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),h}};function kf(e){const{backend:t,attrs:n}=e,{shape:r,value:o,dtype:c}=n,d=c||l.Af.inferDtype(o),h=l.Af.getArrayFromDType(d,l.Af.sizeFromShape(r));return function(e,t,n){e.fill(t)}(h,o),t.makeTensorInfo(r,d,h)}const If={kernelName:l.gb,backendName:"cpu",kernelFunc:kf};const Sf={kernelName:l.hb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,r=n,output=l.Af.getTypedArrayFromDType(image.dtype,l.Af.sizeFromShape(image.shape)),[o,c,d,h]=image.shape,f=r.data.get(image.dataId).values;for(let e=0;e<o;e++){const t=e*d*c*h;for(let e=0;e<c;e++){const n=e*(d*h);for(let col=0;col<d;col++){const e=col*h;for(let r=0;r<h;r++){const o=Math.round(d-col-1),c=t+n+e+r;let l=f[c];if(o>=0&&o<d){l=f[t+n+o*h+r]}output[c]=l}}}}return{dataId:r.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},Nf=Gd((e=>Math.floor(e))),Tf=jd(l.ib,Nf),Cf={kernelName:l.ib,backendName:"cpu",kernelFunc:Tf},Af=Md(((a,b)=>Math.floor(a/b))),jf=ah(l.jb,Af,null,"int32"),$f={kernelName:l.jb,backendName:"cpu",kernelFunc:jf};const Ef={kernelName:l.mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:l}=t,{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:v}=r;let w=fp({inputs:{x:o,filter:filter},backend:n,attrs:{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y}});if(c){const e=w;if("NCHW"===f&&1===c.shape.length&&1!==c.shape[0]){const e=lh({inputs:{x:c},backend:n,attrs:{shape:[c.shape[0],1,1]}});w=uh({inputs:{a:w,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else w=uh({inputs:{a:w,b:c},backend:n});n.disposeIntermediateTensorInfo(e)}if(x){const e=w;if("NCHW"===f&&"prelu"===x&&1===l.shape.length&&1!==l.shape[0]){const e=lh({inputs:{x:l},backend:n,attrs:{shape:[l.shape[0],1,1]}});w=Yd(n,w,x,e,v),n.disposeIntermediateTensorInfo(e)}else w=Yd(n,w,x,l,v);n.disposeIntermediateTensorInfo(e)}return w}};const Rf={kernelName:l.nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:l}=t,{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:v}=r;let w=jp({inputs:{x:o,filter:filter},backend:n,attrs:{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y}});if(c){const e=w;w=uh({inputs:{a:w,b:c},backend:n}),n.disposeIntermediateTensorInfo(e)}if(x){const e=w;w=Yd(n,w,x,l,v),n.disposeIntermediateTensorInfo(e)}return w}};function Ff(e,t,n,r,o,c,d,h,f){const m=Object(l.Dd)([r,c],n);for(let i=0;i<r;i++){const n=[];let r=0;for(let t=0;t<o;t++){const c=e[i*o+t];r+=c*d[t],n.push(c)}if(r<0||r>=f/c)throw new Error(`Invalid indices: ${n} does not index into ${h}`);for(let e=0;e<c;e++)m.values[i*c+e]=t.get(...t.indexToLoc(r*c+e))}return m}const Df={kernelName:l.ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:o}=t,c=l.Af.sizeFromShape(r.shape),d=o.shape,h=d[d.length-1],[f,m,y,x]=l.xd.prepareAndValidate(r,o);if(0===m)return n.makeTensorInfo(f,r.dtype,[]);const v=Ff(n.data.get(o.dataId).values,n.bufferSync(r),r.dtype,m,h,y,x,r.shape,c);return n.makeTensorInfo(f,r.dtype,v.values)}};function _f(e,t,n){const r=Object(l.Dd)(n,e.dtype);for(let i=0;i<r.size;++i){const n=r.indexToLoc(i).slice(),o=n[0],c=n[2],l=t.locToIndex([o,c]);n[2]=t.values[l];const d=e.locToIndex(n);0<=d&&d<e.values.length&&(r.values[i]=e.values[d])}return r}const Mf={kernelName:l.pb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,indices:c}=t,{axis:d,batchDims:h}=r;Nd([o,c],"gatherV2");const f=l.Af.parseAxisParam(d,o.shape)[0],m=n.data.get(c.dataId).values,y=o.shape[f];for(let i=0;i<m.length;++i){const e=m[i];l.Af.assert(e<=y-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${y-1}]`))}let x=h;null==h&&(x=0);const v=l.Af.sizeFromShape(c.shape),w=l.xd.segment_util.collectGatherOpShapeInfo(o,c,f,x),O=lh({inputs:{x:o},backend:n,attrs:{shape:[w.batchSize,w.outerSize,w.dimSize,w.sliceSize]}}),k=lh({inputs:{x:c},backend:n,attrs:{shape:[w.batchSize,v/w.batchSize]}}),I=[w.batchSize,w.outerSize,v/w.batchSize,w.sliceSize],S=n.bufferSync(k),N=_f(n.bufferSync(O),S,I);return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(w.outputShape,N.dtype,N.values)}},Lf=Md(((a,b)=>a>b?1:0)),zf=ah(l.qb,Lf,null,"bool"),Pf={kernelName:l.qb,backendName:"cpu",kernelFunc:zf},Bf=Md(((a,b)=>a>=b?1:0)),Wf=ah(l.rb,Bf,null,"bool"),Uf={kernelName:l.rb,backendName:"cpu",kernelFunc:Wf};const Vf={kernelName:l.sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t,r=l.Af.sizeFromShape(input.shape),o=input.shape[input.shape.length-1],c=lh({inputs:{x:input},backend:n,attrs:{shape:[r/o,o]}}),d=xf(c,!0,n),h=lh({inputs:{x:d},backend:n,attrs:{shape:input.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),h}},Gf=Ad(l.vb,(e=>Number.isFinite(e)?1:0),"bool"),Hf={kernelName:l.vb,backendName:"cpu",kernelFunc:Gf},qf=Ad(l.wb,(e=>Math.abs(e)===1/0?1:0),"bool"),Kf={kernelName:l.wb,backendName:"cpu",kernelFunc:qf},Yf=Ad(l.xb,(e=>Number.isNaN(e)?1:0),"bool"),Xf={kernelName:l.xb,backendName:"cpu",kernelFunc:Yf},Zf=Md(((a,b)=>a<b?1:0)),Jf=ah(l.Cb,Zf,null,"bool"),Qf={kernelName:l.Cb,backendName:"cpu",kernelFunc:Jf},tm=Md(((a,b)=>a<=b?1:0)),nm=ah(l.Db,tm,null,"bool"),rm={kernelName:l.Db,backendName:"cpu",kernelFunc:nm};function am(e,t,n){const r=(t-e)/(n-1),o=l.Af.makeZerosTypedArray(n,"float32");o[0]=e;for(let i=1;i<o.length;i++)o[i]=o[i-1]+r;return o}const sm={kernelName:l.Eb,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:c}=n,l=am(r,o,c);return t.makeTensorInfo([l.length],"float32",l)}},im=Gd((e=>Math.log(e))),om=jd(l.Fb,im),um={kernelName:l.Fb,backendName:"cpu",kernelFunc:om},cm=Ad(l.Gb,(e=>Math.log1p(e))),lm={kernelName:l.Gb,backendName:"cpu",kernelFunc:cm},dm=Md(((a,b)=>a&&b)),hm=ah(l.Hb,dm,null,"bool"),pm={kernelName:l.Hb,backendName:"cpu",kernelFunc:hm},fm=Ad(l.Ib,(e=>e?0:1),"bool"),mm={kernelName:l.Ib,backendName:"cpu",kernelFunc:fm},bm=Md(((a,b)=>a||b)),gm=ah(l.Jb,bm,null,"bool"),ym={kernelName:l.Jb,backendName:"cpu",kernelFunc:gm};const xm={kernelName:l.zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{depthRadius:c,bias:d,alpha:h,beta:f}=r;Nd(o,"LRN");const m=o.shape[3],y=m-1,x=n.data.get(o.dataId).values,v=l.Af.sizeFromShape(o.shape),w=new Float32Array(v);function O(e){const t=e%m;let n=e-t+Math.max(0,t-c);const r=e-t+Math.min(t+c,y);let o=0;for(;n<=r;n++){const e=x[n];o+=e*e}return o}for(let e=0;e<v;e++){const t=O(e),n=x[e]*Math.pow(d+h*t,-f);w[e]=n}return n.makeTensorInfo(o.shape,o.dtype,w)}};const vm={kernelName:l.Ab,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,y:c,dy:d}=t,{depthRadius:h,bias:f,alpha:m,beta:y}=r;Nd(d,"LRNGrad");const x=l.Af.sizeFromShape(d.shape),v=d.shape[3],w=n.data.get(d.dataId).values,O=n.data.get(o.dataId).values,k=n.data.get(c.dataId).values,I=new Float32Array(x),S=x;for(let e=0;e<S;e++){const t=e%v,n=e-t+Math.max(0,t-h),r=e-t+Math.min(v,t+h+1);let o=0;for(let e=n;e<r;e++)o+=Math.pow(O[e],2);o=m*o+f;for(let t=n;t<r;t++){let n=-2*m*y*O[t]*k[e]/o;e===t&&(n+=Math.pow(o,-y)),n*=w[e],I[t]+=n}}return n.makeTensorInfo(d.shape,o.dtype,I)}};function wm(e,t,n,r){const o=l.Af.getTypedArrayFromDType(r,l.Af.sizeFromShape(n));for(let i=0;i<o.length;++i){const n=i*t;let r=e[n];for(let o=0;o<t;++o){const t=e[n+o];(Number.isNaN(t)||t>r)&&(r=t)}o[i]=r}return o}function Om(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reductionIndices:c,keepDims:d}=r,h=n;let f=o.shape;const m=f.length,y=l.Af.parseAxisParam(c,f);let x=y;const v=l.xd.getAxesPermutation(x,m);let w=h.data.get(o.dataId).values;if(null!=v){const e=new Array(m);for(let i=0;i<e.length;i++)e[i]=f[v[i]];w=Oh(w,f,o.dtype,v,e),x=l.xd.getInnerMostAxes(x.length,m),f=e}Nd(o,"max"),l.xd.assertAxesAreInnerMostDims("max",x,m);const[O,k]=l.xd.computeOutAndReduceShapes(f,x),I=wm(w,l.Af.sizeFromShape(k),O,o.dtype),S=h.write(I,O,o.dtype);let N=O;if(d){N=l.xd.expandShapeToKeepDim(O,y)}return{dataId:S,shape:N,dtype:o.dtype}}const km={kernelName:l.Kb,backendName:"cpu",kernelFunc:Om},Im=Md(((e,t)=>Math.max(e,t))),Sm=ah(l.Qb,Im),Nm={kernelName:l.Qb,backendName:"cpu",kernelFunc:Sm};const Tm={kernelName:l.Lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t;Nd(o,"maxPool");const{filterSize:c,strides:d,pad:h,dimRoundingMode:f}=r;l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=l.xd.computePool2DInfo(o.shape,c,d,1,h,f);let y;if(1===m.filterWidth&&1===m.filterHeight&&l.Af.arraysEqual(m.inShape,m.outShape))y=Rd({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=l.Af.computeStrides(o.shape),r=Ph(e,o.shape,o.dtype,t,m,"max");y=n.makeTensorInfo(m.outShape,o.dtype,r.values)}return y}};const Cm={kernelName:l.Mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{filterSize:c,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r;Nd(o,"maxPool3d");const y=l.xd.computePool3DInfo(o.shape,c,d,1,h,f,m),x=Wh(n.data.get(o.dataId).values,o.shape,o.dtype,l.Af.computeStrides(o.shape),y,"max");return n.makeTensorInfo(x.shape,"float32",x.values)}};const Am={kernelName:l.Nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input}=t,{filterSize:c,strides:d,pad:h,dimRoundingMode:f}=r;Nd([o,input],"maxPool3DGrad");const m=l.xd.computePool3DInfo(input.shape,c,d,1,h,f),y=function(e,t){const n=Object(l.Dd)(t.outShape,"int32"),r=t.strideDepth,o=t.strideHeight,c=t.strideWidth,d=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,m=t.effectiveFilterDepth,y=t.effectiveFilterHeight,x=t.effectiveFilterWidth,v=t.padInfo.front,w=t.padInfo.top,O=t.padInfo.left;for(let l=0;l<t.batchSize;++l)for(let k=0;k<t.inChannels;++k)for(let I=0;I<t.outDepth;++I){const S=I*r-v;let N=S;for(;N<0;)N+=d;const T=Math.min(t.inDepth,m+S);for(let r=0;r<t.outHeight;++r){const m=r*o-w;let v=m;for(;v<0;)v+=h;const C=Math.min(t.inHeight,y+m);for(let o=0;o<t.outWidth;++o){const w=o*c-O;let A=w;for(;A<0;)A+=f;const j=Math.min(t.inWidth,x+w);let $=Number.NEGATIVE_INFINITY,E=-1;for(let t=N;t<T;t+=d){const n=t-S;for(let r=v;r<C;r+=h){const o=r-m;for(let c=A;c<j;c+=f){const d=c-w,h=e.get(l,t,r,c,k);h>=$&&($=h,E=n*y*x+o*y+d)}}}n.set(E,l,I,r,o,k)}}}return n}(n.bufferSync(input),m),x=m.strideDepth,v=m.strideHeight,w=m.strideWidth,O=m.dilationDepth,k=m.dilationHeight,I=m.dilationWidth,S=m.effectiveFilterDepth,N=m.effectiveFilterHeight,T=m.effectiveFilterWidth,C=S-1-m.padInfo.front,A=T-1-m.padInfo.left,j=N-1-m.padInfo.top,$=Object(l.Dd)(input.shape,"float32"),E=n.bufferSync(o);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let n=0;n<m.inDepth;++n)for(let r=0;r<m.inHeight;++r)for(let o=0;o<m.inWidth;++o){const c=n-C,l=r-j,d=o-A;let h=0;for(let n=0;n<S;n+=O){const r=(c+n)/x;if(!(r<0||r>=m.outDepth||Math.floor(r)!==r))for(let o=0;o<N;o+=k){const c=(l+o)/v;if(!(c<0||c>=m.outHeight||Math.floor(c)!==c))for(let l=0;l<T;l+=I){const f=(d+l)/w;if(f<0||f>=m.outWidth||Math.floor(f)!==f)continue;const mask=S*N*T-1-y.get(e,r,c,f,t)===n*N*T+o*T+l?1:0;if(0===mask)continue;h+=E.get(e,r,c,f,t)*mask}}}$.set(h,e,n,r,o,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}};const jm={kernelName:l.Ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input,output:output}=t,c=input;Nd([input,output],"maxPoolGrad");const{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=l.xd.computePool2DInfo(c.shape,d,h,1,f,m),x=n.data.get(c.dataId).values,v=Object(l.Dd)(y.outShape,c.dtype,Bh(x,c.shape,c.dtype,y).values),w=y.strideHeight,O=y.strideWidth,k=y.dilationHeight,I=y.dilationWidth,S=y.effectiveFilterHeight,N=y.effectiveFilterWidth,T=N-1-y.padInfo.left,C=S-1-y.padInfo.top,A=Object(l.Dd)(c.shape,"float32"),j=n.data.get(o.dataId).values,$=Object(l.Dd)(o.shape,"float32",j);for(let b=0;b<y.batchSize;++b)for(let e=0;e<y.inChannels;++e)for(let t=0;t<y.inHeight;++t)for(let n=0;n<y.inWidth;++n){const r=t-C,o=n-T;let c=0;for(let t=0;t<S;t+=k){const n=(r+t)/w;if(!(n<0||n>=y.outHeight||Math.floor(n)!==n))for(let r=0;r<N;r+=I){const l=(o+r)/O;if(l<0||l>=y.outWidth||Math.floor(l)!==l)continue;const mask=S*N-1-v.get(b,n,l,e)===t*N+r?1:0;if(0===mask)continue;c+=$.get(b,n,l,e)*mask}}A.set(c,b,t,n,e)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};const $m={kernelName:l.Pb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:o,strides:c,pad:d,includeBatchInIndex:h}=t,f=n;Nd(r,"MaxPoolWithArgmax");const m=f.data.get(r.dataId).values,y=l.xd.computePool2DInfo(r.shape,o,c,[1,1],d),[x,v]=function(e,t,n,r,o){const c=Ph(e,0,n,l.Af.computeStrides(t),o,"max"),d=Bh(e,t,n,o,!0,r);return[c.values,d.values]}(m,r.shape,r.dtype,h,y),w=f.write(x,y.outShape,r.dtype),O=f.write(v,y.outShape,r.dtype);return[{dataId:w,shape:y.outShape,dtype:r.dtype},{dataId:O,shape:y.outShape,dtype:"int32"}]}};const Em={kernelName:l.Rb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r,h=l.Af.parseAxisParam(c,o.shape),f=l.xd.computeOutAndReduceShapes(o.shape,h)[1],m=l.Af.sizeFromShape(f),y=[],x=n.makeTensorInfo([],"float32",new Float32Array([m]));y.push(x);const v=nh({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});y.push(v);const w=pf({inputs:{a:v,b:x},backend:n});y.push(w);const O=Wp({inputs:{x:w},backend:n,attrs:{axis:c,keepDims:d}});return y.forEach((e=>n.disposeIntermediateTensorInfo(e))),O}};const Rm={kernelName:l.Sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r;Nd(o,"min");const h=l.Af.parseAxisParam(c,o.shape);let f=h;const m=l.xd.getAxesPermutation(f,o.shape.length);let y=o;null!=m&&(y=kh({inputs:{x:o},backend:n,attrs:{perm:m}}),f=l.xd.getInnerMostAxes(f.length,o.shape.length)),l.xd.assertAxesAreInnerMostDims("min",f,y.shape.length);const[x,v]=l.xd.computeOutAndReduceShapes(y.shape,f),w=l.Af.sizeFromShape(v),O=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<O.length;++i){const e=i*w;let t=k[e];for(let n=0;n<w;++n){const r=k[e+n];(Number.isNaN(r)||r<t)&&(t=r)}O[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,O);if(d){const e=lh({inputs:{x:I},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}},Fm=Md(((e,t)=>Math.min(e,t))),Dm=ah(l.Tb,Fm),_m={kernelName:l.Tb,backendName:"cpu",kernelFunc:Dm};const Mm={kernelName:l.Ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{paddings:c,mode:d}=r;Nd(o,"mirrorPad");const h=c.map(((p,i)=>p[0]+o.shape[i]+p[1])),f=c.map((p=>p[0])),m=c.map(((p,i)=>p[0]+o.shape[i])),y="reflect"===d?0:1,x=n.data.get(o.dataId).values,v=o.shape.length,w=l.Af.computeStrides(o.shape),O=l.Af.sizeFromShape(h),k=h.length,I=l.Af.computeStrides(h),S=l.Af.getTypedArrayFromDType(o.dtype,O);for(let i=0;i<O;i++){let e=l.Af.indexToLoc(i,k,I);for(let i=0;i<k;i++)e[i]<f[i]?e[i]=2*f[i]-e[i]-y:e[i]>=m[i]&&(e[i]=2*(m[i]-1)-e[i]+y);e=e.map(((e,i)=>e-f[i]));const t=l.Af.locToIndex(e,v,w);S[i]=x[t]}return{dataId:n.write(S,h,o.dtype),shape:h,dtype:o.dtype}}},Lm=Md(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),zm=ah(l.Vb,Lm),Pm={kernelName:l.Vb,backendName:"cpu",kernelFunc:zm};function Bm(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{dim:c}=r,d=o.shape.length;let h=c;if(-1===h&&(h=d-1),h!==d-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${d} and dim was ${h}`);const f=l.Af.parseAxisParam([h],o.shape),m=Om({inputs:{x:o},backend:n,attrs:{reductionIndices:f,keepDims:!1}}),y=l.xd.expandShapeToKeepDim(m.shape,f),x=lh({inputs:{x:m},backend:n,attrs:{shape:y}}),a=gf({inputs:{a:o,b:x},backend:n}),b=af({inputs:{x:a},backend:n}),v=Wp({inputs:{x:b},backend:n,attrs:{axis:f,keepDims:!1}}),w=lh({inputs:{x:v},backend:n,attrs:{shape:y}}),O=pf({inputs:{a:b,b:w},backend:n});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),O}const Wm={kernelName:l.Jc,backendName:"cpu",kernelFunc:Bm};const Um={kernelName:l.Wb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{numSamples:c,seed:d,normalized:h}=r;Nd(o,"multinomial");const f=h?o:Bm({inputs:{logits:o},backend:n,attrs:{dim:-1}}),m=f.shape[0],y=f.shape[1],x=n.data.get(f.dataId).values,v=[m,c],w=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(v),"int32");for(let b=0;b<m;++b){const e=b*y,t=new Float32Array(y-1);t[0]=x[e];for(let n=1;n<t.length;++n)t[n]=t[n-1]+x[e+n];const n=xd.alea(d.toString()),r=b*c;for(let e=0;e<c;++e){const o=n();w[r+e]=t.length;for(let n=0;n<t.length;n++)if(o<t[n]){w[r+e]=n;break}}}return h||n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(v,"int32",w)}};function Vm(e,t,n){const r=l.Af.createScalarValue(-1,n);return Lp([],t,r,e,n)}const Gm={kernelName:l.Yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Nd(r,"neg");const o=n.data.get(r.dataId).values,[c,l]=Vm(o,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}},Hm=l.me.nonMaxSuppressionV3Impl;const qm={kernelName:l.Zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h}=r;Nd(o,"NonMaxSuppression");const f=n.data.get(o.dataId).values,m=n.data.get(c.dataId).values,{selectedIndices:y}=Hm(f,m,l,d,h);return n.makeTensorInfo([y.length],"int32",new Int32Array(y))}},Km=l.me.nonMaxSuppressionV4Impl;const Ym={kernelName:l.ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:f}=r;Nd(o,"NonMaxSuppressionPadded");const m=n.data.get(o.dataId).values,y=n.data.get(c.dataId).values,{selectedIndices:x,validOutputs:v}=Km(m,y,l,d,h,f);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([],"int32",new Int32Array([v]))]}},Xm=l.me.nonMaxSuppressionV5Impl;const Zm={kernelName:l.bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,softNmsSigma:f}=r;Nd(o,"NonMaxSuppressionWithScore");const m=n.data.get(o.dataId).values,y=n.data.get(c.dataId).values,x=l,v=d,w=h,O=f,{selectedIndices:k,selectedScores:I}=Xm(m,y,x,v,w,O);return[n.makeTensorInfo([k.length],"int32",new Int32Array(k)),n.makeTensorInfo([I.length],"float32",new Float32Array(I))]}},Jm=Md(((a,b)=>a!==b?1:0)),Qm=ah(l.cc,Jm,null,"bool"),eb={kernelName:l.cc,backendName:"cpu",kernelFunc:Qm};const tb={kernelName:l.dc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:o}=t,{depth:c,onValue:d,offValue:h}=r;Nd(o,"oneHot");const f=l.Af.sizeFromShape(o.shape),m=new Float32Array(f*c);m.fill(h);const y=n.data.get(o.dataId).values;for(let e=0;e<f;++e)y[e]>=0&&y[e]<c&&(m[e*c+y[e]]=d);return n.makeTensorInfo([...o.shape,c],"int32",m)}};function nb(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Qd({inputs:{input:r},backend:n}),t=nb({inputs:{x:e},backend:n}),o=lp({inputs:{input:r},backend:n}),i=nb({inputs:{x:o},backend:n}),c=Xd({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}return kf({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const rb={kernelName:l.nd,backendName:"cpu",kernelFunc:nb};const ab={kernelName:l.ec,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===o.dtype){const t=Qd({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),c=lp({inputs:{input:o},backend:r}),i=nb({inputs:{x:c},backend:r}),l=Xd({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(i),l}return kf({backend:r,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}};function sb(e){const{inputs:t,backend:n,attrs:r}=e,{axis:o}=r;if(1===t.length)return of({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const c=t[0].shape,d=t[0].dtype;t.forEach((e=>{l.Af.assertShapesMatch(c,e.shape,"All tensors passed to stack must have matching shapes"),l.Af.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const h=[],f=hp({inputs:t.map((e=>{const t=of({inputs:{input:e},backend:n,attrs:{dim:o}});return h.push(t),t})),backend:n,attrs:{axis:o}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const ib={kernelName:l.gc,backendName:"cpu",kernelFunc:sb};const ob={kernelName:l.hc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{paddings:c,constantValue:d}=r;Nd(o,"pad");const h=c.map(((p,i)=>p[0]+o.shape[i]+p[1])),f=c.map((p=>p[0])),m=n.data.get(o.dataId).values,y=l.Af.sizeFromShape(o.shape),x=o.shape.length,v=l.Af.computeStrides(o.shape),w=l.Af.sizeFromShape(h),O=h.length,k=l.Af.computeStrides(h),I=l.Af.getTypedArrayFromDType(o.dtype,w);0!==d&&I.fill(d);for(let i=0;i<y;i++){const e=l.Af.indexToLoc(i,x,v).map(((e,i)=>e+f[i]));I[l.Af.locToIndex(e,O,k)]=m[i]}return{dataId:n.write(I,h,o.dtype),shape:h,dtype:o.dtype}}},ub=Md(((a,b)=>Math.pow(a,b))),cb=ah(l.ic,ub),lb={kernelName:l.ic,backendName:"cpu",kernelFunc:cb};function db(e,t,n,r){const[o,c]=l.xd.computeOutAndReduceShapes(e,r),d=Object(l.zf)(t,"int32"),h=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(o),d),f=l.Af.sizeFromShape(c);for(let i=0;i<h.length;++i){const e=i*f;let t=1;for(let r=0;r<f;++r)t*=n[e+r];h[i]=t}return{outVals:h,outShape:o,outDtype:d}}const hb={kernelName:l.kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r;Nd(o,"prod");const h=o.shape.length,f=l.Af.parseAxisParam(c,o.shape),m=l.xd.getAxesPermutation(f,h);let y=f,x=o;const v=[];null!=m&&(x=kh({inputs:{x:o},backend:n,attrs:{perm:m}}),v.push(x),y=l.xd.getInnerMostAxes(y.length,h));const w=n.data.get(x.dataId).values,{outVals:O,outShape:k,outDtype:I}=db(x.shape,x.dtype,w,y);let S=k;return d&&(S=l.xd.expandShapeToKeepDim(k,f)),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(S,I,O)}};function pb(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return l.Af.makeZerosTypedArray(0,r);const o=Math.abs(Math.ceil((t-e)/n)),c=l.Af.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),c[0]=e;for(let i=1;i<c.length;i++)c[i]=c[i-1]+n;return c}const fb={kernelName:l.lc,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,dtype:c,step:l}=n,d=pb(r,o,l,c);return t.makeTensorInfo([d.length],c,d)}},mb=Ad(l.oc,(e=>1/e)),bb={kernelName:l.oc,backendName:"cpu",kernelFunc:mb};const gb={kernelName:l.sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o}=t,{alignCorners:c,halfPixelCenters:d,size:h}=r;Nd(o,"resizeBilinear");const f=l.Af.computeStrides(o.shape),[m,y]=h,[x,v,w,O]=o.shape,k=n.data.get(o.dataId).values,I=new Float32Array(l.Af.sizeFromShape([x,m,y,O])),S=[c&&m>1?v-1:v,c&&y>1?w-1:w],N=[c&&m>1?m-1:m,c&&y>1?y-1:y];let T=0;const C=S[0]/N[0],A=S[1]/N[1];for(let b=0;b<x;b++)for(let e=0;e<m;e++){let t;t=d?C*(e+.5)-.5:C*e;const n=Math.max(0,Math.floor(t)),r=t-n,o=Math.min(v-1,Math.ceil(t)),c=b*f[0]+n*f[1],l=b*f[0]+o*f[1];for(let e=0;e<y;e++){let t;t=d?A*(e+.5)-.5:A*e;const n=Math.max(0,Math.floor(t)),o=t-n,h=Math.min(w-1,Math.ceil(t)),m=c+n*f[2],y=l+n*f[2],x=c+h*f[2],v=l+h*f[2];for(let e=0;e<O;e++){const t=k[m+e],n=k[y+e],c=t+(k[x+e]-t)*o,l=c+(n+(k[v+e]-n)*o-c)*r;I[T++]=l}}}return n.makeTensorInfo([x,m,y,O],"float32",I)}};const yb={kernelName:l.tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:d}=r;Nd([c,o],"resizeBilinearGrad");const h=l.Af.computeStrides(o.shape),[f,m,y,x]=o.shape,[,v,w]=c.shape,output=new Float32Array(f*m*y*x),O=[d&&v>1?m-1:m,d&&w>1?y-1:y],k=[d&&v>1?v-1:v,d&&w>1?w-1:w],I=O[0]/k[0],S=O[1]/k[1],N=n.data.get(c.dataId).values;let T=0;for(let b=0;b<f;b++){const e=b*h[0];for(let t=0;t<v;t++){const n=t*I,r=Math.floor(n),o=Math.min(Math.ceil(n),m-1),c=e+r*h[1],l=e+o*h[1],d=n-r,f=1-d;for(let e=0;e<w;e++){const t=e*S,n=Math.floor(t),r=Math.min(Math.ceil(t),y-1),o=t-n,m=1-o,v=c+n*h[2],w=c+r*h[2],O=l+n*h[2],k=l+r*h[2],I=f*m,C=f*o,A=d*m,j=d*o;for(let e=0;e<x;e++){const t=N[T++];output[v+e]+=t*I,output[w+e]+=t*C,output[O+e]+=t*A,output[k+e]+=t*j}}}}return n.makeTensorInfo([f,y,m,x],"float32",output)}};const xb={kernelName:l.uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o}=t,{alignCorners:c,halfPixelCenters:d,size:h}=r;Nd(o,"resizeNearestNeighbor");const f=l.Af.computeStrides(o.shape),[m,y]=h,[x,v,w,O]=o.shape,k=n.data.get(o.dataId).values,output=new Float32Array(x*m*y*O),I=[c&&m>1?v-1:v,c&&y>1?w-1:w],S=[c&&m>1?m-1:m,c&&y>1?y-1:y],N=I[0]/S[0],T=I[1]/S[1];let C=0;for(let b=0;b<x;b++){const e=b*f[0];for(let t=0;t<m;t++){const n=d?N*(t+.5):N*t;let r=Math.min(v-1,c?Math.round(n):Math.floor(n));d&&(r=Math.max(0,r));const o=e+r*f[1];for(let e=0;e<y;e++){const t=d?T*(e+.5):T*e;let n=Math.min(w-1,c?Math.round(t):Math.floor(t));d&&(n=Math.max(0,n));const r=o+n*f[2];for(let e=0;e<O;e++){const t=k[r+e];output[C++]=t}}}}return n.makeTensorInfo([x,m,y,O],o.dtype,output)}};const vb={kernelName:l.vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:d}=r;Nd([c,o],"resizeNearestNeighborGrad");const h=l.Af.computeStrides(o.shape),f=l.Af.computeStrides(c.shape),[m,y,x,v]=o.shape,[,w,O]=c.shape,output=new Float32Array(m*y*x*v),k=n.data.get(c.dataId).values,I=[d&&w>1?y-1:y,d&&O>1?x-1:x],S=[d&&w>1?w-1:w,d&&O>1?O-1:O],N=I[0]/S[0],T=I[1]/S[1],C=1/N,A=1/T,j=2*Math.ceil(C)+2,$=2*Math.ceil(A)+2;for(let b=0;b<m;b++){const e=b*h[0];for(let t=0;t<y;t++){const n=e+t*h[1],r=Math.floor(t*C),o=Math.floor(r-j/2);for(let r=0;r<x;r++){const c=n+r*h[2],l=Math.floor(r*A),m=Math.floor(l-$/2);for(let n=0;n<v;n++){let l=0;for(let c=0;c<j;c++){const h=c+o;if(h<0||h>=w)continue;const v=e+h*f[1],I=h*N;if(t===Math.min(y-1,d?Math.round(I):Math.floor(I)))for(let e=0;e<$;e++){const t=e+m;if(t<0||t>=O)continue;const o=v+t*f[2],c=t*T;r===Math.min(x-1,d?Math.round(c):Math.floor(c))&&(l+=k[o+n])}}output[c+n]=l}}}}return n.makeTensorInfo(o.shape,o.dtype,output)}};const wb={kernelName:l.wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{dims:c}=r;Nd(o,"reverse");const d=o.shape.length,h=l.Af.parseAxisParam(c,o.shape);if(0===d)return Rd({inputs:{x:o},backend:n});const f=new l.fd(o.shape,o.dtype),m=n.bufferSync(o);for(let i=0;i<f.size;i++){const e=f.indexToLoc(i),t=e.slice();h.forEach((e=>t[e]=o.shape[e]-1-t[e])),f.set(m.get(...t),...e)}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ob={kernelName:l.xc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,{radians:r,fillValue:o,center:c}=t,d=n,output=l.Af.getTypedArrayFromDType(image.dtype,l.Af.sizeFromShape(image.shape)),[h,f,m,y]=image.shape,[x,v]=l.xd.getImageCenter(c,f,m),w=Math.sin(r),O=Math.cos(r),k=d.data.get(image.dataId).values;for(let e=0;e<h;e++){const t=e*m*f*y;for(let e=0;e<f;e++){const n=e*(m*y);for(let col=0;col<m;col++){const r=col*y;for(let c=0;c<y;c++){const l=[h,e,col,c],d=l[2],I=l[1];let S=(d-x)*O-(I-v)*w,N=(d-x)*w+(I-v)*O;S=Math.round(S+x),N=Math.round(N+v);let T=o;if("number"!=typeof o&&(T=3===c?255:o[c]),S>=0&&S<m&&N>=0&&N<f){T=k[t+N*(m*y)+S*y+c]}output[t+n+r+c]=T}}}}return{dataId:d.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},kb=Ad(l.yc,(e=>{const base=Math.floor(e);return e-base<.5?Math.floor(e):e-base>.5?Math.ceil(e):base%2==0?base:base+1})),Ib={kernelName:l.yc,backendName:"cpu",kernelFunc:kb},Sb=Gd((e=>1/Math.sqrt(e))),Nb=jd(l.zc,Sb),Tb={kernelName:l.zc,backendName:"cpu",kernelFunc:Nb};function Cb(e,t,n,r,o,c,d,h,f,m){const y=[r/o,o],x=e.values,v=t.values;if(0===r)return Object(l.Dd)(n,t.dtype);const w=Object(l.Dd)(y,t.dtype);"string"==typeof f||"number"==typeof f?w.values.fill(f):"boolean"==typeof f&&w.values.fill(+f);for(let i=0;i<c;i++){const e=[];let c=0;for(let t=0;t<d;t++){const n=x[i*d+t];e.push(n),c+=n*h[t]}if(c<0||c>=r/o)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let e=0;e<o;e++)m?w.values[c*o+e]+=v[i*o+e]:w.values[c*o+e]=0===t.rank?v[0]:v[i*o+e]}return w}const Ab={kernelName:l.Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:o,updates:c}=t,{shape:d}=r,{sliceRank:h,numUpdates:f,sliceSize:m,strides:y,outputSize:x}=l.xd.calculateShapes(c,o,d),v=Cb(n.bufferSync(o),n.bufferSync(c),d,x,m,f,h,y,0,!0);return n.makeTensorInfo(d,v.dtype,v.values)}};function jb(e,t){let n=0,r=e.length,o=0;for(;n<r;)o=Math.floor((n+r)/2),e[o]<t?n=o+1:r=o;return r}function $b(e,t){let n=0,r=e.length,o=0;for(;n<r;)o=Math.floor((n+r)/2),e[o]<=t?n=o+1:r=o;return r}const Eb={kernelName:l.Bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:o,values:c}=t,{side:d}=r,output=function(e,t,n,r,o,c){const output=l.Af.getArrayFromDType("int32",n*o);for(let b=0;b<n;++b){const n=e.slice(b*r,(b+1)*r),l=b*o;for(let i=0;i<o;++i)output[l+i]="left"===c?jb(n,t[i+l]):$b(n,t[i+l])}return output}(n.data.get(o.dataId).values,n.data.get(c.dataId).values,o.shape[0],o.shape[1],c.shape[1],d);return n.makeTensorInfo(c.shape,"int32",output)}};const Rb={kernelName:l.Cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:o,e:c}=t;Nd([r,o,c],"select");const d=r.shape.length,h=n.data.get(r.dataId).values,f=n.data.get(o.dataId).values,m=n.data.get(c.dataId).values,y=Object(l.zf)(o.dtype,c.dtype),x=l.Af.makeZerosTypedArray(l.Af.sizeFromShape(o.shape),y);let v=0;const w=0===d||d>1||1===o.shape.length?1:l.Af.sizeFromShape(o.shape.slice(1));for(let i=0;i<h.length;i++)for(let e=0;e<w;e++)1===h[i]?x[v++]=f[i]:x[v++]=m[i];return n.makeTensorInfo(o.shape,y,x)}},Fb=l.xd.SELU_SCALEALPHA,Db=l.xd.SELU_SCALE,_b=Ad(l.Dc,(e=>e>=0?Db*e:Fb*(Math.exp(e)-1))),Mb={kernelName:l.Dc,backendName:"cpu",kernelFunc:_b},Lb=Ad(l.Fc,(e=>e<0?-1:e>0?1:0)),zb={kernelName:l.Fc,backendName:"cpu",kernelFunc:Lb},Pb=Ad(l.Gc,(e=>Math.sin(e))),Bb={kernelName:l.Gc,backendName:"cpu",kernelFunc:Pb},Wb=Ad(l.Hc,(e=>Math.sinh(e))),Ub={kernelName:l.Hc,backendName:"cpu",kernelFunc:Wb},Vb=Math.log(1.1920928955078125e-7)+2,Gb=Ad(l.Kc,(e=>{const t=e>-Vb,n=e<Vb,r=Math.exp(e);let o;return o=n?r:t?e:Math.log(1+r),o})),Hb={kernelName:l.Kc,backendName:"cpu",kernelFunc:Gb};const qb={kernelName:l.Lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockShape:c,paddings:d}=r;Nd([o],"spaceToBatchND");const h=l.Af.sizeFromShape(c),f=[[0,0]];f.push(...d);for(let i=1+c.length;i<o.shape.length;++i)f.push([0,0]);const m=ob.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:f,constantValue:0}}),y=l.xd.getReshaped(m.shape,c,h,!1),x=l.xd.getPermuted(y.length,c.length,!1),v=l.xd.getReshapedPermuted(m.shape,c,h,!1),w=lh({inputs:{x:m},backend:n,attrs:{shape:y}}),O=kh({inputs:{x:w},backend:n,attrs:{perm:x}}),k=lh({inputs:{x:O},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(O),k}};function Kb(e,t,n,r,o,c,d){const h=t[0],f=c[0],m=new Array(f),y=new Array(h),x=t[1];if(0===f){if(0!==h)throw new Error(l.xd.getSparseFillEmptyRowsIndicesDenseShapeMismatch(h));return[l.Af.getArrayFromDType(n,0),[0,x],l.Af.getArrayFromDType(o,0),m,y]}let v=!0,w=0;const O=new Array(f).fill(0);for(let i=0;i<h;++i){const t=e[i*x];if(t<0)throw new Error(l.xd.getSparseFillEmptyRowsNegativeIndexErrorMessage(i,t));if(t>=f)throw new Error(l.xd.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(i,t,f));++O[t],v=v&&t>=w,w=t}let k=!0;for(let e=0;e<f;++e){const t=0===O[e];m[e]=t,k=k&&!t,O[e]=Math.max(O[e],1),e>0&&(O[e]+=O[e-1])}if(k&&v){const t=e,n=r;for(let i=0;i<h;++i)y[i]=i;return[t,[h,x],n,m,y]}{const t=O[f-1],c=l.Af.getArrayFromDType(n,t*x),v=l.Af.getArrayFromDType(o,t),w=new Array(f).fill(0);for(let i=0;i<h;++i){const t=e[i*x],n=w[t],o=(0===t?0:O[t-1])+n;w[t]++;for(let t=0;t<x;++t)c[o*x+t]=e[i*x+t];v[o]=r[i],y[i]=o}for(let e=0;e<f;++e){if(0===w[e]){const t=0===e?0:O[e-1];c[t*x+0]=e;for(let col=1;col<x;++col)c[t*x+col]=0;v[t]=d}}return[c,[t,x],v,m,y]}}const Yb={kernelName:l.Mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:o,denseShape:c,defaultValue:l}=t;if(1!==c.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${c.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Values must be a vector, saw:\n        ${o.shape}`);if(0!==l.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${l.shape}`);const d=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,f=n.data.get(c.dataId).values,m=n.data.get(l.dataId).values[0],[y,x,v,w,O]=Kb(d,r.shape,r.dtype,h,o.dtype,f,m);return[n.makeTensorInfo(x,r.dtype,y),n.makeTensorInfo([x[0]],o.dtype,v),n.makeTensorInfo([w.length],"bool",new Uint8Array(w.map((e=>Number(e))))),n.makeTensorInfo([O.length],r.dtype,new Int32Array(O))]}};function Xb(e,t,n,r,o){const c=l.Af.sizeFromShape(r),d=t[0],h=o.length,f=[];let m=1,y=-1;for(let e=0;e<h;++e){const t=o[e];if(-1===t){if(-1!==y)throw new Error(l.xd.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y,e));y=e,f.push(1)}else{if(t<0)throw new Error(l.xd.getSparseReshapeNegativeOutputDimErrorMessage(e,t));m*=t,f.push(t)}}if(-1!==y){if(m<=0)throw new Error(l.xd.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(c/m);if(m*e!==c)throw new Error(l.xd.getSparseReshapeInputOutputMultipleErrorMessage(r,f));f[y]=e}if(l.Af.sizeFromShape(f)!==c)throw new Error(l.xd.getSparseReshapeInputOutputMismatchErrorMessage(r,f));const x=r.length,v=[];if(x>0){v[x-1]=1;for(let e=x-2;e>=0;--e)v[e]=v[e+1]*r[e+1]}const w=[];if(h>0){w[h-1]=1;for(let e=h-2;e>=0;--e)w[e]=w[e+1]*f[e+1]}const O=l.Af.getArrayFromDType(n,d*h);for(let i=0;i<d;++i){let t=0;for(let n=0;n<x;++n)t+=e[i*x+n]*v[n];for(let e=0;e<h;++e)O[i*h+e]=Math.trunc(t/w[e]),t%=w[e]}return[O,[d,h],f]}const Zb={kernelName:l.Nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:c}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${o.shape}`);if(1!==c.shape.length)throw new Error(`Target shape should be a vector but received shape ${c.shape}`);const l=Array.from(n.data.get(o.dataId).values),d=n.data.get(r.dataId).values,h=Array.from(n.data.get(c.dataId).values),[f,m,y]=Xb(d,r.shape,r.dtype,l,h);return[n.makeTensorInfo(m,r.dtype,f),n.makeTensorInfo([y.length],c.dtype,new Int32Array(y))]}};function Jb(input,e,t,n,r,o=!1,c=0){const d=n.length,h=[e[0],input.length/e[0]],f=h[1],m=d>0?r[d-1]+1:0;if(m<0)throw new Error(l.xd.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const y=e.slice();y[0]=m;const x=y.reduce(((e,t)=>e*t),1),output=l.Af.getArrayFromDType(t,x);if(0===d)return m>0&&output.fill(c),[output,y];if(m<=0)throw new Error(l.xd.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let v=0,w=1,O=0,k=r[v];for(;;){let e=0;if(w<d){if(e=r[w],k===e){++w;continue}if(k>=e)throw new Error(l.xd.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(k<0||k>=m)throw new Error(l.xd.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(k,m));k>O&&output.fill(c,O*f,k*f);for(let i=v;i<w;++i){const e=n[i];if(e<0||e>=h[0])throw new Error(l.xd.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(i,n[i],h[0]));for(let t=0;t<f;t++)output[k*f+t]+=input[e*f+t]}if(o)for(let e=0;e<f;e++)output[k*f+e]/=w-v;if(v=w,++w,O=k+1,k=e,w>d)break}return O<m&&output.fill(c,O*f,m*f),[output,y]}const Qb={kernelName:l.Oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const c=n.data.get(data.dataId).values,l=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,[h,f]=Jb(c,data.shape,data.dtype,l,d,!0);return n.makeTensorInfo(f,data.dtype,h)}};const eg={kernelName:l.Pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const c=n.data.get(data.dataId).values,l=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,[h,f]=Jb(c,data.shape,data.dtype,l,d);return n.makeTensorInfo(f,data.dtype,h)}};const tg={kernelName:l.Qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:o,sparseValues:c,defaultValue:d}=t,{outputShape:h}=r,{sliceRank:f,numUpdates:m,sliceSize:y,strides:x,outputSize:v}=l.xd.calculateShapes(c,o,h),w=!1,O=n.bufferSync(o);let k;switch(c.dtype){case"bool":k=Cb(O,n.bufferSync(c),h,v,y,m,f,x,Boolean(n.data.get(d.dataId).values[0]),w);break;case"float32":k=Cb(O,n.bufferSync(c),h,v,y,m,f,x,n.data.get(d.dataId).values[0],w);break;case"int32":k=Cb(O,n.bufferSync(c),h,v,y,m,f,x,n.data.get(d.dataId).values[0],w);break;case"string":k=Cb(O,n.bufferSync(c),h,v,y,m,f,x,l.Af.decodeString(n.data.get(d.dataId).values[0]),w);break;default:throw new Error(`Unsupported type ${c.dtype}`)}return n.makeTensorInfo(h,k.dtype,k.values)}};const ng={kernelName:l.Rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{numOrSizeSplits:c,axis:d}=r,h=l.Af.parseAxisParam(d,o.shape)[0],f=l.xd.prepareSplitSize(o,c,h),m=new Array(o.shape.length).fill(0),y=o.shape.slice();return f.map((s=>{const e=[...y];e[h]=s;const t=Yh({inputs:{x:o},backend:n,attrs:{begin:m,size:e}});return m[h]+=s,t}))}},rg=Gd((e=>Math.sqrt(e))),ag=Ad(l.Sc,(e=>Math.sqrt(e))),sg={kernelName:l.Sc,backendName:"cpu",kernelFunc:ag},ig={kernelName:l.Tc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Nd(n,"square");const o=r.data.get(n.dataId).values,c=new Float32Array(o.length);for(let i=0;i<o.length;++i){const e=o[i];c[i]=e*e}return{dataId:r.write(c,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},og=Md(((a,b)=>{const e=a-b;return e*e})),ug=ah(l.Uc,og),cg={kernelName:l.Uc,backendName:"cpu",kernelFunc:ug},lg=Ad(l.Vc,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),dg={kernelName:l.Vc,backendName:"cpu",kernelFunc:lg};function hg(e,t,n,r){const o=Object(l.Dd)(e,t.dtype);for(let i=0;i<o.size;i++){const e=o.indexToLoc(i),c=new Array(e.length);for(let t=0;t<c.length;t++)c[t]=e[t]*n[t]+r[t];o.set(t.get(...c),...e)}return o}const pg={kernelName:l.Wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{begin:c,end:d,strides:h,beginMask:f,endMask:m,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:v}=r;Nd(o,"stridedSlice");const{finalShapeSparse:w,finalShape:O,isIdentity:k,sliceDim0:I,isSimpleSlice:S,begin:N,end:T,strides:C}=l.ef.sliceInfo(o.shape,c,d,h,f,m,y,x,v);let A;if(k)A=lh({inputs:{x:o},backend:n,attrs:{shape:O}});else if(I||S){l.Af.assert(o.shape.length>=1,(()=>`Input must have rank at least 1, got: ${o.shape.length}`));const e=l.ef.computeOutShape(N,T,C),t=Yh({inputs:{x:o},backend:n,attrs:{begin:N,size:e}});A=lh({inputs:{x:t},backend:n,attrs:{shape:O}}),n.disposeIntermediateTensorInfo(t)}else{const e=hg(w,n.bufferSync(o),C,N);A=n.makeTensorInfo(O,e.dtype,e.values)}return A}};class fg{constructor(e,t,n,r,o,c){this.separator=l.Af.encodeString(e),this.nGramWidths=t,this.leftPad=l.Af.encodeString(n),this.rightPad=l.Af.encodeString(r),this.padWidth=o,this.preserveShort=c}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(data,e,output,t,n,r){for(let o=0;o<n;++o){const c=this.getPadWidth(r),l=Math.max(0,c-o),d=Math.max(0,c-(n-(o+1))),h=r-(l+d),f=e+(l>0?0:o-c);let m=0;m+=l*this.leftPad.length;for(let e=0;e<h;++e)m+=data[f+e].length;m+=d*this.rightPad.length;m+=(l+d+h-1)*this.separator.length,output[t+o]=new Uint8Array(m);const y=output[t+o];let x=0;const v=e=>e.forEach((e=>y[x++]=e));for(let e=0;e<l;++e)v(this.leftPad),v(this.separator);for(let e=0;e<h-1;++e)v(data[f+e]),v(this.separator);if(h>0){v(data[f+h-1]);for(let e=0;e<d;++e)v(this.separator),v(this.rightPad)}else{for(let e=0;e<d-1;++e)v(this.rightPad),v(this.separator);v(this.rightPad)}}}compute(data,e){const t=data.length,n=e.length;if(n>0){let r=e[0];if(0!==r)throw new Error(`First split value must be 0, got ${r}`);for(let i=1;i<n;++i){let n=e[i]>=r;if(n=n&&e[i]<=t,!n)throw new Error(`Invalid split value ${e[i]}, must be in [${r}, ${t}]`);r=e[i]}if(r!==t)throw new Error(`Last split value must be data size. Expected ${t}, got ${r}`)}const r=n-1,o=l.Af.getArrayFromDType("int32",n);if(0===t||0===n){const e=new Array(t);for(let i=0;i<=r;++i)o[i]=0;return[e,o]}o[0]=0;for(let i=1;i<=r;++i){const t=e[i]-e[i-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),o[i]=o[i-1]+n}const c=new Array(o[r]);for(let i=0;i<r;++i){const t=e[i];let n=o[i];if(this.nGramWidths.forEach((r=>{const o=e[i+1]-e[i],l=this.getNumNGrams(o,r);this.createNGrams(data,t,c,n,l,r),n+=l})),this.preserveShort&&n===o[i]){const r=e[i+1]-e[i];if(0===r)continue;const o=r+2*this.padWidth,l=1;this.createNGrams(data,t,c,n,l,o)}}return[c,o]}}function mg(data,e,t,n,r,o,c,l){return new fg(t,n,r,o,c,l).compute(data,e)}const bg={kernelName:l.Xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:o,nGramWidths:c,leftPad:l,rightPad:d,padWidth:h,preserveShortSequences:f}=r,{data:data,dataSplits:m}=t,y=n.data.get(data.dataId).values,x=n.data.get(m.dataId).values,[v,w]=mg(y,x,o,c,l,d,h,f);return[n.makeTensorInfo([v.length],"string",v),n.makeTensorInfo(m.shape,"int32",w)]}};function gg(e,t,n,r){if(!e.length)return;if(0===t.length){for(let i=0;i<e.length;++i)r.push(e.subarray(i,i+1));return}if(1===t.length){const o=t[0];let c=e.indexOf(o);for(;-1!==c;){const t=e.subarray(0,c);n&&0===t.length||r.push(t),c=(e=e.subarray(c+1)).indexOf(o)}return void(n&&0===e.length||r.push(e))}let o=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(o,i);n&&0===t.length||r.push(t),o=i+1}}function yg(input,e,t){const n=input.length,r=[];let o=0,c=0;const d=new Array(n);for(let i=0;i<n;++i){const n=r.length;gg(input[i],e,t,r);const l=r.length-n;d[i]=l,o+=l,c=Math.max(c,l)}const h=l.Af.getArrayFromDType("int32",2*o),f=new Array(o),m=[n,c];let y=0;for(let i=0;i<n;++i)for(let e=0;e<d[i];++e)h[2*y]=i,h[2*y+1]=e,f[y]=r[y],++y;return[h,f,m]}const xg={kernelName:l.Yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:o}=r,{input:input,delimiter:c}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(1!==input.shape.length)throw new Error(`Input must be a vector, got shape: ${input.shape}`);if(0!==c.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${c.shape}`);const l=n.data.get(input.dataId).values,d=n.data.get(c.dataId).values[0],[h,f,m]=yg(l,d,o),y=f.length;return[n.makeTensorInfo([y,2],"int32",h),n.makeTensorInfo([y],"string",f),n.makeTensorInfo([2],"int32",new Int32Array(m))]}};function vg(input,e){const output=l.Af.getArrayFromDType("int32",input.length);for(let i=0;i<input.length;++i)output[i]=l.Af.fingerPrint64(input[i]).modulo(e).getLowBitsUnsigned();return output}const wg={kernelName:l.Zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:o}=r,{input:input}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const output=vg(n.data.get(input.dataId).values,o);return n.makeTensorInfo(input.shape,"int32",output)}},Og=Ad(l.cd,(e=>Math.tan(e))),kg={kernelName:l.cd,backendName:"cpu",kernelFunc:Og},Ig=Ad(l.dd,(e=>Math.tanh(e))),Sg={kernelName:l.dd,backendName:"cpu",kernelFunc:Ig};function Ng(e,t){const n=new Array(e.rank);for(let i=0;i<n.length;i++)n[i]=e.shape[i]*t[i];const r=Object(l.Dd)(n,e.dtype);for(let i=0;i<r.values.length;++i){const t=r.indexToLoc(i),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const o=e.locToIndex(n);r.values[i]=e.values[o]}return r}const Tg={kernelName:l.gd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reps:c}=r;Nd(o,"tile");const l=Ng(n.bufferSync(o),c);return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Cg=(a,b)=>{const e=b.value-a.value;return 0===e?a.index-b.index:e};function Ag(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const o=r-n+1,i=t-n+1,c=Math.log(o),s=.5*Math.exp(2*c/3),l=.5*Math.sqrt(c*s*(o-s)/o)*Math.sign(i-o/2);Ag(e,t,Math.max(n,Math.floor(t-i*s/o+l)),Math.min(r,Math.floor(t+(o-i)*s/o+l)))}const o=e[t];let i=n,c=r;for(l.Af.swap(e,n,t),Cg(e[r],o)>0&&l.Af.swap(e,n,r);i<c;){for(l.Af.swap(e,i,c),i++,c--;Cg(e[i],o)<0;)i+=1;for(;Cg(e[c],o)>0;)c-=1}0===Cg(e[n],o)?l.Af.swap(e,n,c):(c+=1,l.Af.swap(e,c,r)),c<=t&&(n=c+1),t<=c&&(r=c-1)}}function jg(e,t,n,r,o){const c=t[t.length-1],[d,h]=[e.length/c,c],f=l.Af.getTypedArrayFromDType(n,d*r),m=l.Af.getTypedArrayFromDType("int32",d*r);for(let b=0;b<d;b++){const t=b*h,n=e.subarray(t,t+h);let c=new Array(n.length);n.forEach(((e,t)=>c[t]={value:e,index:t})),r<c.length&&(Ag(c,r),c=c.slice(0,r)),o&&c.sort(Cg);const l=b*r,d=f.subarray(l,l+r),y=m.subarray(l,l+r);for(let i=0;i<r;i++)d[i]=c[i].value,y[i]=c[i].index}const y=t.slice();return y[y.length-1]=r,[Object(l.Dd)(y,n,f),Object(l.Dd)(y,"int32",m)]}const $g={kernelName:l.hd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{k:c,sorted:l}=r;Nd(o,"topk");const d=n.data.get(o.dataId).values,[h,f]=jg(d,o.shape,o.dtype,c,l);return[n.makeTensorInfo(h.shape,h.dtype,h.values),n.makeTensorInfo(f.shape,f.dtype,f.values)]}};const Eg={kernelName:l.id,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:image,transforms:o}=t,{interpolation:c,fillMode:d,fillValue:h,outputShape:f}=n,[m,y,x,v]=image.shape,[w,O]=null!=f?f:[y,x],k=[m,w,O,v],I=l.Af.computeStrides(image.shape),S=I[0],N=I[1],T=I[2],C=l.Af.getTypedArrayFromDType(image.dtype,l.Af.sizeFromShape(k));C.fill(h);const A=r.data.get(image.dataId).values,j=r.data.get(o.dataId).values;for(let b=0;b<m;++b){const e=1===o.shape[0]?j:j.subarray(8*b,8*b+8);for(let t=0;t<w;++t)for(let n=0;n<O;++n)for(let r=0;r<v;++r){let o;const l=e[6]*n+e[7]*t+1;if(0===l)continue;const f=(e[0]*n+e[1]*t+e[2])/l,m=(e[3]*n+e[4]*t+e[5])/l,v=Rg(f,x,d),w=Rg(m,y,d);switch(c){case"nearest":o=Dg(A,y,x,S,N,T,b,w,v,r,h);break;case"bilinear":o=_g(A,y,x,S,N,T,b,w,v,r,h);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${c}`)}C[b*S+t*N+n*T+r]=o}return r.makeTensorInfo(k,image.dtype,C)}return{dataId:r.write(C,k,image.dtype),shape:image.shape,dtype:image.dtype}}};function Rg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return l.Af.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return l.Af.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return l.Af.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Fg(e,t,n,r,o,c,l,d,h,f,m){return 0<=d&&d<t&&0<=h&&h<n?e[l*r+d*o+h*c+f]:m}function Dg(e,t,n,r,o,c,l,d,h,f,m){return Fg(e,t,n,r,o,c,l,Math.round(d),Math.round(h),f,m)}function _g(e,t,n,r,o,c,l,d,h,f,m){const y=Math.floor(d),x=Math.floor(h),v=y+1,w=x+1;return(v-d)*((w-h)*Fg(e,t,n,r,o,c,l,y,x,f,m)+(h-x)*Fg(e,t,n,r,o,c,l,y,w,f,m))+(d-y)*((w-h)*Fg(e,t,n,r,o,c,l,v,x,f,m)+(h-x)*Fg(e,t,n,r,o,c,l,v,w,f,m))}function Mg(e,t,n,r){const o=l.Af.parseAxisParam(t,n)[0],c=[1,n[0],1];for(let i=0;i<o;i++)c[0]*=n[i];c[1]=n[o];for(let i=o+1;i<n.length;i++)c[2]*=n[i];const d={},h=new Int32Array(n[o]),f=new l.fd(c,r,e),m=[],y=1===c[0]&&1===c[2];for(let i=0;i<n[o];i++){let element;if(y)element=e[i].toString();else{const e=[];for(let t=0;t<c[0];t++)for(let n=0;n<c[2];n++)e.push(f.get(t,i,n));element=e.join(",")}if(void 0!==d[element])h[i]=d[element];else{const e=Object.keys(d).length;d[element]=e,h[i]=e,m.push(i)}}const x=c.slice();x[1]=Object.keys(d).length;const v=new l.fd(x,r);m.forEach(((e,i)=>{for(let t=0;t<c[0];t++)for(let n=0;n<c[2];n++)v.set(f.get(t,e,n),t,i,n)}));const w=n.slice();return w[o]=x[1],{outputValues:v.values,outputShape:w,indices:h}}const Lg={kernelName:l.kd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:c}=t;Nd(c,"unique");const l=r.data.get(c.dataId).values,{outputValues:d,outputShape:h,indices:f}=Mg(l,o,c.shape,c.dtype);return[r.makeTensorInfo(h,c.dtype,d),r.makeTensorInfo([f.length],"int32",f)]}};const zg={kernelName:l.ld,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:c}=r;c<0&&(c+=o.shape.length);const l=o.shape.length,d=o.shape[c],h=new Array(l-1);let f=0;for(let i=0;i<l;i++)i!==c&&(h[f++]=o.shape[i]);const m=new Array(l).fill(0),y=o.shape.slice();y[c]=1;const x=new Array(d);for(let i=0;i<x.length;i++){m[c]=i;const e=Yh({inputs:{x:o},backend:n,attrs:{begin:m,size:y}});x[i]=lh({inputs:{x:e},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(e)}return x}};const Pg={kernelName:l.md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,segmentIds:c}=t,{numSegments:d}=r;Nd(o,"unsortedSegmentSum");const h=[],f=[],m=o.shape.length-c.shape.length;let y=c;for(let i=0;i<m;++i){const e=of({inputs:{input:y},backend:n,attrs:{dim:i+1}});y=e,f.push(e)}for(let i=0;i<d;++i){const e=l.Af.createScalarValue(i,"int32"),t=n.makeTensorInfo([],"int32",e),mask=qp({inputs:{a:t,b:y},backend:n}),r=nh({inputs:{x:mask},backend:n,attrs:{dtype:"float32"}}),c=Pp({inputs:{a:r,b:o},backend:n}),d=Wp({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});h.push(d),f.push(t),f.push(mask),f.push(r),f.push(c),f.push(d)}const x=sb({inputs:h,backend:n,attrs:{axis:0}});return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Bg=[fh,bh,yh,vh,ch,wh,Sh,Nh,Th,Ch,jh,Eh,Fh,Mh,zh,Uh,Vh,Gh,Hh,ph,qh,Zh,ep,tp,rh,sp,op,Zd,up,pp,mp,bp,gp,yp,xp,vp,Op,Ip,Sp,Np,Tp,Cp,Ap,$p,Ep,Rp,Fp,Dp,_p,Mp,Vp,Ed,Gp,Kp,nf,sf,uf,df,Of,If,Sf,Cf,$f,Ef,Rf,Df,Mf,Pf,Uf,Fd,Vf,dp,Hf,Kf,Xf,_d,Qf,rm,sm,um,lm,pm,mm,ym,xm,vm,km,Nm,Tm,Cm,Am,jm,$m,Em,Rm,_m,Mm,Pm,Um,Bp,Gm,qm,Ym,Zm,eb,tb,ab,ib,ob,lb,Pd,hb,fb,eh,ff,bb,Wd,Vd,dh,gb,yb,xb,vb,wb,Ob,Ib,Tb,Ab,Eb,Rb,Mb,Kd,zb,Bb,Ub,Xh,Wm,Hb,qb,Yb,Zb,Qb,eg,tg,ng,sg,ig,cg,dg,pg,bg,xg,wg,yf,Up,kg,Sg,Tg,$g,Eg,Ih,Lg,zg,Pg,rb];for(const e of Bg)Object(l.Pe)(e);const Wg={},Ug={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Vg(e,t){if(!(e in Wg)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const canvas=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(canvas.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Wg[e]}),!1),1===e)return canvas.getContext("webgl",Ug)||canvas.getContext("experimental-webgl",Ug);return canvas.getContext("webgl2",Ug)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Wg[e]=n}const n=Wg[e];return null==n||n.isContextLost()?(delete Wg[e],Vg(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Wg[e])}var Gg,Hg,qg;function Kg(e,t){return[t,e]}function Yg(e){const t=l.Af.sizeFromShape(e),n=Math.ceil(t/4);return l.Af.sizeToSquarishShape(n)}function Xg(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Zg(e,t){const n=e;let r,o,c,d,h,f,m,y,x,v;return 2===Object(l.Yd)().getNumber("WEBGL_VERSION")?(r=n.R32F,o=n.R16F,c=n.RGBA16F,d=n.RGBA32F,h=n.RED,m=4,y=1,x=n.HALF_FLOAT,v=n.FLOAT,f=n.RGBA8):(r=e.RGBA,o=e.RGBA,c=e.RGBA,d=n.RGBA,h=e.RGBA,m=4,y=4,x=null!=t?t.HALF_FLOAT_OES:null,v=e.FLOAT,f=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:c,internalFormatPackedFloat:d,textureFormatFloat:h,downloadTextureFormat:f,downloadUnpackNumChannels:m,defaultNumChannels:y,textureTypeHalfFloat:x,textureTypeFloat:v}}function Jg(e,t){const n=t();return Object(l.Yd)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Gg||(Gg={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Hg||(Hg={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(qg||(qg={}));function Qg(e){return!!(Object(l.Yd)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function ey(e,t){return cy(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const ty=/ERROR: [0-9]+:([0-9]+):/g;function ny(e,t){const n=ty.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],o=e.split("\n"),c=o.length.toString().length+2,d=o.map(((line,e)=>l.Af.rightPad((e+1).toString(),c)+line));let h=0;for(let i=0;i<d.length;i++)h=Math.max(d[i].length,h);const f=d.slice(0,r-1),m=d.slice(r-1,r),y=d.slice(r);console.log(f.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${l.Af.rightPad(m[0],h)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(y.join("\n"))}function ry(e,t){if(Jg(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function ay(e,t,n,r,o,c,l){const d=e.getAttribLocation(t,n);return-1!==d&&(Jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),Jg(e,(()=>e.vertexAttribPointer(d,o,e.FLOAT,!1,c,l))),Jg(e,(()=>e.enableVertexAttribArray(d))),!0)}function sy(e,t,n,r){Jg(e,(()=>function(e,t,n){ly(e,n),Jg(e,(()=>e.activeTexture(e.TEXTURE0+n))),Jg(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),Jg(e,(()=>e.uniform1i(n,r)))}function iy(e,t,n){Jg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Jg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function oy(e,t){Jg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Jg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function uy(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function cy(e,t,n){const r=Jg(e,(()=>t()));if(null==r)throw new Error(n);return r}function ly(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function dy(e,t=2){return l.Af.sizeFromShape(e.slice(0,e.length-t))}function hy(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function py(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[dy(e),...hy(e)]),t}function fy(e){return e%2==0}function my(e,t){if(e=e.slice(-2),t=t.slice(-2),l.Af.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(fy(n)&&fy(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&fy(e[0])&&fy(t[0])}let by,gy;function yy(e,t){return null!=e.getExtension(t)}function xy(e){try{if(null!=Vg(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function vy(e){if(0===e)return!1;const t=Vg(e);if(1!==e){if(yy(t,"EXT_color_buffer_float"))return wy(t);const e="EXT_color_buffer_half_float";if(yy(t,e)){const n=t.getExtension(e);return function(e,t){const n=Zg(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const o=1,c=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,o,c,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const l=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,l),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const d=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(l),d}(t,n)}return!1}if(!yy(t,"OES_texture_float"))return!1;if(!yy(t,"WEBGL_color_buffer_float"))return!1;return wy(t)}function wy(e){const t=Zg(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),o}function Oy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&l.Af.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const ky=Object(l.Yd)();function Iy(){let e,t,n,r,o,output,c,d,h,f;return 2===Object(l.Yd)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",o="texture",output="outputColor",c="out vec4 outputColor;",d="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",h="",f="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",o="texture2D",output="gl_FragColor",c="",d="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",h="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",f="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:o,output:output,defineOutput:c,defineSpecialNaN:d,defineSpecialInf:h,defineRound:f}}function Sy(e,t,n="index"){const r=l.Af.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${t}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${t}`:`index -= ${e[i]} * ${t}`};`)).join("")}function Ny(e,t,n="index"){const r=l.Af.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / outShapeStrides[${i}]`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * outShapeStrides[${i}]`:`index -= ${e[i]} * outShapeStrides[${i}]`};`)).join("")}function Ty(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),o=new Array(n-1);o[n-2]=r[n-1];for(let i=n-3;i>=0;--i)o[i]=`(${o[i+1]} * ${r[i+1]})`;return o}(e.map(((e,i)=>i)),t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${r[i]}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`};`)).join("")}function Cy(e){const t=l.Af.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}ky.registerFlag("HAS_WEBGL",(()=>ky.getNumber("WEBGL_VERSION")>0)),ky.registerFlag("WEBGL_VERSION",(()=>xy(2)?2:xy(1)?1:0)),ky.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),ky.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===ky.get("WEBGL_VERSION"))),ky.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),ky.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),ky.registerFlag("WEBGL_PACK",(()=>ky.getBool("HAS_WEBGL"))),ky.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_CLIP",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_PACK_REDUCE",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_LAZILY_UNPACK",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_CONV_IM2COL",(()=>ky.getBool("WEBGL_PACK"))),ky.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==by){const t=Vg(e);by=t.getParameter(t.MAX_TEXTURE_SIZE)}return by}(ky.getNumber("WEBGL_VERSION")))),ky.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==gy){const t=Vg(e);gy=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,gy)}(ky.getNumber("WEBGL_VERSION")))),ky.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=ky.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Vg(e);return t=yy(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:yy(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),ky.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>ky.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!l.Sd.isMobile())),ky.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Vg(e);if(1===e){if(!yy(t,"OES_texture_float"))return!1}else if(!yy(t,"EXT_color_buffer_float"))return!1;return wy(t)}(ky.getNumber("WEBGL_VERSION")))),ky.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!ky.getBool("WEBGL_FORCE_F16_TEXTURES")&&ky.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),ky.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>vy(ky.getNumber("WEBGL_VERSION")))),ky.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=ky.getNumber("WEBGL_VERSION"))&&null!=Vg(e).fenceSync;var e})),ky.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>ky.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),ky.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),ky.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>l.Sd.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),ky.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),ky.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),ky.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),ky.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const Ay="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:jy}=l.xd;function $y(e,t,n){const r=[];if(e.forEach((e=>{const t=l.Af.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Wy(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const o=r.join("\n"),c=e.map((e=>function(e,t,n=!1,r){let o="";o+=n?Ry(e,r):Ey(e,r);const c=e.shapeInfo.logicalShape,d=t.logicalShape;c.length<=d.length&&(o+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",c=e.shapeInfo.logicalShape.length,d=t.logicalShape.length,h=jy(e.shapeInfo.logicalShape,t.logicalShape),f=By(d),m=d-c;let y;const x=["x","y","z","w","u","v"];y=0===c?"":d<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${x[e+m]} = 0;`)).join("\n");let v="";v=d<2&&c>0?"coords":e.shapeInfo.logicalShape.map(((s,i)=>`coords.${x[i+m]}`)).join(", ");let output="return outputValue;";const w=1===l.Af.sizeFromShape(e.shapeInfo.logicalShape),O=1===l.Af.sizeFromShape(t.logicalShape);if(1!==c||w||O){if(w&&!O)output=1===d?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(h.length){const e=c-2,t=c-1;h.indexOf(e)>-1&&h.indexOf(t)>-1?output="return vec4(outputValue.x);":h.indexOf(e)>-1?output="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(t)>-1&&(output="return vec4(outputValue.xx, outputValue.zz);")}}else output="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${o}() {\n      ${f} coords = getOutputCoords();\n      ${y}\n      vec4 outputValue = get${r}(${v});\n      ${output}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",c=t.texShape,d=e.shapeInfo.texShape,h=e.shapeInfo.logicalShape.length,f=t.logicalShape.length;if(!e.shapeInfo.isUniform&&h===f&&null==e.shapeInfo.flatOffset&&l.Af.arraysEqual(d,c))return`\n      float ${o}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const m=By(f),y=jy(e.shapeInfo.logicalShape,t.logicalShape),x=f-h;let v;const w=["x","y","z","w","u","v"];v=0===h?"":f<2&&y.length>=1?"coords = 0;":y.map((e=>`coords.${w[e+x]} = 0;`)).join("\n");let O="";O=f<2&&h>0?"coords":e.shapeInfo.logicalShape.map(((s,i)=>`coords.${w[i+x]}`)).join(", ");return`\n    float ${o}() {\n      ${m} coords = getOutputCoords();\n      ${v}\n      return get${r}(${O});\n    }\n  `}(e,t));return o}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),d=t.texShape,h=Iy(),f=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(h);let m,y,x=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Fy}\n    ${Dy}\n    ${_y}\n  `}(h);t.isPacked?(m=function(e,t,n){switch(e.length){case 0:return Ly();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(l.Af.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const o=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${o});\n      int c = imod(index, ${o}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(e[2]/2),c=o*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${c};\n      index -= b * ${c};\n\n      int r = 2 * (index / ${o});\n      int c = imod(index, ${o}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(e[e.length-1]/2),c=o*Math.ceil(e[e.length-2]/2);let l=c,d="",h="b, r, c";for(let b=2;b<e.length-1;b++)l*=e[e.length-b-1],d=`\n      int b${b} = index / ${l};\n      index -= b${b} * ${l};\n    `+d,h=`b${b}, `+h;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${d}\n\n      int b = index / ${c};\n      index -= b * ${c};\n\n      int r = 2 * (index / ${o});\n      int c = imod(index, ${o}) * 2;\n\n      return ivec${e.length}(${h});\n    }\n  `}(e,t,n)}}(t.logicalShape,d,n.enableShapeUniforms),y=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(h)):(m=function(e,t,n){switch(e.length){case 0:return Ly();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(l.Af.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Ny(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=Sy(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Ny(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=Sy(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Sy(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Sy(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,d,n.enableShapeUniforms),y=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(h)),n.packedInputs&&(x+=My);return[x,f,y,o,m,c,n.userCode].join("\n")}function Ey(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[o,c]=e.shapeInfo.texShape;if(1===o&&1===c)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const l=zy(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${l});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[d,h]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${d}, ${h}, ${l});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Py(e)}\n      }\n    `;const o=e.shapeInfo.texShape,c=o[0],l=o[1];if(1===l&&1===c)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const d=zy(n);if(1===l)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${d}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${d}) + 0.5) / ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===c)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${d}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${d}) + 0.5) / ${l}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${c}, ${l}, index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=e.shapeInfo.texShape;if(null!=c&&l.Af.arraysEqual(n,c)){if(t)return`\n      float ${o}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=c[0];return`\n    float ${o}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:d,keptDims:h}=l.Af.squeezeShape(n),f=d;if(f.length<n.length){const n=["row","col"];return`\n      ${Ey(Uy(e,f),t)}\n      float ${o}(int row, int col) {\n        return ${o}(${Vy(n,h)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${o}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Py(e)}\n      }\n    `;const m=c[0],y=c[1],x=zy(r);if(1===y)return t?`\n      float ${o}(int row, int col) {\n        float index = dot(vec3(row, col, ${x}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${o}(int row, int col) {\n      float index = dot(vec3(row, col, ${x}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${m}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===m)return t?`\n      float ${o}(int row, int col) {\n        float index = dot(vec3(row, col, ${x}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${o}(int row, int col) {\n      float index = dot(vec3(row, col, ${x}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${y}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${o}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${x};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${o}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${x};\n    vec2 uv = uvFromFlat(${m}, ${y}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=n[1]*n[2],d=n[2],{newShape:h,keptDims:f}=l.Af.squeezeShape(n),m=h;if(m.length<n.length){const n=["row","col","depth"];return`\n        ${Ey(Uy(e,m),t)}\n        float ${o}(int row, int col, int depth) {\n          return ${o}(${Vy(n,f)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${o}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${c}, ${d}, 1)));\n        ${Py(e)}\n      }\n    `;const y=e.shapeInfo.texShape,x=y[0],v=y[1],w=e.shapeInfo.flatOffset;if(v===c&&null==w)return t?`\n      float ${o}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${o}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${d}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${v}.0, ${x}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(v===d&&null==w)return t?`\n      float ${o}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${o}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${v}.0, ${x}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const O=zy(r);if(t)return`\n    float ${o}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${c} + col * ${d} + depth + ${O};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${o}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${c} + col * ${d} + depth + ${O};\n        vec2 uv = uvFromFlat(${x}, ${v}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=n[3],d=n[2]*c,h=n[1]*d,{newShape:f,keptDims:m}=l.Af.squeezeShape(n);if(f.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Ey(Uy(e,f),t)}\n      float ${o}(int row, int col, int depth, int depth2) {\n        return ${o}(${Vy(n,m)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${o}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${h}, ${d}, ${c}, 1)));\n        ${Py(e)}\n      }\n    `;const y=e.shapeInfo.flatOffset,x=e.shapeInfo.texShape,v=x[0],w=x[1],O=`int stride2 = ${r}Shape[3];`,k=`int stride1 = ${r}Shape[2] * stride2;`,I=`int stride0 = ${r}Shape[1] * stride1;`;if(w===h&&null==y)return t?`\n      float ${o}(int row, int col, int depth, int depth2) {\n        ${O}\n        ${k}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${o}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${d}, ${c}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${w}.0, ${v}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(w===c&&null==y)return t?`\n      float ${o}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${o}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${w}.0, ${v}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const S=zy(r);if(t)return`\n    float ${o}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${O}\n      ${k}\n      ${I}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${S});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${o}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${d} +\n          depth * ${c} + depth2;\n      vec2 uv = uvFromFlat(${v}, ${w}, index + ${S});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[4],c=t[3]*o,d=t[2]*c,h=t[1]*d,{newShape:f,keptDims:m}=l.Af.squeezeShape(t);if(f.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Ey(Uy(e,f))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Vy(t,m)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${d}, ${c}, ${o})) +\n          depth3;\n        ${Py(e)}\n      }\n    `;const y=e.shapeInfo.flatOffset,x=e.shapeInfo.texShape,v=x[0],w=x[1];if(w===h&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${d}, ${c}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${w}.0, ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(w===o&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${w}.0, ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const O=zy(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${d} + depth * ${c} +\n          depth2 * ${o} + depth3 + ${O};\n      vec2 uv = uvFromFlat(${v}, ${w}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:c}=l.Af.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ey(Uy(e,o))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Vy(t,c)});\n      }\n    `}const d=t[5],h=t[4]*d,f=t[3]*h,m=t[2]*f,y=t[1]*m;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${y}, ${m}, ${f}, ${h})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${d}, 1)));\n        ${Py(e)}\n      }\n    `;const x=e.shapeInfo.flatOffset,v=e.shapeInfo.texShape,w=v[0],O=v[1];if(O===y&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${m}, ${f}, ${h}, ${d})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${O}.0, ${w}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(O===d&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${O}.0, ${w}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const k=zy(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${y} + col * ${m} + depth * ${f} +\n          depth2 * ${h} + depth3 * ${d} + depth4 + ${k};\n      vec2 uv = uvFromFlat(${w}, ${O}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Ry(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Iy();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,c=Iy();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${l[0]}, ${l[1]}, index);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=e.shapeInfo.texShape,d=c[0],h=c[1],f=Iy();if(null!=c&&l.Af.arraysEqual(n,c))return t?`\n      vec4 ${o}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${f.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${o}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);\n\n        return ${f.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${o}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${f.texture2D}(${r}, uv);\n    }\n  `;const m=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],y=Math.ceil(n[1]/2);return`\n    vec4 ${o}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${y}, ${m[0]}, ${m[1]}, row, col);\n      return ${f.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=e.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];if(1===n[0]){const r=[1,2],c=["b","row","col"];return`\n        ${Ry(Uy(e,n.slice(1)),t)}\n        vec4 ${o}(int b, int row, int col) {\n          return ${o}(${Vy(c,r)});\n        }\n      `}const d=Iy();if(t)return`\n    vec4 ${o}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${d.texture2D}(${r}, uv);\n    }\n  `;const h=l[0],f=l[1],m=Math.ceil(n[2]/2),y=m*Math.ceil(n[1]/2);return`\n    vec4 ${o}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${h}, ${f}, ${y}, ${m}, b, row, col);\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=Iy();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${n}, uv);\n    }\n  `;const c=e.shapeInfo.logicalShape,l=c.length,d=e.shapeInfo.texShape,h=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],f=h[0],m=h[1],y=Math.ceil(c[l-1]/2);let x=y*Math.ceil(c[l-2]/2),v="int b, int row, int col",w=`b * ${x} + (row / 2) * ${y} + (col / 2)`;for(let b=2;b<l-1;b++)v=`int b${b}, `+v,x*=c[l-b-1],w=`b${b} * ${x} + `+w;return`\n    vec4 ${r}(${v}) {\n      int index = ${w};\n      int texR = index / ${m};\n      int texC = index - texR * ${m};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}, ${f});\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Fy="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Dy="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_y="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",My="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ly(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function zy(e){return`offset${e}`}function Py(e){const t=e.name,n=l.Af.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function By(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Wy(e,t,n){const{newShape:r,keptDims:o}=l.Af.squeezeShape(t),c=t.length,d=e&&3===c&&1===t[0],h=d?t.slice(1):r,f=!e&&c>1&&!l.Af.arraysEqual(t,n)&&r.length<c||d;return{useSqueezeShape:f,uniformShape:f?h:t,keptDims:o}}function Uy(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Vy(e,t){return t.map((t=>e[t])).join(", ")}function Gy(e,t,n,output){const r=n.map(((input,i)=>{const e={logicalShape:input.shape,texShape:input.isUniform?null:input.texData.texShape,isUniform:input.isUniform,isPacked:!input.isUniform&&input.texData.isPacked,flatOffset:null};return null!=input.texData&&null!=input.texData.slice&&input.texData.slice.flatOffset>0&&(e.flatOffset=input.texData.slice.flatOffset),{name:t.variableNames[i],shapeInfo:e}})),o=r.map((e=>e.shapeInfo)),c={logicalShape:output.shape,texShape:output.texData.texShape,isUniform:!1,isPacked:output.texData.isPacked,flatOffset:null},source=$y(r,c,t),d=function(e,t){const n=cy(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Jg(e,(()=>e.shaderSource(n,t))),Jg(e,(()=>e.compileShader(n))),Object(l.Yd)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw ny(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,source),h=e.createProgram(d);return Object(l.Yd)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:d,source:source,webGLProgram:h,inShapeInfos:o,outShapeInfo:c,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:d,source:source,webGLProgram:h,inShapeInfos:o,outShapeInfo:c},Hy(e,t,h))}function Hy(e,t,n){const r={},o={},c={},d=[];let h,f,m,y=null,x=null;x=e.getUniformLocation(n,"NAN",!1),1===Object(l.Yd)().getNumber("WEBGL_VERSION")&&(y=e.getUniformLocation(n,"INFINITY",!1));const v=!1;for(let i=0;i<t.variableNames.length;i++){const l=t.variableNames[i];r[l]=e.getUniformLocation(n,l,v),r[`offset${l}`]=e.getUniformLocation(n,`offset${l}`,v),t.enableShapeUniforms&&(o[`${l}Shape`]=e.getUniformLocation(n,`${l}Shape`,v),c[`${l}TexShape`]=e.getUniformLocation(n,`${l}TexShape`,v))}return t.enableShapeUniforms&&(h=e.getUniformLocation(n,"outShape",v),m=e.getUniformLocation(n,"outShapeStrides",v),f=e.getUniformLocation(n,"outTexShape",v)),t.customUniforms&&t.customUniforms.forEach(((t,i)=>{d[i]=e.getUniformLocation(n,t.name,v)})),{uniformLocations:r,customUniformLocations:d,infLoc:y,nanLoc:x,inShapesLocations:o,inTexShapesLocations:c,outShapeLocation:h,outShapeStridesLocation:m,outTexShapeLocation:f}}function qy(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((s,i)=>{const e=s.logicalShape,input=t[i],n=input.shape;if(!l.Af.arraysEqual(e,n))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${e} and ${n} must match`);if(s.isUniform&&input.isUniform)return;const r=s.texShape,o=input.isUniform?null:input.texData.texShape;if(!l.Af.arraysEqual(r,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${r} and ${o} must match`)}))}function Ky(e){return Object(l.Yd)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Yy{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Gg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Iy();this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ny(["r","c","d"],e):Sy(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Xy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Gg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Iy();this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ny(["r","c","d"],e):Sy(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Zy{constructor(e){this.variableNames=["A"],this.outTexUsage=Hg.DOWNLOAD;const t=Iy();this.outputShape=e,this.userCode=`\n      ${Ay}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Jy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Hg.DOWNLOAD;const t=Iy();this.outputShape=e,this.userCode=`\n      ${Ay}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Qy{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Iy();this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length);let output="result";t&&(output="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Cy(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `}}class ex{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Iy();this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length);let r="",output="result";t&&(output="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let col=0;col<=1;col++){const o=2*t+col;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${col};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${o}] = values[0];\n            } else if (offset == 1) {\n              result[${o}] = values[1];\n            } else if (offset == 2) {\n              result[${o}] = values[2];\n            } else {\n              result[${o}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Cy(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${output};\n        }\n    `}}function tx(e){const t=Iy();return function(e,t){const n=cy(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Jg(e,(()=>e.shaderSource(n,t))),Jg(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function nx(e){return function(e,data){const t=cy(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,t))),Jg(e,(()=>e.bufferData(e.ARRAY_BUFFER,data,e.STATIC_DRAW))),t}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function rx(e){return function(e,data){const t=cy(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Jg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t))),Jg(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,data,e.STATIC_DRAW))),t}(e,new Uint16Array([0,1,2,2,1,3]))}function ax(e,t,n,r,o,c){!function(e,t){const n=Object(l.Yd)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const d=function(e){return cy(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),h=e.TEXTURE_2D;return Jg(e,(()=>e.bindTexture(h,d))),Jg(e,(()=>e.texParameteri(h,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Jg(e,(()=>e.texParameteri(h,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Jg(e,(()=>e.texParameteri(h,e.TEXTURE_MIN_FILTER,e.NEAREST))),Jg(e,(()=>e.texParameteri(h,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Object(l.Yd)().getNumber("WEBGL_VERSION")?Jg(e,(()=>e.texImage2D(h,0,r,t,n,0,o,c,null))):Jg(e,(()=>e.texStorage2D(h,1,r,t,n))),Jg(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:d,texShape:[n,t]}}function sx(e){return e.internalFormatFloat}function ix(e){return e.internalFormatHalfFloat}function ox(e){return e.downloadTextureFormat}function ux(e){return e.internalFormatPackedFloat}function cx(e){return e.internalFormatPackedHalfFloat}function lx(e,t,n,r,o,c,l,d){const h=e,f=new Float32Array(function(e,t){const[n,r]=Xg(e,t);return n*r*4}(c,l));return h.bindBuffer(h.PIXEL_PACK_BUFFER,t),h.getBufferSubData(h.PIXEL_PACK_BUFFER,0,f),h.bindBuffer(h.PIXEL_PACK_BUFFER,null),f}class dx{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(l.Yd)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){Wg[e]=t}(t,e)):this.gl=Vg(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Object(l.Yd)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=ey(this.gl,e),yy(this.gl,t))this.textureHalfFloatExtension=ey(this.gl,t);else if(Object(l.Yd)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),yy(this.gl,r))this.colorBufferHalfFloatExtension=ey(this.gl,r);else if(Object(l.Yd)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",yy(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!yy(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=nx(this.gl),this.indexBuffer=rx(this.gl),this.framebuffer=function(e){return cy(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Zg(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(l.Yd)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Jg(e,(()=>e.finish())),Jg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Jg(e,(()=>e.deleteFramebuffer(this.framebuffer))),Jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Jg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Jg(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Kg(t,n);return ax(e,o,c,sx(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Kg(t,n);return ax(e,o,c,ix(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Kg(t,n);return ax(e,o,c,ox(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Jg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Object(l.Yd)().getNumber("WEBGL_VERSION")?Jg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Jg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Object(l.Yd)().getNumber("WEBGL_VERSION")?Jg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Jg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Jg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,data){this.throwIfDisposed(),function(e,t,n,r,data,o){let c,d,h;Jg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),data instanceof Uint8Array?(c=new Uint8Array(n*r*4),d=e.UNSIGNED_BYTE,h=e.RGBA):(c=new Float32Array(n*r*4),d=e.FLOAT,h=o.internalFormatPackedFloat),c.set(data),2===Object(l.Yd)().getNumber("WEBGL_VERSION")?Jg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,d,c))):Jg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,h,n,r,0,e.RGBA,d,c))),Jg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,data,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Xg(t,n);return ax(e,o,c,cx(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Xg(t,n);return ax(e,o,c,ux(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(oy(this.gl,this.framebuffer),this.outputTexture=null),Jg(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[o,c]=Kg(t,n),l=new Uint8Array(t*n*4);return Jg(e,(()=>e.readPixels(0,0,o,c,r.downloadTextureFormat,e.UNSIGNED_BYTE,l))),new Float32Array(l.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,o,c){return lx(this.gl,e,0,0,0,o,c,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const o=e.createBuffer();Jg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,o)));const c=16*t*n;return Jg(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,c,e.STREAM_READ))),Jg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Jg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),o}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(l.Yd)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(o,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=o}else Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return Jg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=tx(t));const n=function(e){return cy(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return Jg(t,(()=>t.attachShader(n,this.vertexShader))),Jg(t,(()=>t.attachShader(n,e))),function(e,t){if(Jg(e,(()=>e.linkProgram(t))),!Object(l.Yd)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&ry(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return Jg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ay(e,t,"clipSpacePos",n,3,20,0)&&ay(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Jg(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ry(this.gl,this.program),Jg(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return cy(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Jg(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),sy(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,o]=Xg(t,n);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ry(this.gl,this.program),uy(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),Jg(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Jg(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=ey(this.gl,2===Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await l.Af.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let i=0;for(;i<e.length;++i){if(!e[i]())break}return i-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let i=0;i<=e;++i){const{resolveFn:e}=this.itemsToPoll[i];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||l.Af.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),iy(this.gl,e,this.framebuffer),this.debug&&uy(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(iy(this.gl,this.outputTexture,this.framebuffer),this.debug&&uy(this.gl)):oy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;iy(r,e,this.framebuffer),this.debug&&uy(r),this.outputTexture=e,Jg(r,(()=>r.viewport(0,0,t,n))),Jg(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Jg(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:hx,bincountImpl:px,bincountReduceImpl:fx,ceilImpl:mx,concatImpl:bx,equalImpl:gx,expImpl:yx,expm1Impl:xx,floorImpl:vx,gatherNdImpl:wx,gatherV2Impl:Ox,greaterImpl:kx,greaterEqualImpl:Ix,lessImpl:Sx,lessEqualImpl:Nx,linSpaceImpl:Tx,logImpl:Cx,maxImpl:Ax,maximumImpl:jx,minimumImpl:$x,multiplyImpl:Ex,negImpl:Rx,notEqualImpl:Fx,prodImpl:Dx,rangeImpl:_x,rsqrtImpl:Mx,scatterImpl:Lx,sigmoidImpl:zx,simpleAbsImpl:Px,sliceImpl:Bx,sparseFillEmptyRowsImpl:Wx,sparseReshapeImpl:Ux,sparseSegmentReductionImpl:Vx,sqrtImpl:Gx,stridedSliceImpl:Hx,stringNGramsImpl:qx,stringSplitImpl:Kx,stringToHashBucketFastImpl:Yx,subImpl:Xx,tileImpl:Zx,topKImpl:Jx,transposeImpl:Qx,uniqueImpl:ev}=c;function tv(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function nv(e,t){return 1===t?[e]:tv(e,t)}class rv{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Ky(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=nv("rc",this.rank),t=By(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),output=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let col=0;col<=1;col++){let r=`${0===n?"r":"rp1"}, ${0===col?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let i=this.rank-2;i<this.rank;i++)t+=`${e[i]} >= ${this.enableShapeUniforms?`outShape[${i}]`:this.outputShape[i]}`,i<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),col=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${col};\n      bool rEdge = rp1 >= ${n};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class av{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length);let n="";for(let i=0;i<4;i++){let e="thisRC = rc;";i%2==1&&(e+="thisRC.z += 1;"),i>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r,o;this.userCode=`\n      ${r=t,o=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${o?Ty(["r","c","d"],"inputShape"):Sy(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Cy(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class sv{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=ov(t,n),o=uv(e,r,n);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const c=iv(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=c,this.log();const e=this.freeTextures[o].shift();return this.usedTextures[o].push(e),e}let l;return r===qg.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===qg.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===qg.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===qg.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===qg.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(l),this.numUsedTextures++,this._numBytesAllocated+=c,this.log(),l}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const o=ov(n,r),c=uv(t,o,r);c in this.freeTextures||(this.freeTextures[c]=[]);const d=iv(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),h=Object(l.Yd)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==h&&this._numBytesAllocated>h?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=d):(this.freeTextures[c].push(e),this.numFreeTextures++,this._numBytesFree+=d),this.numUsedTextures--;const f=this.usedTextures[c],m=f.indexOf(e);if(m<0)throw new Error("Cannot release a texture that was never provided by this texture manager");f.splice(m,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function iv(e,t,n,r,o){const c=function(e,t){switch(e){case qg.PACKED_2X2_FLOAT32:return ux(t);case qg.PACKED_2X2_FLOAT16:return cx(t);case qg.UNPACKED_FLOAT32:return sx(t);case qg.UNPACKED_FLOAT16:return ix(t);case qg.PACKED_4X1_UNSIGNED_BYTE:return ox(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let l;if(o){const[t,n]=Xg(e[0],e[1]);l=t*n}else{const[t,n]=Kg(e[0],e[1]);l=t*n}const d=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,c);return l*d}function ov(e,t){if(e===Hg.UPLOAD)return qg.PACKED_2X2_FLOAT32;if(e===Hg.RENDER||null==e)return function(e){return Object(l.Yd)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?qg.PACKED_2X2_FLOAT32:qg.UNPACKED_FLOAT32:e?qg.PACKED_2X2_FLOAT16:qg.UNPACKED_FLOAT16}(t);if(e===Hg.DOWNLOAD||e===Hg.PIXELS)return qg.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function uv(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class cv{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const lv="return abs(x);";const dv="return x;";class hv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class pv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length);const t=e.length,n=nv("rc",t),r=By(t),o=function(e,t){if(1===e)return"rc";let n="";for(let i=0;i<e;i++)n+=t[i],i<e-1&&(n+=",");return n}(t,n),c=n.slice(-2),l=t<=1?"rc":`vec2(${c.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${l}));\n      }\n    `}}const fv=l.me.whereImpl,mv={};const bv=Object(l.Yd)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class gv extends l.yb{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(l.Yd)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof dx)t=e;else{const n=Vg(Object(l.Yd)().getNumber("WEBGL_VERSION"),e);t=new dx(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Vg(Object(l.Yd)().getNumber("WEBGL_VERSION"));t=new dx(e),this.binaryCache=((n=Object(l.Yd)().getNumber("WEBGL_VERSION"))in mv||(mv[n]={}),mv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new sv(this.gpgpu),this.numMBBeforeWarning=null==Object(l.Yd)().global.screen?1024:Object(l.Yd)().global.screen.height*Object(l.Yd)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new l.N(this,Object(l.Xd)())}nextDataId(){return gv.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(l.Yd)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(l.Yd)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Hg.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,o){if(Object(l.Yd)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Hg.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:o,slice:c,shape:d,isPacked:h}=t;if(null!=c){let t;t=h?new hv(d,dv):new cv(d,dv);const n=this.runWebGLProgram(t,[{dataId:e,shape:d,dtype:r}],r),data=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),data}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const f=null!=this.activeTimers;let m,y;if(f&&(m=l.Af.now()),"complex64"===r){const e=this.readSync(o.real.dataId),t=this.readSync(o.imag.dataId);y=l.xd.mergeRealAndImagArrays(e,t)}else y=this.getValuesFromTexture(e);return f&&(this.downloadWaitMs+=l.Af.now()-m),this.convertAndCacheOnCPU(e,y)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:o,dtype:c,complexTensorInfos:d,isPacked:h}=t;if(null!=o){let t;t=h?new hv(r,dv):new cv(r,dv);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:c}],c),data=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),data}if(null!=n)return this.convertAndCacheOnCPU(e);if(Object(l.Yd)().getBool("DEBUG")&&!Object(l.Yd)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(l.Yd)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let f,m,y=null;if("complex64"!==c&&Object(l.Yd)().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(e);const t=this.texData.get(f.dataId);y=this.gpgpu.createBufferFromTexture(t.texture.texture,...Yg(r))}if(this.pendingRead.set(e,[]),"complex64"!==c&&await this.gpgpu.createAndWaitForFence(),"complex64"===c){const e=await Promise.all([this.read(d.real.dataId),this.read(d.imag.dataId)]),t=e[0],n=e[1];m=l.xd.mergeRealAndImagArrays(t,n)}else if(null==y)m=this.getValuesFromTexture(e);else{const e=l.Af.sizeFromShape(r);m=this.gpgpu.downloadFloat32MatrixFromBuffer(y,e)}if(null!=f&&this.disposeIntermediateTensorInfo(f),null!=y){const e=this.gpgpu.gl;Jg(e,(()=>e.deleteBuffer(y)))}const x=this.convertAndCacheOnCPU(e,m),v=this.pendingRead.get(e);return this.pendingRead.delete(e),v.forEach((e=>e(x))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(l.Xd)().removeDataId(e,this),this.pendingDeletes--),x}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:o,slice:c,dtype:d,isPacked:h,texture:f}=n;if("complex64"===d)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=c){let n;n=h?new hv(o,dv):new cv(o,dv);const r=this.runWebGLProgram(n,[{dataId:e,shape:o,dtype:d}],d),c=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),c}if(null==f)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const m=this.decode(e,t.customTexShape),y=Object(l.Xd)().makeTensorFromTensorInfo(m),x=this.texData.get(m.dataId);return Object.assign({tensorRef:y},x.texture)}bufferSync(e){const data=this.readSync(e.dataId);if("string"===e.dtype)try{const t=data.map((e=>l.Af.decodeString(e)));return Object(l.Dd)(e.shape,e.dtype,t)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(l.Dd)(e.shape,e.dtype,data)}checkNumericalProblems(e){if(null!=e)for(let i=0;i<e.length;i++){const t=e[i];if(!Qg(t)){if(Object(l.Yd)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${t} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${t} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),o=l.Af.sizeFromShape(t);if(Object(l.Yd)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Yg(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(n),c}const c=Object(l.Yd)().getBool("WEBGL_PACK")&&!0===r,d=c?py(t):t,h=c?new Jy(d):new Zy(d),output=this.runWebGLProgram(h,[{shape:d,dtype:n,dataId:e}],"float32"),f=this.texData.get(output.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(output),m}timerAvailable(){return Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const o=l.Af.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),c=l.Af.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const d={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(o);d.kernelMs=l.Af.sum(e),d.getExtraProfileInfo=()=>e.map(((e,i)=>({name:c[i],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else d.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,d})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:l.Af.now(),endMs:null}}endTimer(e){return Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=l.Af.now(),e)}async getQueryTime(e){if(Object(l.Yd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:o,isPacked:c,slice:l}=this.texData.get(e),d=l&&l.origDataId||e,h=this.dataRefCount.get(d);h>1?this.dataRefCount.set(d,h-1):(this.dataRefCount.delete(d),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,o,c)));const f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=bv){return Object(l.Yd)().getBool("WEBGL_CPU_FORWARD")&&e.every((input=>null==this.texData.get(input.dataId).texture&&l.Af.sizeFromShape(input.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){l.xd.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return fv(e.shape,t)}packedUnaryOp(e,t,n){const r=new hv(e.shape,t),o=this.compileAndRun(r,[e],n);return Object(l.Xd)().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Px(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(l.Yd)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,lv,e.dtype);const t=new cv(e.shape,lv),n=this.compileAndRun(t,[e]);return Object(l.Xd)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&l.Af.isString(n[0])){const o=n.map((e=>l.Af.encodeString(e)));r=this.write(o,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Object(l.Xd)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(input){const e=new pv(input.shape);return this.runWebGLProgram(e,[input],input.dtype)}packTensor(input){const e=new rv(input.shape);return this.runWebGLProgram(e,[input],input.dtype,null,!0)}packedReshape(input,e){const t=[dy(input.shape),...hy(input.shape)],n={dtype:input.dtype,shape:t,dataId:input.dataId},r=[dy(e),...hy(e)],o=new av(r,t),c=[t],output=this.runWebGLProgram(o,[n],input.dtype,c,!0);return{dataId:output.dataId,shape:e,dtype:output.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:o,dtype:c}=n;if(null!=t){const e=l.Af.sizeFromShape(o),n=t[0]*t[1]*4;l.Af.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const d=py(o);let h;h=r?new Xy(d):new Yy(d);const f=[null!=t?t:Yg(d)];return{dtype:c,shape:o,dataId:this.runWebGLProgram(h,[{shape:d,dtype:c,dataId:e}],c,f,!0,t).dataId}}runWebGLProgram(e,t,n,r,o=!1,c){const output=this.makeTensorInfo(e.outputShape,n),d=this.texData.get(output.dataId);if(e.packedOutput&&(d.isPacked=!0),e.outPackingScheme===Gg.DENSE){const t=null!=c?c:Yg(e.outputShape);d.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(d.usage=e.outTexUsage),0===l.Af.sizeFromShape(output.shape))return d.values=l.Af.getTypedArrayFromDType(output.dtype,0),output;const h=[],f=t.map((input=>{if("complex64"===input.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let t=this.texData.get(input.dataId);if(null==t.texture){if(!e.packedInputs&&l.Af.sizeFromShape(input.shape)<=Object(l.Yd)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:input.shape,texData:null,isUniform:!0,uniformValues:t.values};e.packedInputs&&(t.isPacked=!0,t.shape=input.shape)}if(this.uploadToGPU(input.dataId),!!t.isPacked!=!!e.packedInputs)input=t.isPacked?this.unpackTensor(input):this.packTensor(input),h.push(input),t=this.texData.get(input.dataId);else if(t.isPacked&&!my(t.shape,input.shape)){const e=input,n=input.shape;input.shape=t.shape,input=this.packedReshape(input,n),h.push(input),t=this.texData.get(input.dataId),e.shape=n}return{shape:input.shape,texData:t,isUniform:!1}}));this.uploadToGPU(output.dataId);const m={shape:output.shape,texData:d,isUniform:!1},y=function(e,t,output){let n="";t.concat(output).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:c,uniformShape:d,keptDims:h}=Wy(e.packedInputs,t.shape,o);let f="",m="",y="";if(1===d.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];f=`${e[0]>1}_${e[1]>1}`}else if(2!==d.length||e.packedInputs){if(d.length>2&&!e.packedInputs){const e=l.Af.computeStrides(d);y=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else m=`${d[0]>1}_${d[1]>1}`;const x=t.shape.length,v=2===d.length&&l.Af.arraysEqual(t.shape,o),w=1===l.Af.sizeFromShape(t.shape),O=l.xd.getBroadcastDims(t.shape,output.shape),k=!e.packedInputs&&x===output.shape.length&&l.Af.arraysEqual(o,output.texData.texShape),I=e.packedInputs||d.length>2?"":`${o[0]>1}_${o[1]>1}`;n+=`${x}_${k}_${c?h:""}_${d.length}_${w}_${O}_${v}_${f}_${m}_${y}_${I}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;n+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let o=e.constructor.name;return o+="_"+n+"_"+r+`${Object(l.Yd)().getNumber("WEBGL_VERSION")}`,o}(e,f,m),x=this.getAndSaveBinary(y,(()=>Gy(this.gpgpu,e,f,m))),v=null!=this.activeTimers;let w;v&&(w=this.startTimer()),Object(l.Yd)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,output,r){t.program.enableShapeUniforms||(qy(t.inShapeInfos,n),qy([t.outShapeInfo],[output]));const o=output.texData.texture,c=output.texData.texShape;output.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,c[0],c[1]):e.setOutputMatrixTexture(o.texture,c[0],c[1]),e.setProgram(t.webGLProgram),1===Object(l.Yd)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((input,i)=>{const n=t.program.variableNames[i],r=t.uniformLocations[n],o=t.uniformLocations[`offset${n}`],c=t.inShapesLocations[`${n}Shape`],d=t.inTexShapesLocations[`${n}TexShape`];if(c){const{uniformShape:n}=Wy(t.program.packedInputs,input.shape,input.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(c,new Int32Array(n));break;case 2:e.gl.uniform2iv(c,new Int32Array(n));break;case 3:e.gl.uniform3iv(c,new Int32Array(n));break;case 4:e.gl.uniform4iv(c,new Int32Array(n))}}if(d&&e.gl.uniform2i(d,input.texData.texShape[0],input.texData.texShape[1]),null!=r)if(input.isUniform)if(l.Af.sizeFromShape(input.shape)<2)e.gl.uniform1f(r,input.uniformValues[0]);else{let t=input.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=input.texData.slice&&null!=o&&e.gl.uniform1i(o,input.texData.slice.flatOffset),e.setInputMatrixTexture(input.texData.texture.texture,r,i)}));const d=t.outShapeLocation;if(d)switch(output.shape.length){case 1:e.gl.uniform1iv(d,new Int32Array(output.shape));break;case 2:e.gl.uniform2iv(d,new Int32Array(output.shape));break;case 3:e.gl.uniform3iv(d,new Int32Array(output.shape));break;case 4:e.gl.uniform4iv(d,new Int32Array(output.shape))}if(t.outShapeStridesLocation){const n=l.Af.computeStrides(output.shape);switch(output.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,output.texData.texShape[0],output.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,i)=>{const o=t.customUniformLocations[i],c=r[i];if("float"===n.type)e.gl.uniform1fv(o,c);else if("vec2"===n.type)e.gl.uniform2fv(o,c);else if("vec3"===n.type)e.gl.uniform3fv(o,c);else if("vec4"===n.type)e.gl.uniform4fv(o,c);else if("int"===n.type)e.gl.uniform1iv(o,c);else if("ivec2"===n.type)e.gl.uniform2iv(o,c);else if("ivec3"===n.type)e.gl.uniform3iv(o,c);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(o,c)}})),e.executeProgram()}(this.gpgpu,x,f,m,r),h.forEach((e=>this.disposeIntermediateTensorInfo(e))),v&&(w=this.endTimer(w),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(w)}));const O=Object(l.Yd)().get("WEBGL_FLUSH_THRESHOLD");if(O>0){const time=l.Af.now();time-this.lastGlFlushTime>O&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=time)}if(!Object(l.Yd)().getBool("WEBGL_LAZILY_UNPACK")&&d.isPacked&&!1===o){const e=this.unpackTensor(output);return this.disposeIntermediateTensorInfo(output),e}return output}compileAndRun(e,t,n,r,o=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(l.Yd)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(l.tf)((()=>{if(!Object(l.Yd)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(l.Yd)().getBool("DEBUG");Object(l.Yd)().set("DEBUG",!1);const t=this.abs(Object(l.Te)(1e-8)).dataSync()[0];if(Object(l.Yd)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:o,texture:c,usage:d,isPacked:h}=t;if(null!=c)return;const f=null!=this.activeTimers;let m;f&&(m=l.Af.now());let y=t.texShape;if(null==y&&(y=function(e,t=!1){let n=Object(l.Yd)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,i)=>i>=e.length-2?l.Af.nearestLargerEven(e[i]):e[i]))).length&&(e=[2,e[0]])),2!==e.length){const t=l.Af.squeezeShape(e);e=t.newShape}let r=l.Af.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=dy(e);let n=2,o=2;return e.length&&([n,o]=hy(e)),r=t*(n/2)*(o/2),l.Af.sizeToSquarishShape(r).map((e=>2*e))}return l.Af.sizeToSquarishShape(r)}(n,h),t.texShape=y),null!=o){const e=py(n);let c,d=y[1],x=y[0];const v=o instanceof Uint8Array||o instanceof Uint8ClampedArray;!h&&v||([d,x]=Xg(y[0],y[1])),c=h?new ex(e,v):new Qy(e,v);const w=v?[x,d]:y,O=this.makeTensorInfo(w,r),k=this.texData.get(O.dataId);k.usage=v?Hg.PIXELS:Hg.UPLOAD,k.texShape=w,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(O.dataId),d,x,o);const I=[[x,d]],S=!0,N=this.runWebGLProgram(c,[O],r,I,S),T=this.texData.get(N.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,Object(l.Yd)().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(O),f&&(this.uploadWaitMs+=l.Af.now()-m)}else{const e=this.acquireTexture(y,d,r,h);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(a,e){if("float32"===e||"complex64"===e)return a;if("int32"===e||"bool"===e){const t="int32"===e?new Int32Array(a.length):new Uint8Array(a.length);for(let i=0;i<t.length;++i)t[i]=Math.round(a[i]);return t}throw new Error(`Unknown dtype ${e}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*l.Af.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const p=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(p)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Object(l.Ee)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw ny(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:o,inShapesLocations:c,inTexShapesLocations:l,outShapeLocation:d,outShapeStridesLocation:h,outTexShapeLocation:f}=Hy(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=o,e.inShapesLocations=c,e.inTexShapesLocations=l,e.outShapeLocation=d,e.outShapeStridesLocation=h,e.outTexShapeLocation=f}}}gv.nextDataId=0;l.Sd.isBrowser()&&Object(l.Oe)("webgl",(()=>new gv),2);class yv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=l.xd.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Ky(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class xv{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=l.xd.assertAndGetBroadcastShape(t,n);const o=this.outputShape.length;this.enableShapeUniforms=Ky(o);let c="";if(r)if(0===o||1===l.Af.sizeFromShape(this.outputShape))c="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(c=`\n          ${By(o)} coords = getOutputCoords();\n        `,1===o)this.enableShapeUniforms?c+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":c+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=nv("coords",o);this.enableShapeUniforms?c+=`\n            bool nextRowOutOfBounds =\n              (${e[o-2]} + 1) >= outShape[${o} - 2];\n            bool nextColOutOfBounds =\n              (${e[o-1]} + 1) >= outShape[${o} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:c+=`\n            bool nextRowOutOfBounds =\n              (${e[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${e[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${c}\n\n        setOutput(result);\n      }\n    `}}function vv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const wv={kernelName:l.tb,backendName:"webgl",kernelFunc:vv};function Ov(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,c=n.makeTensorInfo(r.shape,"complex64"),l=n.texData.get(c.dataId),d=vv({inputs:{x:r},backend:n}),h=vv({inputs:{x:o},backend:n});return l.complexTensorInfos={real:d,imag:h},c}const kv={kernelName:l.z,backendName:"webgl",kernelFunc:Ov},Iv="return (a < 0.) ? b * a : a;",Sv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Nv={kernelName:l.Bb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{alpha:c}=r,d=n.makeTensorInfo([],"float32",l.Af.createScalarValue(c,"float32")),h=Object(l.Yd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xv(Sv,o.shape,d.shape):new yv(Iv,o.shape,d.shape),f=n.runWebGLProgram(h,[o,d],"float32");return n.disposeIntermediateTensorInfo(d),f}},Tv="return (a < 0.) ? b * a : a;",Cv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Av={kernelName:l.jc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:o}=t,c=Object(l.Yd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xv(Cv,r.shape,o.shape):new yv(Tv,r.shape,o.shape);return n.runWebGLProgram(c,[r,o],"float32")}};function jv({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:o,backend:c})=>{const{x:d}=o,h=c,f=r||d.dtype;if(h.shouldExecuteOnCPU([d])&&null!=n){const e=h.texData.get(d.dataId),t=n(e.values,f);return h.makeTensorInfo(d.shape,f,t)}let m;return m=Object(l.Yd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new hv(d.shape,t):new cv(d.shape,e),h.runWebGLProgram(m,[d],f)}}function $v({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:c}){return({inputs:d,backend:h})=>{const{a:a,b:b}=d,f=h;if(r&&"complex64"===a.dtype){const t=f.texData.get(a.dataId),n=f.texData.get(b.dataId),[r,o]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,o={dataId:n.dataId,dtype:n.dtype,shape:a.shape},c={dataId:r.dataId,dtype:r.dtype,shape:b.shape},d=new yv(e,a.shape,b.shape);return f.runWebGLProgram(d,[o,c],Object(l.zf)(n.dtype,r.dtype))})),c=Ov({inputs:{real:r,imag:o},backend:f});return f.disposeIntermediateTensorInfo(r),f.disposeIntermediateTensorInfo(o),c}const m=c||Object(l.zf)(a.dtype,b.dtype);if(("string"===a.dtype||"string"===b.dtype||f.shouldExecuteOnCPU([a,b]))&&null!=o){const e=f.texData.get(a.dataId).values,t=f.texData.get(b.dataId).values,n="string"===a.dtype?l.xd.fromUint8ToStringArray(e):e,r="string"===a.dtype?l.xd.fromUint8ToStringArray(t):t,[c,d]=o(a.shape,b.shape,n,r,m),h=f.makeTensorInfo(d,m);return f.texData.get(h.dataId).values=c,h}let y;return y=Object(l.Yd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new xv(t,a.shape,b.shape,n):new yv(e,a.shape,b.shape),f.runWebGLProgram(y,[a,b],m)}}function Ev(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Cv:Tv;if("leakyrelu"===e)return t?Sv:Iv;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Rv{constructor(e,t,n,r=!1,o=!1,c=!1,l=null,d=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Ky(this.outputShape.length);const f=r?e[1]:e[2],m=Math.ceil(f/2),y=r?"i * 2, rc.y":"rc.y, i * 2",x=o?"rc.z, i * 2":"i * 2, rc.z",v=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],w=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let O="",k="";l&&(O=d?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${l}\n        }`:h?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${l}\n        }`:`vec4 activation(vec4 x) {\n          ${l}\n        }`,k="result = activation(result);");const I=c?"result += getBiasAtOutCoords();":"";c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let S="rc.x",N="rc.x";e[0]<t[0]?S=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(N=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${O}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${m}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${m}; i++) {\n          int batchA = ${S};\n          int batchB = ${N};\n          vec4 a = getMatrixA(batchA, ${y});\n          vec4 b = getMatrixB(batchB, ${x});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${v[0]} * ${w[0]});\n          result += (${v[1]} * ${w[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${I}\n\n        ${k}\n\n        setOutput(result);\n      }\n    `}}const Fv="return areal * breal - aimag * bimag;",Dv="return areal * bimag + aimag * breal;";class _v{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=l.xd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Mv="return a * b;";function Lv(e){const{inputs:t,backend:n}=e,{a:a,b:b}=t,r=l.xd.upcastType(a.dtype,b.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(b.dataId),r=new _v(Fv,a.shape,b.shape),o=new _v(Dv,a.shape,b.shape),c=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:b.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:b.shape}],l=n.runWebGLProgram(r,c,"float32"),d=n.runWebGLProgram(o,c,"float32"),h=Ov({inputs:{real:l,imag:d},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}if(n.shouldExecuteOnCPU([a,b])){const e=n.texData.get(a.dataId),t=n.texData.get(b.dataId),[o,c]=Ex(a.shape,b.shape,e.values,t.values,r),l=n.makeTensorInfo(c,r);return n.texData.get(l.dataId).values=o,l}let o;return o=Object(l.Yd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xv(Mv,a.shape,b.shape):new yv(Mv,a.shape,b.shape),n.runWebGLProgram(o,[a,b],r)}const zv={kernelName:l.Xb,backendName:"webgl",kernelFunc:Lv};function Pv(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{shape:c}=r,d=n,h=l.Af.sizeFromShape(o.shape),f=l.Af.inferFromImplicitShape(c,h),m=l.Af.sizeFromShape(f);l.Af.assert(h===m,(()=>`The new shape (${f}) has ${m} elements and the old shape (${o.shape}) has ${h} elements. The new shape and old shape must have the same number of elements.`));const y=d.texData.get(o.dataId);return!y.isPacked||my(o.shape,f)||null!==y.texture&&my(y.shape,f)?(d.incRef(o.dataId),{dataId:o.dataId,shape:f,dtype:o.dtype}):function(input,e,t){const n=[dy(input.shape),...hy(input.shape)],r={dtype:input.dtype,shape:n,dataId:input.dataId},o=[dy(e),...hy(e)],c=new av(o,n),l=[n],output=t.runWebGLProgram(c,[r],input.dtype,l,!0);return{dataId:output.dataId,shape:e,dtype:output.dtype}}(o,f,d)}const Bv={kernelName:l.rc,backendName:"webgl",kernelFunc:Pv};class Wv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:c}=e;this.outputShape=[r,c];const d=4*Math.floor(n/4),h=n%4;let f="sumValue += dot(values, ones);";if(null!=t){const e=1/t;f=`sumValue += dot(values * ${l.Af.isInt(e)?e.toPrecision(2):e}, ones);`}let m="";o%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===h}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${f}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${f}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Uv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:c}=e;this.outputShape=[r,c];let l="0.0",d="";"prod"===t?l="1.0":"min"===t?(l="1.0 / 1e-20",d="min"):"max"===t&&(l="-1.0 / 1e-20",d="max");let h=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?h="sumValue":"prod"===t?h="prodValue":"all"===t?h="allValue":"any"===t&&(h="anyValue");const f=4*Math.floor(n/4),m=n%4;let y=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${d}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${d}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,x="vec4";"all"===t?(l="1.0",y="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",x="bvec4"):"any"===t&&(l="0.0",y="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",x="bvec4");let v="";o%n>0&&(v=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${l};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${v}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${l});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${f}; i += 4) {\n          int inIdx = inOffset + i;\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${y}\n        }\n\n        int inIdx = inOffset + ${f};\n        if (${1===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${2===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${3===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${y}\n        }\n        setOutput(${h});\n      }\n    `}}function Vv(e,t,n,r){const o=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=l.xd.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let c=e;for(let i=0;i<o.length;i++){const{inSize:l,windowSize:d,outSize:h}=o[i];let f,m;f="mean"===n?0===i?new Wv({windowSize:d,inSize:l,batchSize:e.shape[0],outSize:h},l):new Wv({windowSize:d,inSize:l,batchSize:e.shape[0],outSize:h}):new Uv({windowSize:d,inSize:l,batchSize:e.shape[0],outSize:h},n),m=c,c=r.runWebGLProgram(f,[c],t),m.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(m)}return c}class Gv{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const r=By(this.rank),o=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let i=0;i<e.length;i++)r[e[i]]=n[i];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class Hv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=By(this.rank),o=tv("rc",this.rank),c=new Array(this.rank);for(let i=0;i<t.length;i++)c[t[i]]=o[i];const l=`vec2(${c.slice(-2).join()})`,d=`++${o[this.rank-1]} < ${n[this.rank-1]}`,h=`getChannel(getA(${c.join()}), ${l})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${h};\n      if(${d}) {\n        result[1] = ${h};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${h};\n        if(${d}) {\n          result[3] = ${h};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function qv(e,t,n){const r=Object(l.Yd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hv(e.shape,t):new Gv(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Kv(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r;return function(e,t,n,r){const o=t,c=e.shape.length,d=l.Af.parseAxisParam(o,e.shape);let h=d;const f=l.xd.getAxesPermutation(h,c),m=null!=f;let y=e;m&&(y=qv(e,f,r),h=l.xd.getInnerMostAxes(h.length,c)),l.xd.assertAxesAreInnerMostDims("sum",h,c);const[x,v]=l.xd.computeOutAndReduceShapes(y.shape,h);let w=x;n&&(w=l.xd.expandShapeToKeepDim(x,d));const O=l.Af.sizeFromShape(v),k=Pv({inputs:{x:y},attrs:{shape:[l.Af.sizeFromShape(e.shape)/O,O]},backend:r}),I=Vv(k,Object(l.nf)(e.dtype),"sum",r),S=Pv({inputs:{x:I},attrs:{shape:w},backend:r});return r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(I),m&&r.disposeIntermediateTensorInfo(y),S}(o,c,d,n)}const Yv={kernelName:l.bd,backendName:"webgl",kernelFunc:Kv};function Xv(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{perm:c}=r,l=n,d=o.shape.length,h=new Array(d);for(let i=0;i<h.length;i++)h[i]=o.shape[c[i]];let f;if(l.shouldExecuteOnCPU([o])){const e=l.texData.get(o.dataId).values,t=Qx(e,o.shape,o.dtype,c,h);f=l.makeTensorInfo(h,o.dtype);l.texData.get(f.dataId).values=t}else f=qv(o,c,l);return f}const Zv={kernelName:l.jd,backendName:"webgl",kernelFunc:Xv};function Jv({a:a,b:b,transposeA:e,transposeB:t,backend:n,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:c=0,activation:d=null}){const h=a.shape.length,f=b.shape.length,m=e?a.shape[h-2]:a.shape[h-1],y=t?b.shape[f-1]:b.shape[f-2],x=e?a.shape[h-1]:a.shape[h-2],v=t?b.shape[f-2]:b.shape[f-1],w=a.shape.slice(0,-2),O=b.shape.slice(0,-2),k=l.Af.sizeFromShape(w),I=l.Af.sizeFromShape(O),S=l.Bd.assertAndGetBroadcastShape(a.shape.slice(0,-2),b.shape.slice(0,-2)).concat([x,v]);l.Af.assert(m===y,(()=>`Error in matMul: inner shapes (${m}) and (${y}) of Tensors with shapes ${a.shape} and ${b.shape} and transposeA=${e} and transposeB=${t} must match.`));const N=e?[k,m,x]:[k,x,m],T=t?[I,v,y]:[I,y,v],C=Pv({inputs:{x:a},backend:n,attrs:{shape:N}}),A=Pv({inputs:{x:b},backend:n,attrs:{shape:T}}),j=[C,A],$=Math.max(k,I),E=e?C.shape[1]:C.shape[2],R=null!=r,F=null!=o,D="leakyrelu"===d,_=null!=d?Ev(d,!0):null;let M;if((1===x||1===v)&&E>1e3&&!1===(R||F||D||null!=_)){let r=C,o=A;e&&(r=Xv({inputs:{x:C},backend:n,attrs:{perm:[0,2,1]}}),j.push(r)),t&&(o=Xv({inputs:{x:A},backend:n,attrs:{perm:[0,2,1]}}),j.push(o));const c=1===v;let l=r;1!==v&&(l=Pv({inputs:{x:r},backend:n,attrs:{shape:[$,E,1]}}),j.push(l));const d=1===v?2:1;let h=o;c&&(h=Pv({inputs:{x:o},backend:n,attrs:{shape:[$,1,E]}}),j.push(h));const f=Lv({inputs:{a:l,b:h},backend:n});M=Kv({inputs:{x:f},backend:n,attrs:{axis:d,keepDims:!0}}),j.push(f)}else{const d=Object(l.zf)(a.dtype,b.dtype),h=new Rv(N,T,[$,x,v],e,t,R,_,F,D),f=[C,A];if(null!=r&&f.push(r),F&&f.push(o),D){const e=n.makeTensorInfo([],"float32",l.Af.createScalarValue(c,"float32"));f.push(e),j.push(e)}M=n.runWebGLProgram(h,f,d)}const L=Pv({inputs:{x:M},backend:n,attrs:{shape:S}});j.push(M);for(const i of j)n.disposeIntermediateTensorInfo(i);return L}const Qv={kernelName:l.od,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b,bias:o,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:f}=r;return Jv({a:a,b:b,transposeA:l,transposeB:d,backend:n,bias:o,preluActivationWeights:c,leakyreluAlpha:f,activation:h})}},ew="return abs(x);";const tw={kernelName:l.a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Px(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let o;return o=Object(l.Yd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hv(r.shape,ew):new cv(r.shape,ew),n.runWebGLProgram(o,[r],r.dtype)}},nw=jv({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),rw={kernelName:l.b,backendName:"webgl",kernelFunc:nw},aw=jv({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sw={kernelName:l.c,backendName:"webgl",kernelFunc:aw},iw="return a + b;",ow=$v({opSnippet:iw,packedOpSnippet:iw,supportsComplex:!0,cpuKernelImpl:hx}),uw={kernelName:l.d,backendName:"webgl",kernelFunc:ow};class cw{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,i)=>`T${i}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class lw{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,i)=>`T${i}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const dw={kernelName:l.e,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,o=n;if(1===o.length)return vv({inputs:{x:o[0]},backend:r});if(o.length>Object(l.Yd)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(o.length/2),n=e({inputs:o.slice(0,t),backend:r}),c=e({inputs:o.slice(t),backend:r});return e({inputs:[n,c],backend:r})}const c=o.map((e=>e.dtype)).reduce(((e,t)=>Object(l.zf)(e,t))),d=o.map((e=>e.shape)),h=Object(l.Yd)().getBool("WEBGL_PACK")?new lw(o[0].shape,d):new cw(o[0].shape,d);return r.runWebGLProgram(h,o,c)}};const hw={kernelName:l.f,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r,h=o.shape.length,f=l.Af.parseAxisParam(c,o.shape);let m=f;const y=l.xd.getAxesPermutation(m,h);let x=o;null!=y&&(x=Xv({inputs:{x:o},backend:n,attrs:{perm:y}}),m=l.xd.getInnerMostAxes(m.length,h)),l.xd.assertAxesAreInnerMostDims("all",m,h);const[v,w]=l.xd.computeOutAndReduceShapes(x.shape,m),O=Pv({inputs:{x:x},backend:n,attrs:{shape:[-1,l.Af.sizeFromShape(w)]}}),k=Vv(O,O.dtype,"all",n);let I;if(d){I=Pv({inputs:{x:k},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(v,f)}})}else I=Pv({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}};const pw={kernelName:l.g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r,h=o.shape.length,f=l.Af.parseAxisParam(c,o.shape);let m=f;const y=l.xd.getAxesPermutation(m,h);let x=o;null!=y&&(x=Xv({inputs:{x:o},backend:n,attrs:{perm:y}}),m=l.xd.getInnerMostAxes(m.length,h)),l.xd.assertAxesAreInnerMostDims("any",m,h);const[v,w]=l.xd.computeOutAndReduceShapes(x.shape,m),O=Pv({inputs:{x:x},backend:n,attrs:{shape:[-1,l.Af.sizeFromShape(w)]}}),k=Vv(O,O.dtype,"any",n);let I;if(d){I=Pv({inputs:{x:k},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(v,f)}})}else I=Pv({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}};class fw{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:c}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,c];const l="max"===t?">":"<",d=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${d};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${l} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class mw{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,l.Af.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const o=e[e.length-1],c=Math.ceil(o/t);this.outputShape=e.slice(0,-1),c>1&&this.outputShape.push(c),r||this.variableNames.push("bestIndicesA");const d=this.outputShape,h=d.length,f=By(h),m=nv("coords",h);let y,x;if(1===c){x=h+1;const e=By(x);y=`\n        ${e} sourceLocR = ${e}(${m.join()}, 0);\n        ++${m[h-1]};\n        ${e} sourceLocG = ${e}(${m.join()}, 0);\n        ++${m[h-2]};\n        ${e} sourceLocA = ${e}(${m.join()}, 0);\n        --${m[h-1]};\n        ${e} sourceLocB = ${e}(${m.join()}, 0);\n        --${m[h-2]};`}else x=h,y=`\n        ${f} sourceLocR = coords;\n        ++${m[h-1]};\n        ${f} sourceLocG = coords;\n        ++${m[h-2]};\n        ${f} sourceLocA = coords;\n        --${m[h-1]};\n        ${f} sourceLocB = coords;\n        --${m[h-2]};`;const v=["x","y","z","w","u","v"].slice(0,x),w="."+v[x-1],O=v.map((e=>"int "+e)),k=nv("sourceLocR",x-1).concat("inIdx.r"),I=nv("sourceLocG",x-1).concat("inIdx.g"),S=nv("sourceLocB",x-1).concat("inIdx.b"),N=nv("sourceLocA",x-1).concat("inIdx.a"),T="max"===n?"greaterThan":"lessThan",C=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${k.join()}),\n                             getBestIndicesAChannel(${I.join()}),\n                             getBestIndicesAChannel(${S.join()}),\n                             getBestIndicesAChannel(${N.join()})));`,A=`vec4(\n            getAChannel(${k.join()}),\n            hasNextCol ? getAChannel(${I.join()}) : 0.,\n            hasNextRow ? getAChannel(${S.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${N.join()}) : 0.)`,j=r?"":`\n      float getBestIndicesAChannel(${O.join()}) {\n        return getChannel(getBestIndicesA(${v.join()}),\n                                          vec2(${v.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${O.join()}) {\n        return getChannel(getA(${v.join()}),\n                               vec2(${v.slice(-2).join()}));\n      }\n      ${j}\n      void main() {\n        ${f} coords = getOutputCoords();\n        bool hasNextCol = ${m[h-1]} < ${d[h-1]-1};\n        bool hasNextRow = ${m[h-2]} < ${d[h-2]-1};\n        ${y}\n        ivec4 srcIdx = ivec4(sourceLocR${w}, sourceLocG${w},\n          sourceLocB${w}, sourceLocA${w}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${A};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${C}\n          vec4 candidate = ${A};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${T}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function bw(e,t,n,r=null){let o=t.shape[0],c=t.shape[1];null!=r&&(o=r.shape[0],c=r.shape[1]);const d=l.xd.computeOptimalWindowSize(c),h={windowSize:d,inSize:c,batchSize:o,outSize:Math.ceil(c/d)},f=new fw(h,n,null==r),m=[t];null!=r&&m.push(r);const output=e.runWebGLProgram(f,m,"int32");if(1===output.shape[1])return output;const y=bw(e,t,n,output);return e.disposeIntermediateTensorInfo(output),y}function gw(e,t,n,r=null){const o=null!=r?r.shape:t.shape,c=o[o.length-1],d=l.xd.computeOptimalWindowSize(c),h=new mw(o,d,n,null==r),f=null==r?[t]:[t,r],output=e.runWebGLProgram(h,f,"int32");if(output.shape.length===t.shape.length){const r=gw(e,t,n,output);return e.disposeIntermediateTensorInfo(output),r}return output}function yw(e,t,n,r){const o=[n];if(l.xd.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),o,t.shape.length),!Object(l.Yd)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],c=e.texData.get(t.dataId);let d=t;null!==c&&c.isPacked&&(d=e.unpackTensor(t),n.push(d));const[h,f]=l.xd.computeOutAndReduceShapes(d.shape,o),m=l.Af.sizeFromShape(f),y=Pv({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}});n.push(y);const x=bw(e,y,r);n.push(x);const v=Pv({inputs:{x:x},backend:e,attrs:{shape:h}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),v}return gw(e,t,r)}const xw={kernelName:l.h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c}=r;let d=l.Af.parseAxisParam(c,o.shape);const h=l.xd.getAxesPermutation(d,o.shape.length);let f=o;const m=[];null!=h&&(f=Xv({inputs:{x:o},backend:n,attrs:{perm:h}}),m.push(f),d=l.xd.getInnerMostAxes(d.length,f.shape.length)),l.xd.assertAxesAreInnerMostDims("argMax",[d[0]],f.shape.length);const y=yw(n,f,d[0],"max");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const vw={kernelName:l.i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c}=r;let d=l.Af.parseAxisParam(c,o.shape);const h=l.xd.getAxesPermutation(d,o.shape.length);let f=o;const m=[];null!=h&&(f=Xv({inputs:{x:o},backend:n,attrs:{perm:h}}),m.push(f),d=l.xd.getInnerMostAxes(d.length,f.shape.length)),l.xd.assertAxesAreInnerMostDims("argMin",[d[0]],f.shape.length);const y=yw(n,f,d[0],"min");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},ww=jv({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Ow={kernelName:l.j,backendName:"webgl",kernelFunc:ww},kw=jv({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Iw={kernelName:l.k,backendName:"webgl",kernelFunc:kw},Sw=jv({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Nw={kernelName:l.l,backendName:"webgl",kernelFunc:Sw},Tw=$v({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Cw={kernelName:l.m,backendName:"webgl",kernelFunc:Tw},Aw=jv({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),jw={kernelName:l.n,backendName:"webgl",kernelFunc:Aw};class $w{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,l=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterHeight,y=e.effectiveFilterWidth,x=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const w="avg"===t,O=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,k=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let I="0.0";if(w||(I="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${l}, ${d});\n        const ivec2 pads = ivec2(${x}, ${v});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${m};\n              wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y};\n                wC += ${f}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?O:k:`wR * ${y} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(S="avgValue / count");const N=4*Math.floor(c/4),T=c%4,C=`\n      if (${w}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${x}, ${v});\n      const float initializationValue = ${I};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${I});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${m};\n            wR += ${h}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${N}; wC += 4) {\n            int xC = xCCorner + wC * ${f};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              getValue(batch, xR, xC + 3 * ${f}, d)\n            );\n\n            ${C}\n          }\n\n          int xC = xCCorner + ${N};\n          if (${1===T}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${C}\n          } else if (${2===T}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${C}\n          } else if (${3===T}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              initializationValue\n            );\n\n            ${C}\n          }\n        }\n        setOutput(${S});\n      }\n    `}}class Ew{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,l=e.strideDepth,d=e.strideHeight,h=e.strideWidth,f=e.dilationDepth,m=e.dilationHeight,y=e.dilationWidth,x=e.effectiveFilterDepth,v=e.effectiveFilterHeight,w=e.effectiveFilterWidth,O=e.padInfo.front,k=e.padInfo.top,I=e.padInfo.left;this.outputShape=e.outShape;const S="avg"===t;let N="0.0";if(S||(N="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${l}, ${d}, ${h});\n        const ivec3 pads = ivec3(${O}, ${k}, ${I});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${x};\n              wD += ${f}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${v};\n                wR += ${m}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${w};\n                  wC += ${y}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${v} * ${w} +\n                      wR * ${w} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let T=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(T="avgValue / count");const C=4*Math.floor(c/4),A=c%4,j=`\n      if (${S}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${l}, ${d}, ${h});\n      const ivec3 pads = ivec3(${O}, ${k}, ${I});\n      const float initializationValue = ${N};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${N});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${x};\n            wD += ${f}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${v};\n            wR += ${m}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${C}; wC += 4) {\n              int xC = xCCorner + wC * ${y};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${y}, ch)\n              );\n\n              ${j}\n            }\n\n            int xC = xCCorner + ${C};\n            if (${1===A}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${2===A}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${3===A}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                initializationValue\n              );\n\n              ${j}\n            }\n          }\n          setOutput(${T});\n        }\n      }\n    `}}const Rw={kernelName:l.o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t;Oy(o,"avgPool");const{filterSize:c,strides:d,pad:h,dimRoundingMode:f}=r;l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=l.xd.computePool2DInfo(o.shape,c,d,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&l.Af.arraysEqual(m.inShape,m.outShape))return vv({inputs:{x:o},backend:n});const y=new $w(m,"avg",!1);return n.runWebGLProgram(y,[o],"float32")}};const Fw={kernelName:l.p,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{filterSize:c,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r,y=l.xd.computePool3DInfo(o.shape,c,d,[1,1,1],h,f,m),x=new Ew(y,"avg",!1);return n.runWebGLProgram(x,[o],"float32")}};class Dw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,y=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${f}, ${m});\n      const float avgMultiplier = float(${y});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${h};\n            wC+= ${l}) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _w{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,x=e.effectiveFilterWidth,v=m-1-e.padInfo.front,w=y-1-e.padInfo.top,O=x-1-e.padInfo.left,k=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${v}, ${w}, ${O});\n      const float avgMultiplier = float(${k});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${m};\n            wD += ${d}) {\n          float dyD = float(dyDCorner + wD) / ${o}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${y};\n              wR += ${h}) {\n            float dyR = float(dyRCorner + wR) / ${c}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${x};\n                wC += ${f}) {\n              float dyC = float(dyCCorner + wC) / ${l}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Mw={kernelName:l.q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input}=t,c=input,{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=l.xd.computePool3DInfo(c.shape,d,h,[1,1,1],f,m),x=new _w(y);return n.runWebGLProgram(x,[o],c.dtype)}};const Lw={kernelName:l.r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input}=t,c=input;Oy([o,input],"avgPoolGrad");const{filterSize:d,strides:h,pad:f}=r,m=l.xd.computePool2DInfo(c.shape,d,h,1,f),y=new Dw(m);return n.runWebGLProgram(y,[o],c.dtype)}};const zw={kernelName:l.s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b}=t,{transposeA:o,transposeB:c}=r;return Jv({a:a,b:b,transposeA:o,transposeB:c,backend:n})}};class Pw{constructor(e,t,n,r,o,c){this.outputShape=[],this.variableNames=["x","mean","variance"],l.xd.assertAndGetBroadcastShape(e,t),l.xd.assertAndGetBroadcastShape(e,n);let d="0.0";null!=r&&(l.xd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),d="getOffsetAtOutCoords()");let h="1.0";null!=o&&(l.xd.assertAndGetBroadcastShape(e,o),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${d};\n        float scale = ${h};\n        float inv = scale * inversesqrt(variance + float(${c}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Bw{constructor(e,t,n,r,o,c){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],l.xd.assertAndGetBroadcastShape(e,t),l.xd.assertAndGetBroadcastShape(e,n);let d="vec4(0.0)";null!=r&&(l.xd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),d="getOffsetAtOutCoords()");let h="vec4(1.0)";null!=o&&(l.xd.assertAndGetBroadcastShape(e,o),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${d};\n        vec4 scale = ${h};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${c}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Ww={kernelName:l.lb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:o,variance:c,offset:d,scale:h}=e;l.Af.assert(o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),l.Af.assert(null==d||o.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),l.Af.assert(null==h||o.shape.length===h.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:f}=n;null==f&&(f=.001);const m=[r,o,c];let y=null;null!=d&&(y=d.shape,m.push(d));let x=null;null!=h&&(x=h.shape,m.push(h));const v=Object(l.Yd)().getBool("WEBGL_PACK_NORMALIZATION")?new Bw(r.shape,o.shape,c.shape,y,x,f):new Pw(r.shape,o.shape,c.shape,y,x,f);return t.runWebGLProgram(v,m,m[0].dtype)}};class Uw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=By(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Vw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let body;body=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,i)=>`sourceLoc.${Vw[i]} = start[${i}] + coords.${Vw[i]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${body}\n        setOutput(getSource(${n}));\n      }\n    `}}const Vw=["x","y","z","w","u","v"];class Gw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=By(this.rank),n=nv("coords",this.rank),r=nv("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,c=`getChannel(getSource(${r.join()}), ${o})`,l=`\n      result.x = ${c};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${c};\n        --${r[this.rank-1]};\n      }\n    `,d=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${c};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${c};\n        }\n      }\n    `,h=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,i)=>`start[${i}]`)).join()});`:e.map(((e,i)=>`${r[i]} = ${n[i]} + start[${i}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${h}\n        vec4 result = vec4(0.);\n        ${l}\n        ${d}\n        setOutput(result);\n      }\n    `}}function Hw(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{begin:c,size:d}=r,[h,f]=l.ef.parseSliceParams(o,c,d);if(l.ef.assertParamsValid(o,h,f),0===l.Af.sizeFromShape(f))return n.makeTensorInfo(f,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||"string"===o.dtype){const e=n.texData.get(o.dataId),t=Bx(e.values,h,f,o.shape,o.dtype);return n.makeTensorInfo(f,o.dtype,t)}const{isPacked:m}=n.texData.get(o.dataId),y=l.ef.isSliceContinous(o.shape,h,f);if(m||!y){const e=Object(l.Yd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gw(f):new Uw(f),t=[h];return n.runWebGLProgram(e,[o],o.dtype,t)}return n.uploadToGPU(o.dataId),function(e,t,n,r){const o=r.texData.get(e.dataId),c=r.makeTensorInfo(n,e.dtype),d=r.texData.get(c.dataId);Object.assign(d,o),d.refCount=1,d.shape=n,d.dtype=e.dtype;let h=l.ef.computeFlatOffset(t,l.Af.computeStrides(e.shape));o.slice&&(h+=o.slice.flatOffset),d.slice={flatOffset:h,origDataId:o.slice&&o.slice.origDataId||e.dataId};const f=r.dataRefCount.get(d.slice.origDataId)||1;return r.dataRefCount.set(d.slice.origDataId,f+1),c}(o,h,f,n)}const qw={kernelName:l.Ic,backendName:"webgl",kernelFunc:Hw},Kw={kernelName:l.t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockShape:c,crops:d}=r;l.Af.assert(o.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const h=c.reduce(((a,b)=>a*b)),f=l.xd.getReshaped(o.shape,c,h),m=l.xd.getPermuted(f.length,c.length),y=l.xd.getReshapedPermuted(o.shape,c,h),x=l.xd.getSliceBeginCoords(d,c.length),v=l.xd.getSliceSize(y,d,c.length),w=[],O=Pv({inputs:{x:o},backend:n,attrs:{shape:f}}),k=Xv({inputs:{x:O},backend:n,attrs:{perm:m}}),I=Pv({inputs:{x:k},backend:n,attrs:{shape:y}}),S=Hw({inputs:{x:I},backend:n,attrs:{begin:x,size:v}});return w.push(O),w.push(k),w.push(I),w.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const Yw={kernelName:l.u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l}=r,d=n.readSync(o.dataId),h=n.readSync(c.dataId),f=px(d,h,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,f)}};const Xw={kernelName:l.v,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:o}=t,c=n.readSync(r.dataId),d=n.readSync(o.dataId),h=l.xd.assertAndGetBroadcastShape(Array.from(c),Array.from(d));return n.makeTensorInfo([h.length],"int32",Int32Array.from(h))}},Zw=$v({opSnippet:"return float(a != b);",cpuKernelImpl:Fx,dtype:"bool"}),Jw={kernelName:l.cc,backendName:"webgl",kernelFunc:Zw};function Qw(e){const{inputs:t,backend:n}=e,{input:input}=t;return vv({inputs:{x:n.texData.get(input.dataId).complexTensorInfos.real},backend:n})}const eO={kernelName:l.mc,backendName:"webgl",kernelFunc:Qw};const tO={kernelName:l.w,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:o}=t,{x:c}=n,{dtype:d}=o;if("complex64"===d){if("complex64"===c.dtype)return vv({inputs:{x:c},backend:r});const t=l.Ff(c.shape),n=e({inputs:{x:c},backend:r,attrs:{dtype:"float32"}}),o=Ov({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),o}if("complex64"===c.dtype){const t=Qw({inputs:{input:c},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:d}});return r.disposeIntermediateTensorInfo(t),n}if(!l.Af.hasEncodingLoss(c.dtype,d)){const e=vv({inputs:{x:c},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:d}}if("int32"===d)return function(input,e){const t=new cv(input.shape,"return float(int(x));"),output=e.runWebGLProgram(t,[input],"int32");return{dataId:output.dataId,shape:output.shape,dtype:output.dtype}}(c,r);if("bool"===d){const e=r.makeTensorInfo([],"bool",l.Af.getTypedArrayFromDType("bool",1)),t=Zw({inputs:{a:c,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${d}`)}},nO="return ceil(x);",rO=jv({opSnippet:nO,packedOpSnippet:nO,cpuKernelImpl:mx}),aO={kernelName:l.x,backendName:"webgl",kernelFunc:rO};class sO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class iO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const oO={kernelName:l.y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{clipValueMin:c,clipValueMax:d}=r;let h;h=Object(l.Yd)().getBool("WEBGL_PACK_CLIP")?new iO(o.shape):new sO(o.shape);const f=[[c],[d]];return n.runWebGLProgram(h,[o],o.dtype,f)}};class uO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function cO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const lO={kernelName:l.A,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,o=n.texData.get(r.dataId),c=new uO(r.shape),l=[cO(r,o.complexTensorInfos.real),cO(r,o.complexTensorInfos.imag)];return n.runWebGLProgram(c,l,l[0].dtype)}};class dO{constructor(e){this.outputShape=[],this.outputShape=l.xd.computeOutShape(e,1),this.variableNames=e.map(((e,i)=>`T${i}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const r=t.length,o=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class hO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=l.xd.computeOutShape(e,t);const n=this.outputShape,r=n.length,o=By(r),c=nv("coords",r),d=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,i)=>`T${i}`));const h=new Array(e.length-1);h[0]=e[0][t];for(let i=1;i<h.length;i++)h[i]=h[i-1]+e[i][t];const f=d[t],m=d.slice(-2),y=d.join();let x=`if (${f} < ${h[0]}) {\n        return getChannel(\n            getT0(${y}), vec2(${m.join()}));\n        }`;for(let i=1;i<h.length;i++){const e=h[i-1];x+=`\n        if (${f} < ${h[i]}  && ${f} >= ${h[i-1]}) {\n          return getChannel(\n            getT${i}(${pO(d,f,e)}),\n            vec2(${pO(m,f,e)}));\n        }`}const v=h.length,w=h[h.length-1];x+=`\n        return getChannel(\n          getT${v}(${pO(d,f,w)}),\n          vec2(${pO(m,f,w)}));`,this.userCode=`\n      float getValue(${d.map((e=>"int "+e))}) {\n        ${x}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${c}), 0., 0., 0.);\n\n        ${c[r-1]} = ${c[r-1]} + 1;\n        if (${c[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${c});\n        }\n\n        ${c[r-2]} = ${c[r-2]} + 1;\n        if (${c[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${c});\n        }\n\n        ${c[r-1]} = ${c[r-1]} - 1;\n        if (${c[r-2]} < ${n[r-2]} &&\n            ${c[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${c});\n        }\n        setOutput(result);\n      }\n    `}}function pO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function fO(e){const{inputs:t,backend:n}=e,{input:input}=t;return vv({inputs:{x:n.texData.get(input.dataId).complexTensorInfos.imag},backend:n})}const mO={kernelName:l.ub,backendName:"webgl",kernelFunc:fO};function bO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Qw({inputs:{input:e},backend:n}))),o=e.map((e=>fO({inputs:{input:e},backend:n}))),c=bO(r,t,n),l=bO(o,t,n),d=Ov({inputs:{real:c,imag:l},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),o.forEach((i=>n.disposeIntermediateTensorInfo(i))),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),d}let o=n.shouldExecuteOnCPU(e);if("string"===r&&(o=!0),o){const o=e.map((e=>{const r=l.Af.sizeFromShape(e.shape.slice(t));return Pv({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),c=o.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),d=l.xd.computeOutShape(o.map((e=>e.shape)),1),h=1===o[0].shape[0],f=bx(c,d,r,h),m=l.xd.computeOutShape(e.map((e=>e.shape)),t),y=n.makeTensorInfo(m,r,f);return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}if(e.length>Object(l.Yd)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),o=bO(e.slice(0,r),t,n),c=bO(e.slice(r),t,n),l=bO([o,c],t,n);return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}if(Object(l.Yd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const o=new hO(e.map((e=>e.shape)),t);return n.runWebGLProgram(o,e,r)}const{tensors2D:c,outShape:d}=function(e,t,n){const r=l.xd.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Pv({inputs:{x:e},attrs:{shape:[-1,l.Af.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),h=new dO(c.map((e=>e.shape))),f=n.runWebGLProgram(h,c,r);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const m=Pv({inputs:{x:f},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(f),m}function gO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:o}=r,c=l.Af.parseAxisParam(o,t[0].shape)[0],d=l.xd.computeOutShape(t.map((e=>e.shape)),c);if(0===l.Af.sizeFromShape(d))return n.makeTensorInfo(d,t[0].dtype,[]);const h=t.filter((e=>l.Af.sizeFromShape(e.shape)>0));if(1===h.length)return vv({inputs:{x:h[0]},backend:n});const f=h.map((e=>e.shape));return l.xd.assertParamsConsistent(f,c),bO(h,c,n)}const yO={kernelName:l.B,backendName:"webgl",kernelFunc:gO};class xO{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const c=e.padInfo.top,l=e.padInfo.left,d=e.strideHeight,h=e.strideWidth,f=e.dilationHeight,m=e.dilationWidth,y=e.filterHeight,x=e.filterWidth,v=4*Math.floor(e.inChannels/4),w=e.inChannels%4,O="channelsLast"===e.dataFormat,k=O?1:2,I=O?2:3,S=O?3:1;let N="",T="";n&&(N=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,T="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${N}\n\n      const ivec2 strides = ivec2(${d}, ${h});\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${S}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${k}], coords[${I}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${y}; wR++) {\n          int xR = xRCorner + wR * ${f};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC++) {\n            int xC = xCCorner + wC * ${m};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${v}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${O}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===w}) {\n\n              if (${O}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${v}) *\n                    getW(wR, wC, ${v}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${v}, xR, xC) *\n                    getW(wR, wC, ${v}, d2);\n              }\n\n            } else if (${2===w}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${v}, d2),\n                getW(wR, wC, ${v} + 1, d2)\n              );\n\n              if (${O}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${v}),\n                  getX(batch, xR, xC, ${v} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${v}, xR, xC),\n                  getX(batch, ${v} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===w}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${v}, d2),\n                getW(wR, wC, ${v} + 1, d2),\n                getW(wR, wC, ${v} + 2, d2)\n              );\n\n              if (${O}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${v}),\n                  getX(batch, xR, xC, ${v} + 1),\n                  getX(batch, xR, xC, ${v} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${v}, xR, xC),\n                  getX(batch, ${v} + 1, xR, xC),\n                  getX(batch, ${v} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${C}\n        ${T}\n        setOutput(result);\n      }\n    `}}class vO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.filterDepth,y=e.filterHeight,x=e.filterWidth,v=4*Math.floor(e.inChannels/4),w=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${c}, ${l});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${m}; wF++) {\n          int xF = xFCorner + wF * ${d};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${y}; wR++) {\n            int xR = xRCorner + wR * ${h};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${x}; wC++) {\n              int xC = xCCorner + wC * ${f};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${v}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===w}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${v}) *\n                  getW(wF, wR, wC, ${v}, d2);\n              } else if (${2===w}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${v}),\n                  getX(batch, xF, xR, xC, ${v} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${v}, d2),\n                  getW(wF, wR, wC, ${v} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===w}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${v}),\n                  getX(batch, xF, xR, xC, ${v} + 1),\n                  getX(batch, xF, xR, xC, ${v} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${v}, d2),\n                  getW(wF, wR, wC, ${v} + 1, d2),\n                  getW(wF, wR, wC, ${v} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ky(this.outputShape.length);const{dataFormat:n}=t,r=Iy(),o="channelsLast"===n,c=o?0:1,l=o?1:2,d=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let h="";for(let e=0;e<=1;e++)for(let col=0;col<=1;col++)h+=`\n          blockIndex = rc.y + ${col};\n          pos = rc.x + ${e};\n\n          ${d}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${c}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${l}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${o}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+col}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+col}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${h}\n\n        ${r.output} = result;\n      }\n    `}}function OO({x:e,filter:filter,convInfo:t,backend:n,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:c=0,activation:d=null}){const h=e.shape,f=n.texData.get(e.dataId),m=t.inChannels,y=h[0]*h[1]*h[2],x=t.outChannels,v="channelsLast"===t.dataFormat;let w;const O=[];if(null!=o&&!v&&3===o.shape.length){const e=Xv({inputs:{x:o},backend:n,attrs:{perm:[1,2,0]}});O.push(e),o=e}if(!((1===y||1===x)&&m>1e3)&&f.isPacked&&v&&null!=f.texture&&h[2]%2!=0&&l.Af.arraysEqual(f.shape.slice(-3),h.slice(-3))){const m=h[0]*h[1]*(h[2]+1),y={dataId:e.dataId,shape:[1,m,t.inChannels],dtype:e.dtype},x=f.shape;f.shape=f.shape.slice(),f.shape[f.shape.length-2]++,l.Af.assert(my(f.shape,y.shape),(()=>`packed reshape ${f.shape} to ${y.shape} isn't free`));const v=Pv({inputs:{x:filter},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});O.push(v);const k=Jv({a:y,b:v,backend:n,transposeA:false,transposeB:false,bias:r,activation:d,preluActivationWeights:o,leakyreluAlpha:c}),I=n.texData.get(k.dataId);l.Af.assert(I.isPacked,(()=>"batchMatMul result is expected to be packed")),f.shape=x,I.shape=t.outShape,w=vv({inputs:{x:k},backend:n}),w.shape=t.outShape,O.push(k)}else{const l=v?e:Xv({inputs:{x:e},backend:n,attrs:{perm:[0,2,3,1]}}),h=l.shape,f=Pv({inputs:{x:l},backend:n,attrs:{shape:[1,h[0]*h[1]*h[2],t.inChannels]}}),m=Pv({inputs:{x:filter},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),y=Jv({a:f,b:m,transposeA:false,transposeB:false,backend:n,bias:r,activation:d,preluActivationWeights:o,leakyreluAlpha:c}),x=Pv({inputs:{x:y},backend:n,attrs:{shape:[t.batchSize,t.outHeight,t.outWidth,t.outChannels]}});w=v?x:Xv({inputs:{x:x},backend:n,attrs:{perm:[0,3,1,2]}}),v||(O.push(l),O.push(x)),O.push(f),O.push(m),O.push(y)}for(const i of O)n.disposeIntermediateTensorInfo(i);return w}function kO({x:e,filter:filter,convInfo:t,backend:n,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:c=0,activation:d=null}){const{filterWidth:h,filterHeight:f,inChannels:m,outWidth:y,outHeight:x,dataFormat:v}=t,w="channelsLast"===v,O=h*f*m,k=x*y,I=[O,k],S=[];if(null!=o&&!w&&3===o.shape.length){const e=Xv({inputs:{x:o},backend:n,attrs:{perm:[1,2,0]}});S.push(e),o=e}const N=Pv({inputs:{x:e},backend:n,attrs:{shape:e.shape.slice(1)}}),T=Pv({inputs:{x:filter},backend:n,attrs:{shape:[1,O,l.Af.sizeFromShape(filter.shape)/O]}});S.push(N),S.push(T);const C=new wO(I,t),A=[N.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],j=n.runWebGLProgram(C,[N],"float32",A),$=Pv({inputs:{x:j},backend:n,attrs:{shape:[1,I[0],I[1]]}});S.push(j),S.push($);const E=null!=r,R=null!=o,F="leakyrelu"===d,D=d?Ev(d,!0):null,_=new Rv($.shape,T.shape,[1,k,t.outChannels],!0,!1,E,D,R,F),M=[$,T];if(r&&M.push(r),R&&M.push(o),F){const e=n.makeTensorInfo([],"float32",l.Af.createScalarValue(c,"float32"));M.push(e),S.push(e)}const L=n.runWebGLProgram(_,M,"float32"),z=Pv({inputs:{x:L},backend:n,attrs:{shape:[1,x,y,t.outChannels]}}),P=w?z:Xv({inputs:{x:z},backend:n,attrs:{perm:[0,3,1,2]}});w||S.push(z),S.push(L);for(const i of S)n.disposeIntermediateTensorInfo(i);return P}const IO={kernelName:l.C,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dataFormat:h,dilations:f,dimRoundingMode:m}=r,y=l.xd.convertConv2DDataFormat(h),x=l.xd.computeConv2DInfo(o.shape,filter.shape,c,f,d,m,!1,y);let v;if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if(Object(l.Yd)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])v=kO({x:o,filter:filter,convInfo:x,backend:n});else{const e=new xO(x);v=n.runWebGLProgram(e,[o,filter],"float32")}else v=OO({x:o,filter:filter,convInfo:x,backend:n});const w=Pv({inputs:{x:v},backend:n,attrs:{shape:x.outShape}});return n.disposeIntermediateTensorInfo(v),w}};class SO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,c="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${c}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c="channelsLast"===e.dataFormat,l=t-1-e.padInfo.top,d=n-1-e.padInfo.left,h=c?1:2,f=c?2:3,m=c?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${m}];\n\n        ivec2 dyCorner = ivec2(coords[${h}], coords[${f}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${c}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,c=e.padInfo.top,l=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${o};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${c};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${l};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=t-1-e.padInfo.front,h=n-1-e.padInfo.top,f=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${h}, ${f});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${o}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${c}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${l}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AO={kernelName:l.D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,dy:c}=t,{strides:d,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:y}=r,x=l.xd.convertConv2DDataFormat(f),v=l.xd.computeConv2DInfo(o.shape,y,d,1,h,m,!1,x),w=new SO(v);return n.runWebGLProgram(w,[o,c],"float32")}};const jO={kernelName:l.E,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,filter:filter}=t,{inputShape:c,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r,y=l.xd.convertConv2DDataFormat(f),x=l.xd.computeConv2DInfo(c,filter.shape,d,1,h,m,!1,y),v=new NO(x);return n.runWebGLProgram(v,[o,filter],"float32")}};const $O={kernelName:l.F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dilations:h}=r,f=l.xd.computeConv3DInfo(o.shape,filter.shape,c,h,d),m=new vO(f);return n.runWebGLProgram(m,[o,filter],"float32")}};const EO={kernelName:l.G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,dy:c}=t,{strides:d,pad:h,filterShape:f}=r,m=l.xd.computeConv3DInfo(o.shape,f,d,1,h),y=new TO(m);return n.runWebGLProgram(y,[o,c],"float32")}};const RO={kernelName:l.H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,filter:filter}=t,{pad:c,strides:d,inputShape:h}=r,f=l.xd.computeConv3DInfo(h,filter.shape,d,1,c),m=new CO(f);return n.runWebGLProgram(m,[o,filter],"float32")}},FO=jv({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),DO={kernelName:l.I,backendName:"webgl",kernelFunc:FO},_O=jv({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),MO={kernelName:l.J,backendName:"webgl",kernelFunc:_O};class LO{constructor(e,t,n,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[c,l,d,h]=e,[f]=t,[m,y]=n;this.outputShape=[f,m,y,h];const x="bilinear"===r?1:0,[v,w]=[l-1+".0",d-1+".0"],[O,k,I]=m>1?[""+(l-1)/(m-1),"(y2-y1) * height_ratio",`y1*${v} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${v}`],[S,N,T]=y>1?[""+(d-1)/(y-1),"(x2-x1) * width_ratio",`x1*${w} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${w}`];this.userCode=`\n      const float height_ratio = float(${O});\n      const float width_ratio = float(${S});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${c}) {\n          return;\n        }\n\n        float height_scale = ${k};\n        float width_scale = ${N};\n\n        float in_y = ${I};\n        if( in_y < 0.0 || in_y > ${v} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${T};\n        if( in_x < 0.0 || in_x > ${w} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${x} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const zO={kernelName:l.K,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:image,boxes:o,boxInd:c}=t,{cropSize:l,method:d,extrapolationValue:h}=r,f=new LO(image.shape,o.shape,l,d,h);return n.runWebGLProgram(f,[image,o,c],"float32")}};var PO;!function(e){e.Prod="*",e.Sum="+"}(PO||(PO={}));class BO{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,c=this.op===PO.Prod?"1.0":"0.0",l=n?c:`getX(${WO(o,"coords",this.op)})`,d=this.outputShape[this.outputShape.length-1];let h="",f="";n?(h=r?"end != "+(d-1):"end != 0",f=r?"end + 1":"end - 1"):(h=r?`end + pow2 < ${d}`:"end >= pow2",f=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${By(o)} coords = getOutputCoords();\n        int end = ${UO(o,"coords",this.op)};\n        float val = ${l};\n        int pow2 = int(pow(2.0, index));\n        if (${h}) {\n          int idx = ${f};\n          ${UO(o,"coords",this.op)} = idx;\n          val ${this.op}= getX(${WO(o,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function WO(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function UO(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function VO(e,t,n,r,o,c){const d=t.shape.length,h=l.xd.getAxesPermutation([r],d);let f=t;null!=h&&(f=Xv({inputs:{x:t},backend:n,attrs:{perm:h}}));const m=l.xd.getInnerMostAxes(1,d)[0];if(m!==d-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const y=f.shape[m];let x=vv({inputs:{x:f},backend:n});for(let i=0;i<=Math.ceil(Math.log2(y))-1;i++){const t=new BO(e,f.shape,!1,c),r=[[i]],o=x;x=n.runWebGLProgram(t,[x],x.dtype,r),n.disposeIntermediateTensorInfo(o)}if(o){const t=new BO(e,f.shape,o,c),r=x;x=n.runWebGLProgram(t,[x],x.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=h){const e=Xv({inputs:{x:x},backend:n,attrs:{perm:l.xd.getUndoAxesPermutation(h)}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(f),e}return x}const GO={kernelName:l.L,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,exclusive:l,reverse:d}=r;return VO(PO.Prod,o,n,c,l,d)}};const HO={kernelName:l.M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,exclusive:l,reverse:d}=r;return VO(PO.Sum,o,n,c,l,d)}};const qO={kernelName:l.O,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l,binaryOutput:d}=r;if(1===o.shape.length){const e=n.readSync(o.dataId),t=n.readSync(c.dataId),r=px(e,t,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,r)}if(2===o.shape.length){const e=n.bufferSync(o),t=n.bufferSync(c),r=fx(e,t,l,d);return n.makeTensorInfo(r.shape,c.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};class KO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const YO={kernelName:l.P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockSize:c,dataFormat:l}=r,d=o.shape[0],h=("NHWC"===l?o.shape[1]:o.shape[2])*c,f=("NHWC"===l?o.shape[2]:o.shape[3])*c,m=("NHWC"===l?o.shape[3]:o.shape[1])/(c*c),y=new KO("NHWC"===l?[d,h,f,m]:[d,m,h,f],c,l);return n.runWebGLProgram(y,[o],o.dtype)}};class XO{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ky(this.outputShape.length);const c=e.filterHeight,l=e.filterWidth,d=e.outChannels/e.inChannels;let h="",f="";n&&(h=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${d};\n        int q = d2 - d1 * ${d};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${l}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}class ZO{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ky(this.outputShape.length);const c=e.outChannels/e.inChannels,d=e.padInfo.left,h=e.strideWidth,f=e.dilationWidth,m=e.filterHeight,y=e.filterWidth,x=y;let v="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<y;e++)v+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;v+=`\n    for (int r = 0; r < ${m}; r++) {\n      `;for(let e=0;e<y;e++)v+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;v+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(x+1)/2;e++){const t=2*e;if(v+=`\n          xC = xCCorner + ${t*f};\n          `,1===h){if(t<y&&(d%2==1?(v+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,v+=1===f&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):v+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<y)){const e=d%2==0?l.Af.nearestLargerEven(f):f;f%2==0&&d%2==1||f%2!=0&&d%2!=1?(v+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,f>1&&(v+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),v+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):v+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<y&&(d%2==1?(v+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<y&&(v+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(v+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<y&&(v+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<y&&(v+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<y&&(v+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}v+="\n    }\n  ",v+="\n      }\n    ";let w="",O="";n&&(w=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,O="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${c};\n        int q = d2 - d1 * ${c};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${v}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${k}\n        ${O}\n        setOutput(result);\n      }\n    `}}const JO={kernelName:l.Q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dilations:h,dimRoundingMode:f}=r;let m=h;null==m&&(m=[1,1]),l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(c,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`));const y=l.xd.computeConv2DInfo(o.shape,filter.shape,c,m,d,f,!0);let x;x=Object(l.Yd)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1?new ZO(y):new XO(y);const v=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]];return n.runWebGLProgram(x,[o,filter],"float32",v)}};class QO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${c} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ek{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c=t-1-e.padInfo.top,l=n-1-e.padInfo.left,d=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${d}; dm++) {\n              int d2 = d1 * ${d} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const tk={kernelName:l.R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,dy:c}=t,{strides:d,dilations:h,pad:f,dimRoundingMode:m,filterShape:y}=r,x=l.xd.computeConv2DInfo(o.shape,y,d,h,f,m,!0),v=new QO(x);return n.runWebGLProgram(v,[o,c],"float32")}};const nk={kernelName:l.S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,filter:filter}=t,{strides:c,dilations:d,pad:h,dimRoundingMode:f,inputShape:m}=r,y=l.xd.computeConv2DInfo(m,filter.shape,c,d,h,f,!0),x=new ek(y);return n.runWebGLProgram(x,[o,filter],"float32")}};class rk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ak={kernelName:l.T,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,o=[...r.shape,...r.shape],c=l.Af.sizeFromShape(r.shape),d=Pv({inputs:{x:r},backend:n,attrs:{shape:[c]}}),h=new rk(c),f=n.runWebGLProgram(h,[d],d.dtype),m=Pv({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class sk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:o,strideWidth:c,filterHeight:l,filterWidth:d,dilationHeight:h,dilationWidth:f}=e,{top:m,left:y}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${c});\n      const ivec2 pads = ivec2(${m}, ${y});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${l}; h++) {\n          int hIn = hBeg + h * ${h};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${d}; w++) {\n              int wIn = wBeg + w * ${f};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ik={kernelName:l.U,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter}=t,{strides:c,pad:d,dilations:h}=r,f=l.xd.computeDilation2DInfo(o.shape,filter.shape,c,d,"NHWC",h);let m;const y=new sk(f);m=n.runWebGLProgram(y,[o,filter],"float32");const x=Pv({inputs:{x:m},backend:n,attrs:{shape:f.outShape}});return n.disposeIntermediateTensorInfo(m),x}};const ok={kernelName:l.X,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:o}=r,c=t,{allDims:d,summedDims:h,idDims:f}=l.xd.decodeEinsumEquation(o,c.length);l.xd.checkEinsumDimSizes(d.length,f,c);const{path:path,steps:m}=l.xd.getEinsumComputePath(h,f),y=m.length;let x=null,v=d.length;const w=[];for(let i=0;i<y;++i){for(const e of m[i]){const{permutationIndices:t,expandDims:r}=l.xd.getEinsumPermutation(v,f[e]);let o;l.xd.isIdentityPermutation(t)?o=c[e]:(o=Xv({inputs:{x:c[e]},backend:n,attrs:{perm:t}}),w.push(o));const d=o.shape.slice();for(let e=0;e<r.length;++e)d.splice(r[e],0,1);l.Af.arraysEqual(o.shape,d)||(o=Pv({inputs:{x:o},backend:n,attrs:{shape:d}}),w.push(o)),null===x?x=o:(x=Lv({inputs:{a:o,b:x},backend:n}),w.push(x))}i<y-1&&(path[i]>=0&&(x=Kv({inputs:{x:x},backend:n,attrs:{axis:path[i]-(d.length-v),keepDims:!1}}),w.push(x)),v--)}for(const e of w)e!==x&&n.disposeIntermediateTensorInfo(e);return x}},uk=jv({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ck={kernelName:l.Y,backendName:"webgl",kernelFunc:uk},lk={kernelName:l.Z,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:o}=t,c=Object(l.Yd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,o.shape):new yv("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,o.shape);return n.runWebGLProgram(c,[r,o],r.dtype)}},dk=$v({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:gx}),hk={kernelName:l.ab,backendName:"webgl",kernelFunc:dk},pk=jv({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${l.xd.ERF_P};\n  float a1 = ${l.xd.ERF_A1};\n  float a2 = ${l.xd.ERF_A2};\n  float a3 = ${l.xd.ERF_A3};\n  float a4 = ${l.xd.ERF_A4};\n  float a5 = ${l.xd.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),fk={kernelName:l.bb,backendName:"webgl",kernelFunc:pk},mk=jv({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:yx,dtype:"float32"}),bk={kernelName:l.cb,backendName:"webgl",kernelFunc:mk};function gk(e){const{inputs:t,attrs:n,backend:r}=e,{dim:o}=n,{input:input}=t,c=input.shape.length,d=input.shape.slice();let h=o;return o<0&&(l.Af.assert(-(c+1)<=o,(()=>`Axis must be in the interval [${-(c+1)}, ${c}]`)),h=c+o+1),d.splice(h,0,1),Pv({inputs:{x:input},backend:r,attrs:{shape:d}})}const yk={kernelName:l.db,backendName:"webgl",kernelFunc:gk},xk="return exp(x) - 1.0;",vk=jv({opSnippet:xk,packedOpSnippet:xk,cpuKernelImpl:xx}),wk={kernelName:l.eb,backendName:"webgl",kernelFunc:vk};class Ok{constructor(component,e,t){this.variableNames=["real","imag"];const n=e[1];this.outputShape=e;const r=t?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=t?`${n}.0`:"1.0";let c;if("real"===component)c="return real * expR - imag * expI;";else{if("imag"!==component)throw new Error(`FFT component must be either "real" or "imag", got ${component}.`);c="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${c}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${n});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${n}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function kk(e,t,n){const r=n.texData.get(e.dataId),o=l.Af.sizeFromShape(e.shape),c=e.shape[e.shape.length-1],d=Pv({inputs:{x:e},backend:n,attrs:{shape:[o/c,c]}}),h=d.shape,f=new Ok("real",h,t),m=new Ok("imag",h,t),y=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:h},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:h}],x=n.runWebGLProgram(f,y,"float32"),v=n.runWebGLProgram(m,y,"float32"),w=Ov({inputs:{real:x,imag:v},backend:n});n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v);const O=Pv({inputs:{x:w},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(w),O}const Ik={kernelName:l.fb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t;return kk(input,!1,n)}};class Sk{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Nk(e){const{backend:t,attrs:n}=e,{shape:r,value:o}=n;let{dtype:c}=n;if(c=c||l.Af.inferDtype(o),"string"===c){const e=l.Af.getArrayFromDType(c,l.Af.sizeFromShape(r));return e.fill(o),t.makeTensorInfo(r,c,e)}{const e=new Sk(r,o),n=[[o]];return t.runWebGLProgram(e,[],c,n)}}const Tk={kernelName:l.gb,backendName:"webgl",kernelFunc:Nk};class Ck{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ak={kernelName:l.hb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:image}=e,n=t,r=new Ck(image.shape);return n.runWebGLProgram(r,[image],image.dtype)}},jk="return floor(x);",$k=jv({opSnippet:jk,packedOpSnippet:jk,cpuKernelImpl:vx}),Ek={kernelName:l.ib,backendName:"webgl",kernelFunc:$k},Rk=$v({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Fk={kernelName:l.jb,backendName:"webgl",kernelFunc:Rk};class Dk{constructor(e){this.variableNames=["A"];const t=Iy(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class _k{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Iy(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Mk={kernelName:l.kb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:o}=t;const{numChannels:c}=r,d="undefined"!=typeof HTMLVideoElement&&o instanceof HTMLVideoElement,h="undefined"!=typeof HTMLImageElement&&o instanceof HTMLImageElement,[f,m]=d?[o.videoWidth,o.videoHeight]:[o.width,o.height],y=[m,f],x=[m,f,c];(h||d)&&(null==Lk&&(Lk=document.createElement("canvas").getContext("2d")),Lk.canvas.width=f,Lk.canvas.height=m,Lk.drawImage(o,0,0,f,m),o=Lk.canvas);const v=n.makeTensorInfo(y,"int32");n.texData.get(v.dataId).usage=Hg.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(v.dataId),o);const w=Object(l.Yd)().getBool("WEBGL_PACK")?new _k(x):new Dk(x),O=n.runWebGLProgram(w,[v],"int32");return n.disposeData(v.dataId),O}};let Lk;const zk={kernelName:l.mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:d}=t,{strides:h,pad:f,dataFormat:m,dilations:y,dimRoundingMode:x,activation:v,leakyreluAlpha:w}=r,O=l.xd.convertConv2DDataFormat(m),k=l.xd.computeConv2DInfo(o.shape,filter.shape,h,y,f,x,!1,O);let I;const S=[];if(1!==k.filterHeight||1!==k.filterWidth||1!==k.dilationHeight||1!==k.dilationWidth||1!==k.strideHeight||1!==k.strideWidth||"SAME"!==k.padInfo.type&&"VALID"!==k.padInfo.type)if(Object(l.Yd)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])I=kO({x:o,filter:filter,convInfo:k,backend:n,bias:c,activation:v,preluActivationWeights:d,leakyreluAlpha:w});else{const e=null!=c,t=null!=d,r="leakyrelu"===v,h=v?Ev(v,!1):null,f=new xO(k,e,h,t,r),y=[o,filter],x=(input,e)=>{if("NCHW"===e&&1===input.shape.length&&1!==input.shape[0]){const e=Pv({inputs:{x:input},backend:n,attrs:{shape:[input.shape[0],1,1]}});return S.push(e),e}return input};if(e&&y.push(x(c,m)),t&&y.push(x(d,m)),r){const e=n.makeTensorInfo([],"float32",l.Af.createScalarValue(w,"float32"));y.push(e),S.push(e)}I=n.runWebGLProgram(f,y,"float32")}else I=OO({x:o,filter:filter,convInfo:k,backend:n,bias:c,activation:v,preluActivationWeights:d,leakyreluAlpha:w});const N=Pv({inputs:{x:I},backend:n,attrs:{shape:k.outShape}});return S.push(I),S.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};const Pk={kernelName:l.nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:d}=t,{strides:h,pad:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:v}=r,w=[];let O=m;null==O&&(O=[1,1]),l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(h,O),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${h} and dilations '${O}'`));const k=l.xd.computeConv2DInfo(o.shape,filter.shape,h,O,f,y,!0),I=Object(l.Yd)().getBool("WEBGL_PACK_DEPTHWISECONV")&&k.strideWidth<=2&&k.outChannels/k.inChannels==1,S=x?Ev(x,I):null,N=[o,filter],T=null!=c,C=null!=d,A="leakyrelu"===x;if(T&&N.push(c),C&&N.push(d),A){const e=n.makeTensorInfo([],"float32",l.Af.createScalarValue(v,"float32"));N.push(e),w.push(e)}let j;j=I?new ZO(k,T,S,C,A):new XO(k,T,S,C,A);const $=[[k.padInfo.top,k.padInfo.left],[k.strideHeight,k.strideWidth],[k.dilationHeight,k.dilationWidth],[k.inHeight,k.inWidth]],E=n.runWebGLProgram(j,N,"float32",$);return w.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class Bk{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=By(t.length),o=By(n.length),c=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${c};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Wk={kernelName:l.ob,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:o}=t,c=o.shape,d=c[c.length-1],h=l.Af.sizeFromShape(r.shape),[f,m,y,x]=l.xd.prepareAndValidate(r,o),v=Pv({inputs:{x:o},backend:n,attrs:{shape:[m,d]}}),w=Pv({inputs:{x:r},backend:n,attrs:{shape:[l.Af.sizeFromShape(r.shape)/y,y]}});if(n.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const e=n.readSync(o.dataId),t=n.bufferSync(r),c=wx(e,t,r.dtype,m,d,y,x,r.shape,h);return n.makeTensorInfo(f,r.dtype,c.values)}const O=new Bk(d,x,[m,y]),k=n.runWebGLProgram(O,[w,v],w.dtype),I=Pv({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),I}};class Uk{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=By(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let i=0;i<e.length;i++)2===i?r.push("index"):r.push(`${n[i]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Vk(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,indices:c}=t,{axis:d,batchDims:h}=r,f=l.Af.parseAxisParam(d,o.shape)[0];if(Object(l.Yd)().get("DEBUG")){const e=n.readSync(c.dataId),t=o.shape[f];for(let i=0;i<e.length;++i){const n=e[i];l.Af.assert(n<=t-1&&n>=0,(()=>`GatherV2: the index value ${n} is not in [0, ${t-1}]`))}}const m=l.xd.segment_util.collectGatherOpShapeInfo(o,c,f,h),y=l.Af.sizeFromShape(c.shape),x=[],v=Pv({inputs:{x:o},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),w=Pv({inputs:{x:c},backend:n,attrs:{shape:[m.batchSize,y/m.batchSize]}});x.push(v),x.push(w);const O=[m.batchSize,m.outerSize,y/m.batchSize,m.sliceSize];if(n.shouldExecuteOnCPU([o,c])||"string"===o.dtype){const e=n.bufferSync(w),t=n.bufferSync(v),r=Ox(t,e,O);return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(m.outputShape,r.dtype,r.values)}const k=new Uk(v.shape,O),I=n.runWebGLProgram(k,[v,w],v.dtype);x.push(I);const S=Pv({inputs:{x:I},backend:n,attrs:{shape:m.outputShape}});return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}const Gk={kernelName:l.pb,backendName:"webgl",kernelFunc:Vk},Hk=$v({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:kx,dtype:"bool"}),qk={kernelName:l.qb,backendName:"webgl",kernelFunc:Hk},Kk=$v({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ix}),Yk={kernelName:l.rb,backendName:"webgl",kernelFunc:Kk};const Xk={kernelName:l.sb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t;return kk(input,!0,n)}},Zk=jv({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Jk={kernelName:l.vb,backendName:"webgl",kernelFunc:Zk},Qk=jv({opSnippet:"return float(isinf(x));",dtype:"bool"}),eI={kernelName:l.wb,backendName:"webgl",kernelFunc:Qk},tI=jv({opSnippet:"return float(isnan(x));",dtype:"bool"}),nI={kernelName:l.xb,backendName:"webgl",kernelFunc:tI},rI=$v({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Sx,dtype:"bool"}),aI={kernelName:l.Cb,backendName:"webgl",kernelFunc:rI},sI=$v({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Nx,dtype:"bool"}),iI={kernelName:l.Db,backendName:"webgl",kernelFunc:sI};const oI={kernelName:l.Eb,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:c}=n,l=Tx(r,o,c);return t.makeTensorInfo([l.length],"float32",l)}},uI=jv({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Cx}),cI={kernelName:l.Fb,backendName:"webgl",kernelFunc:uI},lI=jv({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),dI={kernelName:l.Gb,backendName:"webgl",kernelFunc:lI},hI=$v({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),pI={kernelName:l.Hb,backendName:"webgl",kernelFunc:hI},fI=jv({opSnippet:"return float(!(x >= 1.0));"}),mI={kernelName:l.Ib,backendName:"webgl",kernelFunc:fI},bI=$v({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),gI={kernelName:l.Jb,backendName:"webgl",kernelFunc:bI};class yI{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[];const c=t,l=e[3]-1;let d;this.outputShape=e;const h=`float(${n}) + float(${r}) * sum`;d=.5===o?`inversesqrt(${h})`:1===o?`1.0/(${h})`:`exp(log(${h}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${c}; j <= ${c}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${l}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${d};\n        setOutput(val);\n      }\n    `}}class xI{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const c=t,l=e[3]-1;let d;this.outputShape=e;const h=`float(${n}) + float(${r}) * sum`;d=.5===o?`inversesqrt(${h})`:1===o?`1.0/(${h})`:`exp(log(${h}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${c};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${c}; j <= ${c}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${d};\n        setOutput(result);\n      }\n    `}}const vI={kernelName:l.zb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{depthRadius:c,bias:d,alpha:h,beta:f}=r,m=Object(l.Yd)().getBool("WEBGL_PACK_NORMALIZATION")?new xI(o.shape,c,d,h,f):new yI(o.shape,c,d,h,f);return n.runWebGLProgram(m,[o],o.dtype)}};class wI{constructor(e,t,n,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const OI={kernelName:l.Ab,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o,y:c,dy:l}=t,{depthRadius:d,bias:h,alpha:f,beta:m}=r,y=new wI(o.shape,d,h,f,m);return n.runWebGLProgram(y,[o,c,l],o.dtype)}};function kI(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reductionIndices:c,keepDims:d}=r,h=o.shape.length,f=l.Af.parseAxisParam(c,o.shape);let m=f;const y=l.xd.getAxesPermutation(m,h),x=null!=y,v=n.shouldExecuteOnCPU([o]);let w=o;if(x){if(v){const e=n.texData.get(w.dataId).values,t=new Array(h);for(let i=0;i<t.length;i++)t[i]=o.shape[y[i]];const r=Qx(e,o.shape,o.dtype,y,t);w=n.makeTensorInfo(t,o.dtype);n.texData.get(w.dataId).values=r}else w=qv(o,y,n);m=l.xd.getInnerMostAxes(m.length,h)}l.xd.assertAxesAreInnerMostDims("max",m,h);const[O,k]=l.xd.computeOutAndReduceShapes(w.shape,m);let I,S=O;if(d&&(S=l.xd.expandShapeToKeepDim(O,f)),v){const e=n.texData.get(w.dataId).values,t=Ax(e,l.Af.sizeFromShape(k),S,o.dtype);I=n.makeTensorInfo(S,o.dtype);n.texData.get(I.dataId).values=t}else I=function(e,t,n,r){const o=l.Af.sizeFromShape(t),c=Pv({inputs:{x:e},attrs:{shape:[l.Af.sizeFromShape(e.shape)/o,o]},backend:r}),d=Vv(c,e.dtype,"max",r),h=Pv({inputs:{x:d},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),h}(w,k,S,n);return x&&n.disposeIntermediateTensorInfo(w),I}const II={kernelName:l.Kb,backendName:"webgl",kernelFunc:kI},SI=$v({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:jx}),NI={kernelName:l.Qb,backendName:"webgl",kernelFunc:SI};const TI={kernelName:l.Lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t;Oy(o,"maxPool");const{filterSize:c,strides:d,pad:h,dimRoundingMode:f}=r;l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=l.xd.computePool2DInfo(o.shape,c,d,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&l.Af.arraysEqual(m.inShape,m.outShape))return vv({inputs:{x:o},backend:n});const y=new $w(m,"max",!1);return n.runWebGLProgram(y,[o],o.dtype)}};const CI={kernelName:l.Mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{filterSize:c,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r,y=l.xd.computePool3DInfo(o.shape,c,d,[1,1,1],h,m,f),x=new Ew(y,"max",!1);return n.runWebGLProgram(x,[o],o.dtype)}};class AI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.top,d=c-1-e.padInfo.left,h=o*c-1;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${c} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=d-1-e.padInfo.front,y=h-1-e.padInfo.top,x=f-1-e.padInfo.left,v=d*h*f-1;this.userCode=`\n      const ivec3 pads = ivec3(${m}, ${y}, ${x});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n           wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${c}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${f};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${v} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${h} * ${f} +\n                  wR * ${f} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const $I={kernelName:l.Nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input}=t,c=input,{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=l.xd.computePool3DInfo(c.shape,d,h,[1,1,1],f,m),x=new Ew(y,"max",!0),v=n.runWebGLProgram(x,[c],c.dtype),w=new jI(y),O=n.runWebGLProgram(w,[o,v],c.dtype);return n.disposeIntermediateTensorInfo(v),O}};const EI={kernelName:l.Ob,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:o,input:input,output:output}=t,c=input;Oy([input,output],"maxPoolGrad");const{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=l.xd.computePool2DInfo(c.shape,d,h,1,f,m),x=new $w(y,"max",!0),v=n.runWebGLProgram(x,[c],c.dtype),w=new AI(y),O=n.runWebGLProgram(w,[o,v],c.dtype);return n.disposeIntermediateTensorInfo(v),O}};const RI={kernelName:l.Pb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:o,strides:c,pad:d,includeBatchInIndex:h}=t,f=n;l.Af.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const m=[1,1];l.Af.assert(l.xd.eitherStridesOrDilationsAreOne(c,m),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`));const y=l.xd.computePool2DInfo(r.shape,o,c,m,d),[x,v]=function(e,t,n,r){let o=new $w(n,"max",!1);const c=r.runWebGLProgram(o,[e],"float32");return o=new $w(n,"max",!0,!0,t),[c,r.runWebGLProgram(o,[e],"float32")]}(r,h,y,f);return[x,v]}};const FI={kernelName:l.Rb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:o,axis:c}=t,d=n,h=r.shape.length,f=l.Af.parseAxisParam(c,r.shape);let m=f;const y=l.xd.getAxesPermutation(m,h),x=null!=y,v=d.shouldExecuteOnCPU([r]),w=[];let O=r;if(x){if(v){const e=d.texData.get(O.dataId).values,t=new Array(h);for(let i=0;i<t.length;i++)t[i]=r.shape[y[i]];const n=Qx(e,r.shape,r.dtype,y,t);O=d.makeTensorInfo(t,r.dtype);d.texData.get(O.dataId).values=n}else O=qv(r,y,d);w.push(O),m=l.xd.getInnerMostAxes(m.length,h)}l.xd.assertAxesAreInnerMostDims("sum",m,h);const[k,I]=l.xd.computeOutAndReduceShapes(O.shape,m);let S=k;o&&(S=l.xd.expandShapeToKeepDim(k,f));const N=function(e,t,n,r){const o=l.Af.sizeFromShape(t),c=Pv({inputs:{x:e},attrs:{shape:[l.Af.sizeFromShape(e.shape)/o,o]},backend:r}),d=Vv(c,"float32","mean",r),h=Pv({inputs:{x:d},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),h}(O,I,S,d);for(const i of w)d.disposeIntermediateTensorInfo(i);return N}};const DI={kernelName:l.Sb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r,h=o.shape.length,f=l.Af.parseAxisParam(c,o.shape);let m=f;const y=l.xd.getAxesPermutation(m,h);let x=o;null!=y&&(x=Xv({inputs:{x:o},backend:n,attrs:{perm:y}}),m=l.xd.getInnerMostAxes(m.length,o.shape.length)),l.xd.assertAxesAreInnerMostDims("min",m,h);const[v,w]=l.xd.computeOutAndReduceShapes(x.shape,m),O=Pv({inputs:{x:x},backend:n,attrs:{shape:[-1,l.Af.sizeFromShape(w)]}}),k=Vv(O,O.dtype,"min",n);let I;if(d){I=Pv({inputs:{x:k},backend:n,attrs:{shape:l.xd.expandShapeToKeepDim(v,f)}})}else I=Pv({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}},_I=$v({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:$x}),MI={kernelName:l.Tb,backendName:"webgl",kernelFunc:_I};class LI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=By(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),h="reflect"===n?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${c});\n      ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${h};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${d}));\n      }\n    `:`\n        int start = ${c};\n        int end = ${l};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${h};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${h};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class zI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=By(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=nv("rc",r),source=nv("source",r),h=`${d[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m="reflect"===n?0:1;let y="";if(1===r){const e=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${m};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${m};\n        }\n        source -= start;\n      `;y=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${source.join()}), ${f});\n        ${d[r-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${source.join()}), ${f});\n        }\n      `}else{const e=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${m}) +\n                gte * ((end - 1) * 2 - source + ${m});\n        source -= start;\n      `;y=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${source.join()}), ${f});\n        ${d[r-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${source.join()}), ${f});\n        }\n        rc = outputLoc;\n        ${d[r-2]} += 1;\n        if(${d[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${source.join()}), ${f});\n          ${d[r-1]} += 1;\n          if(${h}) {\n            ${e}\n            result[3] = getChannel(getX(${source.join()}), ${f});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${c});\n      const ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${y}\n        setOutput(result);\n      }\n    `}}const PI={kernelName:l.Ub,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:o,mode:c}=n,d=Object(l.Yd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zI(r.shape,o,c):new LI(r.shape,o,c);return t.runWebGLProgram(d,[r],r.dtype)}},BI=$v({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),WI={kernelName:l.Vb,backendName:"webgl",kernelFunc:BI};class UI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const VI=$v({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),GI={kernelName:l.nc,backendName:"webgl",kernelFunc:VI},HI="return a - b;",qI=$v({opSnippet:HI,packedOpSnippet:HI,supportsComplex:!0,cpuKernelImpl:Xx}),KI={kernelName:l.ad,backendName:"webgl",kernelFunc:qI};function YI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{dim:c}=r,d=l.Af.parseAxisParam([c],o.shape),h=kI({inputs:{x:o},backend:n,attrs:{reductionIndices:d,keepDims:!1}}),f=l.xd.expandShapeToKeepDim(h.shape,d),m=Pv({inputs:{x:h},backend:n,attrs:{shape:f}}),a=qI({inputs:{a:o,b:m},backend:n}),b=mk({inputs:{x:a},backend:n}),y=Kv({inputs:{x:b},backend:n,attrs:{axis:d,keepDims:!1}}),x=Pv({inputs:{x:y},backend:n,attrs:{shape:f}}),v=VI({inputs:{a:b,b:x},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),v}const XI={kernelName:l.Jc,backendName:"webgl",kernelFunc:YI};const ZI={kernelName:l.Wb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{numSamples:c,seed:l,normalized:d}=r,h=d?o:YI({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),f=h.shape[0],m=h.shape[1],y=new UI(f,m,c),x=[[l]],v=n.runWebGLProgram(y,[h],"int32",x);return d||n.disposeIntermediateTensorInfo(h),v}};const JI={kernelName:l.Yb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,o]=Rx(e.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,t)}let o;return o=Object(l.Yd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hv(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new cv(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(o,[r],r.dtype)}},QI=l.me.nonMaxSuppressionV3Impl;const eS={kernelName:l.Zb,backendName:"webgl",kernelFunc:function(e){l.xd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f}=r,m=n.readSync(o.dataId),y=n.readSync(c.dataId),{selectedIndices:x}=QI(m,y,d,h,f);return n.makeTensorInfo([x.length],"int32",new Int32Array(x))}},tS=l.me.nonMaxSuppressionV4Impl;const nS={kernelName:l.ac,backendName:"webgl",kernelFunc:function(e){l.xd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f,padToMaxOutputSize:m}=r,y=n.readSync(o.dataId),x=n.readSync(c.dataId),{selectedIndices:v,validOutputs:w}=tS(y,x,d,h,f,m);return[n.makeTensorInfo([v.length],"int32",new Int32Array(v)),n.makeTensorInfo([],"int32",new Int32Array([w]))]}},rS=l.me.nonMaxSuppressionV5Impl;const aS={kernelName:l.bc,backendName:"webgl",kernelFunc:function(e){l.xd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f,softNmsSigma:m}=r,y=n.readSync(o.dataId),x=n.readSync(c.dataId),v=d,w=h,O=f,k=m,{selectedIndices:I,selectedScores:S}=rS(y,x,v,w,O,k);return[n.makeTensorInfo([I.length],"int32",new Int32Array(I)),n.makeTensorInfo([S.length],"float32",new Float32Array(S))]}};class sS{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const iS={kernelName:l.dc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:o}=t,{depth:c,onValue:d,offValue:h}=r,f=l.Af.sizeFromShape(o.shape),m=new sS(f,c,d,h),y=Pv({inputs:{x:o},backend:n,attrs:{shape:[f]}}),x=n.runWebGLProgram(m,[y],o.dtype);n.disposeIntermediateTensorInfo(y);const v=Pv({inputs:{x:x},backend:n,attrs:{shape:[...o.shape,c]}});return n.disposeIntermediateTensorInfo(x),v}};function oS(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Qw({inputs:{input:r},backend:n}),t=oS({inputs:{x:e},backend:n}),o=fO({inputs:{input:r},backend:n}),i=oS({inputs:{x:o},backend:n}),c=Ov({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}return Nk({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const uS={kernelName:l.nd,backendName:"webgl",kernelFunc:oS};const cS={kernelName:l.ec,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===o.dtype){const t=Qw({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),c=fO({inputs:{input:o},backend:r}),i=oS({inputs:{x:c},backend:r}),l=Ov({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(i),l}return Nk({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:r})}};const lS={kernelName:l.gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:o}=r;if(1===t.length)return gk({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const c=t[0].shape,d=t[0].dtype;t.forEach((e=>{l.Af.assertShapesMatch(c,e.shape,"All tensors passed to stack must have matching shapes"),l.Af.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const h=[],f=gO({inputs:t.map((e=>{const t=gk({inputs:{input:e},backend:n,attrs:{dim:o}});return h.push(t),t})),backend:n,attrs:{axis:o}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class dS{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=By(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${c});\n      ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${d}));\n        }\n      }\n    `:`\n        int start = ${c};\n        int end = ${l};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class hS{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=By(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=nv("rc",r),source=nv("source",r),h=`${d[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m=[`${o} rc = outputLoc;`,`${d[r-1]} += 1;\n       if(${h}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${d[r-2]} += 1;\n       if(${d[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${d[r-1]} += 1;\n         if(${h}) {`],y=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let i=0,e=1===r?2:4;i<e;i++)x+=`\n        ${m[i]}\n        if (${y}) {\n          result[${i}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${f});\n        }\n      `;x+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${c});\n      const ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${x}\n        setOutput(result);\n      }\n    `}}const pS=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{paddings:c,constantValue:d}=r;if(0===l.Af.sizeFromShape(o.shape)){return Nk({backend:n,attrs:{shape:c.map(((p,i)=>p[0]+o.shape[i]+p[1])),value:d,dtype:o.dtype}})}const h=Object(l.Yd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hS(o.shape,c,d):new dS(o.shape,c,d),f=[[d]];return n.runWebGLProgram(h,[o],o.dtype,f)},fS={kernelName:l.hc,backendName:"webgl",kernelFunc:pS},mS=$v({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),bS={kernelName:l.ic,backendName:"webgl",kernelFunc:mS};const gS={kernelName:l.kc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:c,keepDims:d}=r,h=o.shape.length,f=[],m=l.Af.parseAxisParam(c,o.shape);let y=m;const x=l.xd.getAxesPermutation(y,h);let v,w=o;if(null!=x&&(w=Xv({inputs:{x:o},backend:n,attrs:{perm:x}}),y=l.xd.getInnerMostAxes(y.length,h),f.push(w)),l.xd.assertAxesAreInnerMostDims("prod",y,h),n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId).values,{outVals:t,outShape:r,outDtype:o}=Dx(w.shape,w.dtype,e,y);v=n.makeTensorInfo(r,o,t)}else{const[e,t]=l.xd.computeOutAndReduceShapes(w.shape,y),r=l.Af.sizeFromShape(t),c=Pv({inputs:{x:w},backend:n,attrs:{shape:[-1,r]}}),d=Vv(c,Object(l.nf)(o.dtype),"prod",n);v=Pv({inputs:{x:d},backend:n,attrs:{shape:e}}),f.push(c),f.push(d)}if(d){f.push(v);const e=l.xd.expandShapeToKeepDim(v.shape,m);v=Pv({inputs:{x:v},backend:n,attrs:{shape:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},yS=e=>{const{backend:t,attrs:n}=e,{start:r,stop:o,step:c,dtype:l}=n,d=_x(r,o,c,l);return t.makeTensorInfo([d.length],l,d)},xS={kernelName:l.lc,backendName:"webgl",kernelFunc:yS},vS=jv({opSnippet:"return 1.0 / x;"}),wS={kernelName:l.oc,backendName:"webgl",kernelFunc:vS},OS=jv({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),kS={kernelName:l.pc,backendName:"webgl",kernelFunc:OS},IS=jv({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),SS={kernelName:l.qc,backendName:"webgl",kernelFunc:IS};class NS{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n];let y;y=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class TS{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n];let y;y=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${l}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${h-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const CS={kernelName:l.sc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o}=t,{alignCorners:c,halfPixelCenters:d,size:h}=r,[f,m]=h,y=Object(l.Yd)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TS(o.shape,f,m,c,d):new NS(o.shape,f,m,c,d);return n.runWebGLProgram(y,[o],"float32")}};class AS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,c,l]=e,d=[n&&c>1?r-1:r,n&&l>1?o-1:o],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],y=1/f,x=1/m,v=2*Math.ceil(y)+2,w=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${v});\n        const int winWidth = int(${w});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${c}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${l}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const jS={kernelName:l.tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:l}=r,d=new AS(c.shape,o.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}};class $S{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n],y=r?"0.5":"0.0";let x;x=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${x};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class ES{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n],y=r?"0.5":"0.0";let x;x=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${l}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${x};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${h-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const RS={kernelName:l.uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o}=t,{alignCorners:c,halfPixelCenters:d,size:h}=r,[f,m]=h,y=Object(l.Yd)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ES(o.shape,f,m,c,d):new $S(o.shape,f,m,c,d);return n.runWebGLProgram(y,[o],o.dtype)}};class FS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,c,l]=e,d=[n&&c>1?r-1:r,n&&l>1?o-1:o],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],y=1/f,x=1/m,v=2*Math.ceil(y)+2,w=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${v});\n        const int winWidth = int(${w});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${c}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${l}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${d[0]}) *\n                (float(dyR) / float(${h[0]}));\n\n            float sourceFracCol =\n                float(${d[1]}) *\n                  (float(dyC) / float(${h[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const DS={kernelName:l.vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:l}=r,d=new FS(c.shape,o.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}};class _S{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,i)=>(i=>-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`)(i))).join(","),o=By(n);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class MS{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=nv("rc",n),o=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,c=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,l=By(n);function d(n){const r=e.map(((r,i)=>function(i,n){return-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - ${n[i]} - 1`:`${n[i]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${l} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return d(e)}(r.slice())};\n          if(${o}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",d(e)}(r.slice())};\n          }\n          if(${c}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",d(e)}(r.slice())};\n            if(${o}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",d(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const LS={kernelName:l.wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{dims:c}=r,d=o.shape.length,h=l.Af.parseAxisParam(c,o.shape);if(0===d)return vv({inputs:{x:o},backend:n});const f=Object(l.Yd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MS(o.shape,h):new _S(o.shape,h);return n.runWebGLProgram(f,[o],o.dtype)}};class zS{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let o="";o="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const PS={kernelName:l.xc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,{radians:r,fillValue:o,center:c}=t,d=n,h=new zS(image.shape,o),[f,m]=l.xd.getImageCenter(c,image.shape[1],image.shape[2]),y=[[f,m,Math.sin(r),Math.cos(r)]];return d.runWebGLProgram(h,[image],image.dtype,y)}},BS=jv({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),WS={kernelName:l.yc,backendName:"webgl",kernelFunc:BS},US=jv({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Mx}),VS={kernelName:l.zc,backendName:"webgl",kernelFunc:US};class GS{constructor(e,t,n,r,o,c,l=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=c;const d=By(o.length),h=By(c.length);let f="";1===n?f="i":2===n&&(f="i, j");const m=`getIndices(${f})`;let y="";1===r?y="i":2===r&&(y="i, coords[1]");const x=`getUpdates(${y})`,v=t>1?"strides[j]":"strides";this.userCode=`\n        ${d} strides = ${d}(${o});\n\n        void main() {\n          ${h} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${m});\n              flattenedIndex += index * ${v};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${x};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const HS={kernelName:l.Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:o,updates:c}=t,{shape:d}=r,{sliceRank:h,numUpdates:f,sliceSize:m,strides:y,outputSize:x}=l.xd.calculateShapes(c,o,d),v=[x/m,m];if(0===x)return n.makeTensorInfo(d,o.dtype);const w=Pv({inputs:{x:o},backend:n,attrs:{shape:[f,h]}}),O=Pv({inputs:{x:c},backend:n,attrs:{shape:[f,m]}}),k=n.makeTensorInfo([],"float32",new Float32Array([0])),I=new GS(f,h,w.shape.length,O.shape.length,y,v),S=n.runWebGLProgram(I,[O,w,k],O.dtype),N=Pv({inputs:{x:S},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(k),N}};class qS{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,c=2===Object(l.Yd)().getNumber("WEBGL_VERSION")?"while (left < right) {":o,d="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${c}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${d} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const KS={kernelName:l.Bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:o,values:c}=t,{side:l}=r,d=new qS(o.shape[0],o.shape[1],c.shape[1],l),h=[[o.shape[1]]];return n.runWebGLProgram(d,[o,c],"int32",h)}};class YS{constructor(e,t,n){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)o="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let i=0;i<t.length;i++)l.push(`${n[i]}`),i<e&&c.push(`${n[i]}`);r=c.join(),o=l.join()}const c=By(n);this.userCode=`\n      void main() {\n        ${c} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const XS={kernelName:l.Cc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:o,e:c}=t,d=new YS(r.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(d,[r,o,c],Object(l.zf)(o.dtype,c.dtype))}},ZS=jv({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${l.xd.SELU_SCALEALPHA};\n  float scale = ${l.xd.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),JS={kernelName:l.Dc,backendName:"webgl",kernelFunc:ZS},QS=jv({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:zx}),eN={kernelName:l.Ec,backendName:"webgl",kernelFunc:QS},tN=jv({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),nN={kernelName:l.Fc,backendName:"webgl",kernelFunc:tN},rN=jv({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),aN={kernelName:l.Gc,backendName:"webgl",kernelFunc:rN},sN=jv({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),iN={kernelName:l.Hc,backendName:"webgl",kernelFunc:sN},oN=jv({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),uN={kernelName:l.Kc,backendName:"webgl",kernelFunc:oN},cN={kernelName:l.Lc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockShape:c,paddings:d}=r;l.Af.assert(o.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const h=c.reduce(((a,b)=>a*b)),f=[[0,0]];f.push(...d);for(let i=1+c.length;i<o.shape.length;++i)f.push([0,0]);const m=[],y=pS({inputs:{x:o},backend:n,attrs:{paddings:f,constantValue:0}}),x=l.xd.getReshaped(y.shape,c,h,!1),v=l.xd.getPermuted(x.length,c.length,!1),w=l.xd.getReshapedPermuted(y.shape,c,h,!1),O=Pv({inputs:{x:y},backend:n,attrs:{shape:x}}),k=Xv({inputs:{x:O},backend:n,attrs:{perm:v}}),I=Pv({inputs:{x:k},backend:n,attrs:{shape:w}});return m.push(y),m.push(O),m.push(k),m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const lN={kernelName:l.Mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:o,denseShape:c,defaultValue:l}=t;if(1!==c.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${c.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Values must be a vector, saw:\n         ${o.shape}`);if(0!==l.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${l.shape}`);const d=n.readSync(r.dataId),h=n.readSync(o.dataId),f=n.readSync(c.dataId),m=n.readSync(l.dataId)[0],[y,x,v,w,O]=Wx(d,r.shape,r.dtype,h,o.dtype,f,m);return[n.makeTensorInfo(x,r.dtype,y),n.makeTensorInfo([x[0]],o.dtype,v),n.makeTensorInfo([w.length],"bool",new Uint8Array(w.map((e=>Number(e))))),n.makeTensorInfo([O.length],r.dtype,new Int32Array(O))]}};const dN={kernelName:l.Nc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:c}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(1!==c.shape.length)throw new Error(`Target shape should be a vector but received shape ${c.shape}`);const l=Array.from(n.readSync(o.dataId)),d=n.readSync(r.dataId),h=Array.from(n.readSync(c.dataId)),[f,m,y]=Ux(d,r.shape,r.dtype,l,h);return[n.makeTensorInfo(m,r.dtype,f),n.makeTensorInfo([y.length],c.dtype,new Int32Array(y))]}};const hN={kernelName:l.Oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const c=n.readSync(data.dataId),l=n.readSync(r.dataId),d=n.readSync(o.dataId),[h,f]=Vx(c,data.shape,data.dtype,l,d,!0);return n.makeTensorInfo(f,data.dtype,h)}};const pN={kernelName:l.Pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const c=n.readSync(data.dataId),l=n.readSync(r.dataId),d=n.readSync(o.dataId),[h,f]=Vx(c,data.shape,data.dtype,l,d);return n.makeTensorInfo(f,data.dtype,h)}};const fN={kernelName:l.Qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:o,sparseValues:c,defaultValue:d}=t,{outputShape:h}=r,{sliceRank:f,numUpdates:m,sliceSize:y,strides:x,outputSize:v}=l.xd.calculateShapes(c,o,h);if("string"===c.dtype){const e=n.bufferSync(o),t=n.bufferSync(c),r=l.Af.decodeString(n.readSync(d.dataId)[0]),w=Lx(e,t,h,v,y,m,f,x,r,false);return n.makeTensorInfo(h,w.dtype,w.values)}const w=new GS(m,f,o.shape.length,c.shape.length,x,[v,1],false),O=n.runWebGLProgram(w,[c,o,d],c.dtype),k=Pv({inputs:{x:O},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(O),k}};const mN={kernelName:l.Rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{numOrSizeSplits:c,axis:d}=r,h=l.Af.parseAxisParam(d,o.shape)[0],f=l.xd.prepareSplitSize(o,c,h),m=o.shape.length,y=new Array(m).fill(0),x=o.shape.slice();return f.map((s=>{const e=[...x];e[h]=s;const t=Hw({inputs:{x:o},backend:n,attrs:{begin:y,size:e}});return y[h]+=s,t}))}},bN="return sqrt(x);",gN=jv({opSnippet:bN,packedOpSnippet:bN,cpuKernelImpl:Gx}),yN={kernelName:l.Sc,backendName:"webgl",kernelFunc:gN},xN=jv({opSnippet:"return x * x;"}),vN={kernelName:l.Tc,backendName:"webgl",kernelFunc:xN},wN="return (a - b) * (a - b);",ON=$v({opSnippet:wN,packedOpSnippet:wN}),kN={kernelName:l.Uc,backendName:"webgl",kernelFunc:ON};const IN={kernelName:l.Vc,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,o=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,c=new cv(r.shape,o);return n.runWebGLProgram(c,[r],r.dtype)}};class SN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,o=By(n.length),c=By(n.length);let l="";if(1===r)l="coords * strides + begin";else{let e=0;l=n.map(((t,i)=>(e++,1===n.length?`coords * strides[${i}] + begin[${i}]`:`coords[${e-1}] * strides[${i}] + begin[${i}]`))).join(",")}this.userCode=`\n      ${o} begin = ${o}(${e});\n      ${o} strides = ${o}(${t});\n\n      void main() {\n        ${c} coords = getOutputCoords();\n        setOutput(getX(${l}));\n      }\n    `}}const NN={kernelName:l.Wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{begin:c,end:d,strides:h,beginMask:f,endMask:m,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:v}=r,{finalShapeSparse:w,finalShape:O,isIdentity:k,sliceDim0:I,isSimpleSlice:S,begin:N,end:T,strides:C}=l.ef.sliceInfo(o.shape,c,d,h,f,m,y,x,v);let A;if(k)A=Pv({inputs:{x:o},backend:n,attrs:{shape:O}});else if(I||S){l.Af.assert(o.shape.length>=1,(()=>`Input must have rank at least 1, got: ${o.shape.length}`));const e=l.ef.computeOutShape(N,T,C),t=Hw({inputs:{x:o},backend:n,attrs:{begin:N,size:e}});A=Pv({inputs:{x:t},backend:n,attrs:{shape:O}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([o])){const e=n.readSync(o.dataId),t=Object(l.Dd)(o.shape,o.dtype,e),r=Hx(w,t,C,N);A=n.makeTensorInfo(O,o.dtype,r.values)}else{const e=new SN(N,C,w);A=n.runWebGLProgram(e,[o],o.dtype)}}const j=Pv({inputs:{x:A},backend:n,attrs:{shape:O}});return n.disposeIntermediateTensorInfo(A),j}};const TN={kernelName:l.Xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:o,nGramWidths:c,leftPad:l,rightPad:d,padWidth:h,preserveShortSequences:f}=r,{data:data,dataSplits:m}=t,y=n.readSync(data.dataId),x=n.readSync(m.dataId),[v,w]=qx(y,x,o,c,l,d,h,f);return[n.makeTensorInfo([v.length],"string",v),n.makeTensorInfo(m.shape,"int32",w)]}};const CN={kernelName:l.Yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:o}=r,{input:input,delimiter:c}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(1!==input.shape.length)throw new Error(`Input must be a vector, got shape: ${input.shape}`);if(0!==c.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${c.shape}`);const l=n.readSync(input.dataId),d=n.readSync(c.dataId)[0],[h,f,m]=Kx(l,d,o),y=f.length;return[n.makeTensorInfo([y,2],"int32",h),n.makeTensorInfo([y],"string",f),n.makeTensorInfo([2],"int32",new Int32Array(m))]}};const AN={kernelName:l.Zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:o}=r,{input:input}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const c=n.readSync(input.dataId),output=Yx(c,o);return n.makeTensorInfo(input.shape,"int32",output)}},jN=jv({opSnippet:"return tan(x);"}),$N={kernelName:l.cd,backendName:"webgl",kernelFunc:jN},EN=jv({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),RN={kernelName:l.dd,backendName:"webgl",kernelFunc:EN};class FN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const r=By(this.rank),o=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let i=0;i<e.length;i++)r.push(`imod(${n[i]}, ${e[i]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function DN(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reps:c}=r;if("string"===o.dtype||o.shape.length>5){const data=n.readSync(o.dataId),e="string"===o.dtype?data.map((e=>l.Af.decodeString(e))):data,t=Object(l.Dd)(o.shape,o.dtype,e),r=Zx(t,c);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const d=new FN(o.shape,c);return n.runWebGLProgram(d,[o],o.dtype)}const _N={kernelName:l.gd,backendName:"webgl",kernelFunc:DN};class MN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class LN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function zN(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function PN(e){let t=1;for(;t<e;)t*=2;return t}const BN={kernelName:l.hd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{k:c,sorted:d}=r,h=Object(l.Yd)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),f=Object(l.Yd)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),m=o.shape,y=m[m.length-1];if(n.shouldExecuteOnCPU([o])||y<h||c>f){const e=n.readSync(o.dataId),[t,r]=Jx(e,m,o.dtype,c,d);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===c)return m[m.length-1]=0,[n.makeTensorInfo(m,o.dtype,[]),n.makeTensorInfo(m,"int32",[])];if(1===y)return[o,Nk({attrs:{shape:m,dtype:"int32",value:0},backend:n})];const x=n.texData.get(o.dataId),v=null!==x&&x.isPacked,w=v?n.unpackTensor(o):o,O=l.Af.sizeFromShape(m)/y,k=Pv({inputs:{x:w},attrs:{shape:[O,y]},backend:n});v&&zN(n,w);const I=PN(c),S=PN(y);let N=null;const T=()=>null===N?[k,k]:[k,N],C=(e,t,r)=>{const o=T(),c=new MN(r),l=[[y],[null===N?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],d=N;N=n.runWebGLProgram(c,o,"int32",l),zN(n,d)};for(let e=1;e<I;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)C(t,n,[O,S])}for(let e=S;e>I;e/=2){const t=T(),r=new LN([O,e/2]),o=[[y],[null===N?1:0],[I]],c=N;N=n.runWebGLProgram(r,t,"int32",o),zN(n,c);const l=I/2,d=2*l;for(let e=l;e>=1;e/=2)C(d,e,N.shape)}let A=N;N=Hw({inputs:{x:N},backend:n,attrs:{begin:0,size:[O,c]}}),zN(n,A);let j=Vk({inputs:{x:k,indices:N},backend:n,attrs:{axis:1,batchDims:1}});zN(n,k);const $=m.slice(0,-1);$.push(c),A=N,N=Pv({inputs:{x:N},attrs:{shape:$},backend:n}),zN(n,A);const E=j;return j=Pv({inputs:{x:j},attrs:{shape:$},backend:n}),zN(n,E),[j,N]}};class WN{constructor(e,t,n,r,o,c){this.variableNames=["Image","Transforms"],this.outputShape=c;const l="nearest"===n?1:2;let d;switch(r){case"constant":default:d=1;break;case"reflect":d=2;break;case"wrap":d=3;break;case"nearest":d=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${d} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${l} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const UN={kernelName:l.id,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:image,transforms:o}=t,{interpolation:c,fillMode:l,fillValue:d,outputShape:h}=r,[f,m,y,x]=image.shape,[v,w]=null!=h?h:[m,y],O=new WN(m,y,c,l,d,[f,v,w,x]);return n.runWebGLProgram(O,[image,o],"float32")}};const VN={kernelName:l.kd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:c}=t;Oy(c,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const l=r.readSync(c.dataId),{outputValues:d,outputShape:h,indices:f}=ev(l,o,c.shape,c.dtype);return[r.makeTensorInfo(h,c.dtype,d),r.makeTensorInfo([f.length],"int32",f)]}};const GN={kernelName:l.ld,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:c}=r;c<0&&(c+=o.shape.length);const l=o,d=l.shape.length,h=o.shape[c],f=new Array(d-1);let m=0;for(let i=0;i<d;i++)i!==c&&(f[m++]=l.shape[i]);const y=[],x=new Array(d).fill(0),v=l.shape.slice();v[c]=1;const w=new Array(h);for(let i=0;i<w.length;i++){x[c]=i;const e=Hw({inputs:{x:l},backend:n,attrs:{begin:x,size:v}}),t=Pv({inputs:{x:e},backend:n,attrs:{shape:f}});w[i]=t,y.push(e)}return y.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}};class HN{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,o=e.inSize,c=e.numSegments,l=c*Math.ceil(o/n);this.outputShape=[r,l];const d=4*Math.floor(n/4),h=n%4,f="\n        sumValue += dot(values, segFilter);\n    ";let m="";o%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let y="";o%n>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${y}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${c})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${c})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${f}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${f}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}const qN=[Qv,tw,rw,sw,uw,dw,hw,pw,xw,vw,Ow,Iw,Nw,Cw,jw,Rw,Fw,Mw,Lw,zw,Ww,Kw,Yw,Xw,tO,aO,oO,kv,lO,yO,IO,AO,jO,$O,EO,RO,DO,MO,zO,GO,HO,qO,YO,JO,tk,nk,ak,ik,ok,ck,lk,hk,fk,bk,yk,wk,Ik,Tk,Ak,Ek,Fk,Mk,zk,Pk,Wk,Gk,qk,Yk,wv,Xk,mO,Jk,eI,nI,Nv,aI,iI,oI,cI,dI,pI,mI,gI,vI,OI,II,NI,TI,CI,$I,EI,RI,FI,DI,MI,PI,WI,ZI,zv,JI,eS,nS,aS,Jw,iS,cS,lS,fS,bS,Av,gS,xS,eO,GI,wS,kS,SS,Bv,CS,jS,RS,DS,LS,PS,WS,VS,HS,KS,XS,JS,eN,nN,aN,iN,qw,XI,uN,cN,lN,dN,hN,pN,fN,mN,yN,vN,kN,IN,NN,TN,CN,AN,KI,Yv,$N,RN,_N,BN,UN,Zv,VN,GN,{kernelName:l.md,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,segmentIds:c}=t,{numSegments:d}=r,h=o.shape.length,f=[];let m=0;const y=l.xd.getAxesPermutation([m],h);let x=o;null!=y&&(x=Xv({inputs:{x:o},backend:n,attrs:{perm:y}}),f.push(x),m=l.xd.getInnerMostAxes(1,h)[0]);const v=l.xd.segment_util.computeOutShape(x.shape,m,d),w=l.Af.sizeFromShape([x.shape[m]]),O=Pv({inputs:{x:x},backend:n,attrs:{shape:[-1,w]}});f.push(O);const k=Object(l.nf)(o.dtype),I=(e,t,r,o,c)=>{const d=e.shape[0],h=e.shape[1],m=l.xd.segment_util.segOpComputeOptimalWindowSize(h,c),y=new HN({windowSize:m,inSize:h,batchSize:d,numSegments:c},t),output=n.compileAndRun(y,[e,r],o);if(f.push(output),output.shape[1]===c)return output;const x=yS({backend:n,attrs:{start:0,stop:c,step:1,dtype:"float32"}}),v=DN({inputs:{x:x},backend:n,attrs:{reps:[h/m]}});f.push(x),f.push(v);return I(output,t,v,o,c)},S=Pv({inputs:{x:I(O,"unsortedSegmentSum",c,k,d)},backend:n,attrs:{shape:v}});let N=S;if(null!=y){f.push(S);const e=l.xd.getUndoAxesPermutation(y);N=Xv({inputs:{x:N},backend:n,attrs:{perm:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},uS];for(const e of qN)Object(l.Pe)(e);l.Df},,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(472),o=n(469);var c=n(471),l=n(470);const d=Object(l.a)({sparseToDense_:function(e,t,n,l=0){const d=Object(c.a)(e,"sparseIndices","sparseToDense","int32"),h=Object(c.a)(t,"sparseValues","sparseToDense","string_or_numeric"),f=Object(c.a)(l,"defaultValue","sparseToDense",h.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const o=e.rank>0?e.shape[0]:1,c=e.rank>1?e.shape[1]:1;if(n.length!==c)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${c}.`);const l=t.size;if(0!==t.rank&&(1!==t.rank||l!==o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(d,h,n,f);const m={sparseIndices:d,sparseValues:h,defaultValue:f},y={outputShape:n};return r.a.runKernel(o.Pc,m,y)}})},,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function o(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=o;var c={},l={};function d(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=l[e])?r:(n=f(e,(0|e)<0?-1:0,!0),o&&(l[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=c[e])?r:(n=f(e,e<0?-1:0,!1),o&&(c[e]=n),n)}function h(e,t){if(isNaN(e))return t?S:I;if(t){if(e<0)return S;if(e>=w)return j}else{if(e<=-O)return $;if(e+1>=O)return A}return e<0?h(-e,t).neg():f(e%v|0,e/v|0,t)}function f(e,t,n){return new r(e,t,n)}r.fromInt=d,r.fromNumber=h,r.fromBits=f;var m=Math.pow;function y(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return I;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var p;if((p=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===p)return y(e.substring(1),t,n).neg();for(var r=h(m(n,8)),o=I,i=0;i<e.length;i+=8){var c=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+c),n);if(c<8){var d=h(m(n,c));o=o.mul(d).add(h(l))}else o=(o=o.mul(r)).add(h(l))}return o.unsigned=t,o}function x(e,t){return"number"==typeof e?h(e,t):"string"==typeof e?y(e,t):f(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=y,r.fromValue=x;var v=4294967296,w=v*v,O=w/2,k=d(1<<24),I=d(0);r.ZERO=I;var S=d(0,!0);r.UZERO=S;var N=d(1);r.ONE=N;var T=d(1,!0);r.UONE=T;var C=d(-1);r.NEG_ONE=C;var A=f(-1,2147483647,!1);r.MAX_VALUE=A;var j=f(-1,-1,!0);r.MAX_UNSIGNED_VALUE=j;var $=f(0,-2147483648,!1);r.MIN_VALUE=$;var E=r.prototype;E.toInt=function(){return this.unsigned?this.low>>>0:this.low},E.toNumber=function(){return this.unsigned?(this.high>>>0)*v+(this.low>>>0):this.high*v+(this.low>>>0)},E.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq($)){var t=h(e),div=this.div(t),n=div.mul(t).sub(this);return div.toString(e)+n.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=h(m(e,6),this.unsigned),o=this,c="";;){var l=o.div(r),d=(o.sub(l.mul(r)).toInt()>>>0).toString(e);if((o=l).isZero())return d+c;for(;d.length<6;)d="0"+d;c=""+d+c}},E.getHighBits=function(){return this.high},E.getHighBitsUnsigned=function(){return this.high>>>0},E.getLowBits=function(){return this.low},E.getLowBitsUnsigned=function(){return this.low>>>0},E.getNumBitsAbs=function(){if(this.isNegative())return this.eq($)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},E.isZero=function(){return 0===this.high&&0===this.low},E.eqz=E.isZero,E.isNegative=function(){return!this.unsigned&&this.high<0},E.isPositive=function(){return this.unsigned||this.high>=0},E.isOdd=function(){return 1==(1&this.low)},E.isEven=function(){return 0==(1&this.low)},E.equals=function(e){return o(e)||(e=x(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},E.eq=E.equals,E.notEquals=function(e){return!this.eq(e)},E.neq=E.notEquals,E.ne=E.notEquals,E.lessThan=function(e){return this.comp(e)<0},E.lt=E.lessThan,E.lessThanOrEqual=function(e){return this.comp(e)<=0},E.lte=E.lessThanOrEqual,E.le=E.lessThanOrEqual,E.greaterThan=function(e){return this.comp(e)>0},E.gt=E.greaterThan,E.greaterThanOrEqual=function(e){return this.comp(e)>=0},E.gte=E.greaterThanOrEqual,E.ge=E.greaterThanOrEqual,E.compare=function(e){if(o(e)||(e=x(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},E.comp=E.compare,E.negate=function(){return!this.unsigned&&this.eq($)?$:this.not().add(N)},E.neg=E.negate,E.add=function(e){o(e)||(e=x(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,c=65535&this.low,l=e.high>>>16,d=65535&e.high,h=e.low>>>16,m=0,y=0,v=0,w=0;return v+=(w+=c+(65535&e.low))>>>16,y+=(v+=r+h)>>>16,m+=(y+=n+d)>>>16,m+=t+l,f((v&=65535)<<16|(w&=65535),(m&=65535)<<16|(y&=65535),this.unsigned)},E.subtract=function(e){return o(e)||(e=x(e)),this.add(e.neg())},E.sub=E.subtract,E.multiply=function(e){if(this.isZero())return I;if(o(e)||(e=x(e)),n)return f(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return I;if(this.eq($))return e.isOdd()?$:I;if(e.eq($))return this.isOdd()?$:I;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(k)&&e.lt(k))return h(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,c=this.low>>>16,l=65535&this.low,d=e.high>>>16,m=65535&e.high,y=e.low>>>16,v=65535&e.low,w=0,O=0,S=0,N=0;return S+=(N+=l*v)>>>16,O+=(S+=c*v)>>>16,S&=65535,O+=(S+=l*y)>>>16,w+=(O+=r*v)>>>16,O&=65535,w+=(O+=c*y)>>>16,O&=65535,w+=(O+=l*m)>>>16,w+=t*v+r*y+c*m+l*d,f((S&=65535)<<16|(N&=65535),(w&=65535)<<16|(O&=65535),this.unsigned)},E.mul=E.multiply,E.divide=function(e){if(o(e)||(e=x(e)),e.isZero())throw Error("division by zero");var t,r,c;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?f((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?S:I;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return S;if(e.gt(this.shru(1)))return T;c=S}else{if(this.eq($))return e.eq(N)||e.eq(C)?$:e.eq($)?N:(t=this.shr(1).div(e).shl(1)).eq(I)?e.isNegative()?N:C:(r=this.sub(e.mul(t)),c=t.add(r.div(e)));if(e.eq($))return this.unsigned?S:I;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();c=I}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var l=Math.ceil(Math.log(t)/Math.LN2),d=l<=48?1:m(2,l-48),y=h(t),v=y.mul(e);v.isNegative()||v.gt(r);)v=(y=h(t-=d,this.unsigned)).mul(e);y.isZero()&&(y=N),c=c.add(y),r=r.sub(v)}return c},E.div=E.divide,E.modulo=function(e){return o(e)||(e=x(e)),n?f((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},E.mod=E.modulo,E.rem=E.modulo,E.not=function(){return f(~this.low,~this.high,this.unsigned)},E.and=function(e){return o(e)||(e=x(e)),f(this.low&e.low,this.high&e.high,this.unsigned)},E.or=function(e){return o(e)||(e=x(e)),f(this.low|e.low,this.high|e.high,this.unsigned)},E.xor=function(e){return o(e)||(e=x(e)),f(this.low^e.low,this.high^e.high,this.unsigned)},E.shiftLeft=function(e){return o(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?f(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):f(0,this.low<<e-32,this.unsigned)},E.shl=E.shiftLeft,E.shiftRight=function(e){return o(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?f(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):f(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},E.shr=E.shiftRight,E.shiftRightUnsigned=function(e){if(o(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?f(this.low>>>e|t<<32-e,t>>>e,this.unsigned):f(32===e?t:t>>>e-32,0,this.unsigned)},E.shru=E.shiftRightUnsigned,E.shr_u=E.shiftRightUnsigned,E.toSigned=function(){return this.unsigned?f(this.low,this.high,!1):this},E.toUnsigned=function(){return this.unsigned?this:f(this.low,this.high,!0)},E.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},E.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},E.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},function(e,t,n){"use strict";t.byteLength=function(e){var t=d(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,i,n=d(e),r=n[0],l=n[1],h=new c(function(e,t,n){return 3*(t+n)/4-n}(0,r,l)),f=0,m=l>0?r-4:r;for(i=0;i<m;i+=4)t=o[e.charCodeAt(i)]<<18|o[e.charCodeAt(i+1)]<<12|o[e.charCodeAt(i+2)]<<6|o[e.charCodeAt(i+3)],h[f++]=t>>16&255,h[f++]=t>>8&255,h[f++]=255&t;2===l&&(t=o[e.charCodeAt(i)]<<2|o[e.charCodeAt(i+1)]>>4,h[f++]=255&t);1===l&&(t=o[e.charCodeAt(i)]<<10|o[e.charCodeAt(i+1)]<<4|o[e.charCodeAt(i+2)]>>2,h[f++]=t>>8&255,h[f++]=255&t);return h},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,c=[],l=16383,i=0,d=n-o;i<d;i+=l)c.push(h(e,i,i+l>d?d:i+l));1===o?(t=e[n-1],c.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],c.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return c.join("")};for(var r=[],o=[],c="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,l=code.length;i<l;++i)r[i]=code[i],o[code.charCodeAt(i)]=i;function d(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function h(e,t,n){for(var o,c,output=[],i=t;i<n;i+=3)o=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),output.push(r[(c=o)>>18&63]+r[c>>12&63]+r[c>>6&63]+r[63&c]);return output.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,o){var c,l,d=8*o-r-1,h=(1<<d)-1,f=h>>1,m=-7,i=n?o-1:0,y=n?-1:1,s=e[t+i];for(i+=y,c=s&(1<<-m)-1,s>>=-m,m+=d;m>0;c=256*c+e[t+i],i+=y,m-=8);for(l=c&(1<<-m)-1,c>>=-m,m+=r;m>0;l=256*l+e[t+i],i+=y,m-=8);if(0===c)c=1-f;else{if(c===h)return l?NaN:1/0*(s?-1:1);l+=Math.pow(2,r),c-=f}return(s?-1:1)*l*Math.pow(2,c-r)},t.write=function(e,t,n,r,o,c){var l,d,h,f=8*c-o-1,m=(1<<f)-1,y=m>>1,rt=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,i=r?0:c-1,x=r?1:-1,s=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(d=isNaN(t)?1:0,l=m):(l=Math.floor(Math.log(t)/Math.LN2),t*(h=Math.pow(2,-l))<1&&(l--,h*=2),(t+=l+y>=1?rt/h:rt*Math.pow(2,1-y))*h>=2&&(l++,h/=2),l+y>=m?(d=0,l=m):l+y>=1?(d=(t*h-1)*Math.pow(2,o),l+=y):(d=t*Math.pow(2,y-1)*Math.pow(2,o),l=0));o>=8;e[n+i]=255&d,i+=x,d/=256,o-=8);for(l=l<<o|d,f+=o;f>0;e[n+i]=255&l,i+=x,l/=256,f-=8);e[n+i-x]|=128*s}},function(e,t,n){"use strict";(function(e){var t=n(493);const r=()=>n(715);let o;class c{constructor(){this.util=n(716),this.textEncoder=new this.util.TextEncoder}fetch(path,e){return null!=Object(t.b)().global.fetch?Object(t.b)().global.fetch(path,e):(null==o&&(o=r()),o(path,e))}now(){const time=e.hrtime();return 1e3*time[0]+time[1]/1e6}encode(text,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(text)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.b)().get("IS_NODE")&&!Object(t.b)().get("IS_BROWSER")&&Object(t.b)().setPlatform("node",new c)}).call(this,n(212))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t,n=this,r=(t=4022871197,function(data){data=data.toString();for(var i=0;i<data.length;i++){var e=.02519603282416938*(t+=data.charCodeAt(i));e-=t=e>>>0,t=(e*=t)>>>0,t+=4294967296*(e-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function d(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function h(e,t){var n=new l(e),r=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(489)&&n(504)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.alea=h}(0,e,n(489))}).call(this,n(498)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(489)&&n(504)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor128=h}(0,e,n(489))}).call(this,n(498)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(489)&&n(504)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorwow=h}(0,e,n(489))}).call(this,n(498)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function d(e,t){return t.x=e.x.slice(),t.i=e.i,t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.x&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(489)&&n(504)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorshift7=h}(0,e,n(489))}).call(this,n(498)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,i=t.i;return t.w=r=r+1640531527|0,n=o[i+34&127],e=o[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,i,o,c,l=[],d=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,d=Math.max(d,t.length)),i=0,o=-32;o<d;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(c=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(c=c+1640531527|0,i=0==(n=l[127&o]^=r+c)?i+1:0);for(i>=128&&(l[127&(t&&t.length||0)]=-1),i=127,o=512;o>0;--o)r=l[i+34&127],n=l[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,l[i]=r^n;e.w=c,e.X=l,e.i=i}(t,e)}function d(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.X&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(489)&&n(504)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor4096=h}(0,e,n(489))}).call(this,n(498)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var b=t.b,e=t.c,n=t.d,a=t.a;return b=b<<25^b>>>7^e,e=e-n|0,n=n<<24^n>>>8^a,a=a-b|0,t.b=b=b<<20^b>>>12^e,t.c=e=e-n|0,t.d=n<<16^e>>>16^a,t.a=a-b|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(489)&&n(504)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.tychei=h}(0,e,n(489))}).call(this,n(498)(e))},function(e,t,n){var r;!function(o,c){var l,d=this,h=256,f=c.pow(h,6),m=c.pow(2,52),y=2*m,mask=255;function x(e,t,n){var r=[],x=k(O((t=1==t?{entropy:!0}:t||{}).entropy?[e,I(o)]:null==e?function(){try{var e;return l&&(e=l.randomBytes)?e=e(h):(e=new Uint8Array(h),(d.crypto||d.msCrypto).getRandomValues(e)),I(e)}catch(e){var t=d.navigator,n=t&&t.plugins;return[+new Date,d,n,d.screen,I(o)]}}():e,3),r),S=new v(r),N=function(){for(var e=S.g(6),t=f,n=0;e<m;)e=(e+n)*h,t*=h,n=S.g(1);for(;e>=y;)e/=2,t/=2,n>>>=1;return(e+n)/t};return N.int32=function(){return 0|S.g(4)},N.quick=function(){return S.g(4)/4294967296},N.double=N,k(I(S.S),o),(t.pass||n||function(e,t,n,r){return r&&(r.S&&w(r,S),e.state=function(){return w(S,{})}),n?(c.random=e,t):e})(N,x,"global"in t?t.global:this==c,t.state)}function v(e){var t,n=e.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);i<h;)s[i]=i++;for(i=0;i<h;i++)s[i]=s[o=mask&o+e[i%n]+(t=s[i])],s[o]=t;(r.g=function(e){for(var t,n=0,i=r.i,o=r.j,s=r.S;e--;)t=s[i=mask&i+1],n=n*h+s[mask&(s[i]=s[o=mask&o+t])+(s[o]=t)];return r.i=i,r.j=o,n})(h)}function w(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function O(e,t){var n,r=[],o=typeof e;if(t&&"object"==o)for(n in e)try{r.push(O(e[n],t-1))}catch(e){}return r.length?r:"string"==o?e:e+"\0"}function k(e,t){for(var n,r=e+"",o=0;o<r.length;)t[mask&o]=mask&(n^=19*t[mask&o])+r.charCodeAt(o++);return I(t)}function I(a){return String.fromCharCode.apply(0,a)}if(c.seedrandom=x,k(c.random(),o),e.exports){e.exports=x;try{l=n(724)}catch(e){}}else void 0===(r=function(){return x}.call(t,n,t,e))||(e.exports=r)}([],Math)},function(e,t,n){"use strict";var r,o;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(o||(o={}))},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return l}));var r=n(468),o=n(564),c=n(892);class l extends o.a{decodeUTF8(){return new d(this)}}class d extends c.a{constructor(e){super(),this.upstream=e,this.impl=new h(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class h extends o.b{constructor(e){if(super(),this.upstream=e,Object(r.Yd)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(765);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,text;return!t.done&&(n=t.value,text=Object(r.Yd)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(text),!0)}}}).call(this,n(494).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(564);class o extends r.a{split(e){return new c(this,e)}}class c extends o{constructor(e,t){super(),this.upstream=e,this.impl=new l(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class l extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const line of t.slice(0,-1))this.outputQueue.push(line);return this.carryover=t[t.length-1],!0}}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){var content=n(1003);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(25).default)("7132a15d",content,!0,{sourceMap:!1})},function(e,t,n){var r=n(24)(!1);r.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Kanit:wght@100;300;400;500;600;700&display=swap);"]),r.push([e.i,".theme--light.v-divider{border-color:rgba(0,0,0,.12)}.theme--dark.v-divider{border-color:hsla(0,0%,100%,.12)}.v-divider{display:block;flex:1 1 0px;max-width:100%;height:0;max-height:0;border:solid;border-width:thin 0 0;transition:inherit}.v-divider--inset:not(.v-divider--vertical){max-width:calc(100% - 72px)}.v-application--is-ltr .v-divider--inset:not(.v-divider--vertical){margin-left:72px}.v-application--is-rtl .v-divider--inset:not(.v-divider--vertical){margin-right:72px}.v-divider--vertical{align-self:stretch;border:solid;border-width:0 thin 0 0;display:inline-flex;height:inherit;min-height:100%;max-height:100%;max-width:0;width:0;vertical-align:text-bottom;margin:0 -1px}.v-divider--vertical.v-divider--inset{margin-top:8px;min-height:0;max-height:calc(100% - 16px)}",""]),e.exports=r},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n(12),n(9),n(10),n(6),n(17),n(11),n(18);var r=n(3),o=(n(1002),n(41));function c(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?c(Object(source),!0).forEach((function(t){Object(r.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):c(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}t.a=o.a.extend({name:"v-divider",props:{inset:Boolean,vertical:Boolean},render:function(e){var t;return this.$attrs.role&&"separator"!==this.$attrs.role||(t=this.vertical?"vertical":"horizontal"),e("hr",{class:l({"v-divider":!0,"v-divider--inset":this.inset,"v-divider--vertical":this.vertical},this.themeClasses),attrs:l({role:"separator","aria-orientation":t},this.$attrs),on:this.$listeners})}})},function(e,t,n){"use strict";var r=n(3),o=(n(59),n(68),n(222),n(10),n(6),n(11),n(65),n(138),n(12),n(9),n(17),n(18),n(15)),c=n(99),l=n(139);function d(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}function h(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?d(Object(source),!0).forEach((function(t){Object(r.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):d(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}t.a=Object(o.a)(c.a,Object(l.b)("form")).extend({name:"v-form",provide:function(){return{form:this}},inheritAttrs:!1,props:{disabled:Boolean,lazyValidation:Boolean,readonly:Boolean,value:Boolean},data:function(){return{inputs:[],watchers:[],errorBag:{}}},watch:{errorBag:{handler:function(e){var t=Object.values(e).includes(!0);this.$emit("input",!t)},deep:!0,immediate:!0}},methods:{watchInput:function(input){var e=this,t=function(input){return input.$watch("hasError",(function(t){e.$set(e.errorBag,input._uid,t)}),{immediate:!0})},n={_uid:input._uid,valid:function(){},shouldValidate:function(){}};return this.lazyValidation?n.shouldValidate=input.$watch("shouldValidate",(function(r){r&&(e.errorBag.hasOwnProperty(input._uid)||(n.valid=t(input)))})):n.valid=t(input),n},validate:function(){return 0===this.inputs.filter((function(input){return!input.validate(!0)})).length},reset:function(){this.inputs.forEach((function(input){return input.reset()})),this.resetErrorBag()},resetErrorBag:function(){var e=this;this.lazyValidation&&setTimeout((function(){e.errorBag={}}),0)},resetValidation:function(){this.inputs.forEach((function(input){return input.resetValidation()})),this.resetErrorBag()},register:function(input){this.inputs.push(input),this.watchers.push(this.watchInput(input))},unregister:function(input){var e=this.inputs.find((function(i){return i._uid===input._uid}));if(e){var t=this.watchers.find((function(i){return i._uid===e._uid}));t&&(t.valid(),t.shouldValidate()),this.watchers=this.watchers.filter((function(i){return i._uid!==e._uid})),this.inputs=this.inputs.filter((function(i){return i._uid!==e._uid})),this.$delete(this.errorBag,e._uid)}}},render:function(e){var t=this;return e("form",{staticClass:"v-form",attrs:h({novalidate:!0},this.attrs$),on:{submit:function(e){return t.$emit("submit",e)}}},this.$slots.default)}})}])]);